package builtin

/*------------------------------------------------------------------------------
//   This code was generated by template builtinclasses.bindings.go.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "builtinclasses.bindings.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//revive:disable

// #include <godot/gdextension_interface.h>
// #include <stdio.h>
// #include <stdlib.h>
import "C"
import (
	"github.com/godot-go/godot-go/pkg/log"
	"go.uber.org/zap"

	. "github.com/godot-go/godot-go/pkg/ffi"
)

// built-in classes
type stringMethodBindings struct {
	constructor_0                      GDExtensionPtrConstructor
	constructor_1                      GDExtensionPtrConstructor
	constructor_2                      GDExtensionPtrConstructor
	constructor_3                      GDExtensionPtrConstructor
	destructor                         GDExtensionPtrDestructor
	method_casecmp_to                  GDExtensionPtrBuiltInMethod
	method_nocasecmp_to                GDExtensionPtrBuiltInMethod
	method_naturalcasecmp_to           GDExtensionPtrBuiltInMethod
	method_naturalnocasecmp_to         GDExtensionPtrBuiltInMethod
	method_filecasecmp_to              GDExtensionPtrBuiltInMethod
	method_filenocasecmp_to            GDExtensionPtrBuiltInMethod
	method_length                      GDExtensionPtrBuiltInMethod
	method_substr                      GDExtensionPtrBuiltInMethod
	method_get_slice                   GDExtensionPtrBuiltInMethod
	method_get_slicec                  GDExtensionPtrBuiltInMethod
	method_get_slice_count             GDExtensionPtrBuiltInMethod
	method_find                        GDExtensionPtrBuiltInMethod
	method_findn                       GDExtensionPtrBuiltInMethod
	method_count                       GDExtensionPtrBuiltInMethod
	method_countn                      GDExtensionPtrBuiltInMethod
	method_rfind                       GDExtensionPtrBuiltInMethod
	method_rfindn                      GDExtensionPtrBuiltInMethod
	method_match                       GDExtensionPtrBuiltInMethod
	method_matchn                      GDExtensionPtrBuiltInMethod
	method_begins_with                 GDExtensionPtrBuiltInMethod
	method_ends_with                   GDExtensionPtrBuiltInMethod
	method_is_subsequence_of           GDExtensionPtrBuiltInMethod
	method_is_subsequence_ofn          GDExtensionPtrBuiltInMethod
	method_bigrams                     GDExtensionPtrBuiltInMethod
	method_similarity                  GDExtensionPtrBuiltInMethod
	method_format                      GDExtensionPtrBuiltInMethod
	method_replace                     GDExtensionPtrBuiltInMethod
	method_replacen                    GDExtensionPtrBuiltInMethod
	method_repeat                      GDExtensionPtrBuiltInMethod
	method_reverse                     GDExtensionPtrBuiltInMethod
	method_insert                      GDExtensionPtrBuiltInMethod
	method_erase                       GDExtensionPtrBuiltInMethod
	method_capitalize                  GDExtensionPtrBuiltInMethod
	method_to_camel_case               GDExtensionPtrBuiltInMethod
	method_to_pascal_case              GDExtensionPtrBuiltInMethod
	method_to_snake_case               GDExtensionPtrBuiltInMethod
	method_split                       GDExtensionPtrBuiltInMethod
	method_rsplit                      GDExtensionPtrBuiltInMethod
	method_split_floats                GDExtensionPtrBuiltInMethod
	method_join                        GDExtensionPtrBuiltInMethod
	method_to_upper                    GDExtensionPtrBuiltInMethod
	method_to_lower                    GDExtensionPtrBuiltInMethod
	method_left                        GDExtensionPtrBuiltInMethod
	method_right                       GDExtensionPtrBuiltInMethod
	method_strip_edges                 GDExtensionPtrBuiltInMethod
	method_strip_escapes               GDExtensionPtrBuiltInMethod
	method_lstrip                      GDExtensionPtrBuiltInMethod
	method_rstrip                      GDExtensionPtrBuiltInMethod
	method_get_extension               GDExtensionPtrBuiltInMethod
	method_get_basename                GDExtensionPtrBuiltInMethod
	method_path_join                   GDExtensionPtrBuiltInMethod
	method_unicode_at                  GDExtensionPtrBuiltInMethod
	method_indent                      GDExtensionPtrBuiltInMethod
	method_dedent                      GDExtensionPtrBuiltInMethod
	method_hash                        GDExtensionPtrBuiltInMethod
	method_md5_text                    GDExtensionPtrBuiltInMethod
	method_sha1_text                   GDExtensionPtrBuiltInMethod
	method_sha256_text                 GDExtensionPtrBuiltInMethod
	method_md5_buffer                  GDExtensionPtrBuiltInMethod
	method_sha1_buffer                 GDExtensionPtrBuiltInMethod
	method_sha256_buffer               GDExtensionPtrBuiltInMethod
	method_is_empty                    GDExtensionPtrBuiltInMethod
	method_contains                    GDExtensionPtrBuiltInMethod
	method_containsn                   GDExtensionPtrBuiltInMethod
	method_is_absolute_path            GDExtensionPtrBuiltInMethod
	method_is_relative_path            GDExtensionPtrBuiltInMethod
	method_simplify_path               GDExtensionPtrBuiltInMethod
	method_get_base_dir                GDExtensionPtrBuiltInMethod
	method_get_file                    GDExtensionPtrBuiltInMethod
	method_xml_escape                  GDExtensionPtrBuiltInMethod
	method_xml_unescape                GDExtensionPtrBuiltInMethod
	method_uri_encode                  GDExtensionPtrBuiltInMethod
	method_uri_decode                  GDExtensionPtrBuiltInMethod
	method_c_escape                    GDExtensionPtrBuiltInMethod
	method_c_unescape                  GDExtensionPtrBuiltInMethod
	method_json_escape                 GDExtensionPtrBuiltInMethod
	method_validate_node_name          GDExtensionPtrBuiltInMethod
	method_validate_filename           GDExtensionPtrBuiltInMethod
	method_is_valid_identifier         GDExtensionPtrBuiltInMethod
	method_is_valid_int                GDExtensionPtrBuiltInMethod
	method_is_valid_float              GDExtensionPtrBuiltInMethod
	method_is_valid_hex_number         GDExtensionPtrBuiltInMethod
	method_is_valid_html_color         GDExtensionPtrBuiltInMethod
	method_is_valid_ip_address         GDExtensionPtrBuiltInMethod
	method_is_valid_filename           GDExtensionPtrBuiltInMethod
	method_to_int                      GDExtensionPtrBuiltInMethod
	method_to_float                    GDExtensionPtrBuiltInMethod
	method_hex_to_int                  GDExtensionPtrBuiltInMethod
	method_bin_to_int                  GDExtensionPtrBuiltInMethod
	method_lpad                        GDExtensionPtrBuiltInMethod
	method_rpad                        GDExtensionPtrBuiltInMethod
	method_pad_decimals                GDExtensionPtrBuiltInMethod
	method_pad_zeros                   GDExtensionPtrBuiltInMethod
	method_trim_prefix                 GDExtensionPtrBuiltInMethod
	method_trim_suffix                 GDExtensionPtrBuiltInMethod
	method_to_ascii_buffer             GDExtensionPtrBuiltInMethod
	method_to_utf8_buffer              GDExtensionPtrBuiltInMethod
	method_to_utf16_buffer             GDExtensionPtrBuiltInMethod
	method_to_utf32_buffer             GDExtensionPtrBuiltInMethod
	method_hex_decode                  GDExtensionPtrBuiltInMethod
	method_to_wchar_buffer             GDExtensionPtrBuiltInMethod
	method_num_scientific              GDExtensionPtrBuiltInMethod
	method_num                         GDExtensionPtrBuiltInMethod
	method_num_int64                   GDExtensionPtrBuiltInMethod
	method_num_uint64                  GDExtensionPtrBuiltInMethod
	method_chr                         GDExtensionPtrBuiltInMethod
	method_humanize_size               GDExtensionPtrBuiltInMethod
	indexed_setter                     GDExtensionPtrIndexedSetter
	indexed_getter                     GDExtensionPtrIndexedGetter
	operator_equal_Variant             GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant         GDExtensionPtrOperatorEvaluator
	operator_module_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                       GDExtensionPtrOperatorEvaluator
	operator_module_bool               GDExtensionPtrOperatorEvaluator
	operator_module_int                GDExtensionPtrOperatorEvaluator
	operator_module_float              GDExtensionPtrOperatorEvaluator
	operator_equal_String              GDExtensionPtrOperatorEvaluator
	operator_not_equal_String          GDExtensionPtrOperatorEvaluator
	operator_less_String               GDExtensionPtrOperatorEvaluator
	operator_less_equal_String         GDExtensionPtrOperatorEvaluator
	operator_greater_String            GDExtensionPtrOperatorEvaluator
	operator_greater_equal_String      GDExtensionPtrOperatorEvaluator
	operator_add_String                GDExtensionPtrOperatorEvaluator
	operator_module_String             GDExtensionPtrOperatorEvaluator
	operator_in_String                 GDExtensionPtrOperatorEvaluator
	operator_module_Vector2            GDExtensionPtrOperatorEvaluator
	operator_module_Vector2i           GDExtensionPtrOperatorEvaluator
	operator_module_Rect2              GDExtensionPtrOperatorEvaluator
	operator_module_Rect2i             GDExtensionPtrOperatorEvaluator
	operator_module_Vector3            GDExtensionPtrOperatorEvaluator
	operator_module_Vector3i           GDExtensionPtrOperatorEvaluator
	operator_module_Transform2D        GDExtensionPtrOperatorEvaluator
	operator_module_Vector4            GDExtensionPtrOperatorEvaluator
	operator_module_Vector4i           GDExtensionPtrOperatorEvaluator
	operator_module_Plane              GDExtensionPtrOperatorEvaluator
	operator_module_Quaternion         GDExtensionPtrOperatorEvaluator
	operator_module_AABB               GDExtensionPtrOperatorEvaluator
	operator_module_Basis              GDExtensionPtrOperatorEvaluator
	operator_module_Transform3D        GDExtensionPtrOperatorEvaluator
	operator_module_Projection         GDExtensionPtrOperatorEvaluator
	operator_module_Color              GDExtensionPtrOperatorEvaluator
	operator_equal_StringName          GDExtensionPtrOperatorEvaluator
	operator_not_equal_StringName      GDExtensionPtrOperatorEvaluator
	operator_add_StringName            GDExtensionPtrOperatorEvaluator
	operator_module_StringName         GDExtensionPtrOperatorEvaluator
	operator_in_StringName             GDExtensionPtrOperatorEvaluator
	operator_module_NodePath           GDExtensionPtrOperatorEvaluator
	operator_module_Object             GDExtensionPtrOperatorEvaluator
	operator_in_Object                 GDExtensionPtrOperatorEvaluator
	operator_module_Callable           GDExtensionPtrOperatorEvaluator
	operator_module_Signal             GDExtensionPtrOperatorEvaluator
	operator_module_Dictionary         GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary             GDExtensionPtrOperatorEvaluator
	operator_module_Array              GDExtensionPtrOperatorEvaluator
	operator_in_Array                  GDExtensionPtrOperatorEvaluator
	operator_module_PackedByteArray    GDExtensionPtrOperatorEvaluator
	operator_module_PackedInt32Array   GDExtensionPtrOperatorEvaluator
	operator_module_PackedInt64Array   GDExtensionPtrOperatorEvaluator
	operator_module_PackedFloat32Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedFloat64Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedStringArray  GDExtensionPtrOperatorEvaluator
	operator_in_PackedStringArray      GDExtensionPtrOperatorEvaluator
	operator_module_PackedVector2Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedVector3Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedColorArray   GDExtensionPtrOperatorEvaluator
	operator_module_PackedVector4Array GDExtensionPtrOperatorEvaluator
}

var globalStringMethodBindings stringMethodBindings

func stringInitConstructorBindings() {
	log.Debug("stringInitConstructorBindings called")

	log.Debug("globalStringMethodBindings.constructor_0")
	globalStringMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING, 0)
	log.Debug("globalStringMethodBindings.constructor_1")
	globalStringMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING, 1)
	log.Debug("globalStringMethodBindings.constructor_2")
	globalStringMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING, 2)
	log.Debug("globalStringMethodBindings.constructor_3")
	globalStringMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING, 3)
	log.Debug("globalStringMethodBindings.destructor")
	globalStringMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_STRING)
}

func stringInitMethodBindings() {
	log.Debug("stringInitMethodBindings called")

	missingMethods := make([]string, 0, 107)

	methodName0 := NewStringNameWithLatin1Chars("casecmp_to")
	defer methodName0.Destroy()
	log.Debug("globalStringMethodBindings.method_casecmp_to")
	globalStringMethodBindings.method_casecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName0.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_casecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_casecmp_to")
	}
	methodName1 := NewStringNameWithLatin1Chars("nocasecmp_to")
	defer methodName1.Destroy()
	log.Debug("globalStringMethodBindings.method_nocasecmp_to")
	globalStringMethodBindings.method_nocasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName1.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_nocasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_nocasecmp_to")
	}
	methodName2 := NewStringNameWithLatin1Chars("naturalcasecmp_to")
	defer methodName2.Destroy()
	log.Debug("globalStringMethodBindings.method_naturalcasecmp_to")
	globalStringMethodBindings.method_naturalcasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName2.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_naturalcasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_naturalcasecmp_to")
	}
	methodName3 := NewStringNameWithLatin1Chars("naturalnocasecmp_to")
	defer methodName3.Destroy()
	log.Debug("globalStringMethodBindings.method_naturalnocasecmp_to")
	globalStringMethodBindings.method_naturalnocasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName3.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_naturalnocasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_naturalnocasecmp_to")
	}
	methodName4 := NewStringNameWithLatin1Chars("filecasecmp_to")
	defer methodName4.Destroy()
	log.Debug("globalStringMethodBindings.method_filecasecmp_to")
	globalStringMethodBindings.method_filecasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName4.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_filecasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_filecasecmp_to")
	}
	methodName5 := NewStringNameWithLatin1Chars("filenocasecmp_to")
	defer methodName5.Destroy()
	log.Debug("globalStringMethodBindings.method_filenocasecmp_to")
	globalStringMethodBindings.method_filenocasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName5.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_filenocasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_filenocasecmp_to")
	}
	methodName6 := NewStringNameWithLatin1Chars("length")
	defer methodName6.Destroy()
	log.Debug("globalStringMethodBindings.method_length")
	globalStringMethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName6.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringMethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_length")
	}
	methodName7 := NewStringNameWithLatin1Chars("substr")
	defer methodName7.Destroy()
	log.Debug("globalStringMethodBindings.method_substr")
	globalStringMethodBindings.method_substr = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName7.AsGDExtensionConstStringNamePtr(), 787537301)
	if globalStringMethodBindings.method_substr == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_substr")
	}
	methodName8 := NewStringNameWithLatin1Chars("get_slice")
	defer methodName8.Destroy()
	log.Debug("globalStringMethodBindings.method_get_slice")
	globalStringMethodBindings.method_get_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName8.AsGDExtensionConstStringNamePtr(), 3535100402)
	if globalStringMethodBindings.method_get_slice == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_slice")
	}
	methodName9 := NewStringNameWithLatin1Chars("get_slicec")
	defer methodName9.Destroy()
	log.Debug("globalStringMethodBindings.method_get_slicec")
	globalStringMethodBindings.method_get_slicec = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName9.AsGDExtensionConstStringNamePtr(), 787537301)
	if globalStringMethodBindings.method_get_slicec == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_slicec")
	}
	methodName10 := NewStringNameWithLatin1Chars("get_slice_count")
	defer methodName10.Destroy()
	log.Debug("globalStringMethodBindings.method_get_slice_count")
	globalStringMethodBindings.method_get_slice_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName10.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringMethodBindings.method_get_slice_count == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_slice_count")
	}
	methodName11 := NewStringNameWithLatin1Chars("find")
	defer methodName11.Destroy()
	log.Debug("globalStringMethodBindings.method_find")
	globalStringMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName11.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_find")
	}
	methodName12 := NewStringNameWithLatin1Chars("findn")
	defer methodName12.Destroy()
	log.Debug("globalStringMethodBindings.method_findn")
	globalStringMethodBindings.method_findn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName12.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringMethodBindings.method_findn == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_findn")
	}
	methodName13 := NewStringNameWithLatin1Chars("count")
	defer methodName13.Destroy()
	log.Debug("globalStringMethodBindings.method_count")
	globalStringMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName13.AsGDExtensionConstStringNamePtr(), 2343087891)
	if globalStringMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_count")
	}
	methodName14 := NewStringNameWithLatin1Chars("countn")
	defer methodName14.Destroy()
	log.Debug("globalStringMethodBindings.method_countn")
	globalStringMethodBindings.method_countn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName14.AsGDExtensionConstStringNamePtr(), 2343087891)
	if globalStringMethodBindings.method_countn == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_countn")
	}
	methodName15 := NewStringNameWithLatin1Chars("rfind")
	defer methodName15.Destroy()
	log.Debug("globalStringMethodBindings.method_rfind")
	globalStringMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName15.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_rfind")
	}
	methodName16 := NewStringNameWithLatin1Chars("rfindn")
	defer methodName16.Destroy()
	log.Debug("globalStringMethodBindings.method_rfindn")
	globalStringMethodBindings.method_rfindn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName16.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringMethodBindings.method_rfindn == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_rfindn")
	}
	methodName17 := NewStringNameWithLatin1Chars("match")
	defer methodName17.Destroy()
	log.Debug("globalStringMethodBindings.method_match")
	globalStringMethodBindings.method_match = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName17.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_match == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_match")
	}
	methodName18 := NewStringNameWithLatin1Chars("matchn")
	defer methodName18.Destroy()
	log.Debug("globalStringMethodBindings.method_matchn")
	globalStringMethodBindings.method_matchn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName18.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_matchn == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_matchn")
	}
	methodName19 := NewStringNameWithLatin1Chars("begins_with")
	defer methodName19.Destroy()
	log.Debug("globalStringMethodBindings.method_begins_with")
	globalStringMethodBindings.method_begins_with = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName19.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_begins_with == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_begins_with")
	}
	methodName20 := NewStringNameWithLatin1Chars("ends_with")
	defer methodName20.Destroy()
	log.Debug("globalStringMethodBindings.method_ends_with")
	globalStringMethodBindings.method_ends_with = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName20.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_ends_with == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_ends_with")
	}
	methodName21 := NewStringNameWithLatin1Chars("is_subsequence_of")
	defer methodName21.Destroy()
	log.Debug("globalStringMethodBindings.method_is_subsequence_of")
	globalStringMethodBindings.method_is_subsequence_of = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName21.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_is_subsequence_of == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_subsequence_of")
	}
	methodName22 := NewStringNameWithLatin1Chars("is_subsequence_ofn")
	defer methodName22.Destroy()
	log.Debug("globalStringMethodBindings.method_is_subsequence_ofn")
	globalStringMethodBindings.method_is_subsequence_ofn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName22.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_is_subsequence_ofn == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_subsequence_ofn")
	}
	methodName23 := NewStringNameWithLatin1Chars("bigrams")
	defer methodName23.Destroy()
	log.Debug("globalStringMethodBindings.method_bigrams")
	globalStringMethodBindings.method_bigrams = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName23.AsGDExtensionConstStringNamePtr(), 747180633)
	if globalStringMethodBindings.method_bigrams == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_bigrams")
	}
	methodName24 := NewStringNameWithLatin1Chars("similarity")
	defer methodName24.Destroy()
	log.Debug("globalStringMethodBindings.method_similarity")
	globalStringMethodBindings.method_similarity = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName24.AsGDExtensionConstStringNamePtr(), 2697460964)
	if globalStringMethodBindings.method_similarity == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_similarity")
	}
	methodName25 := NewStringNameWithLatin1Chars("format")
	defer methodName25.Destroy()
	log.Debug("globalStringMethodBindings.method_format")
	globalStringMethodBindings.method_format = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName25.AsGDExtensionConstStringNamePtr(), 3212199029)
	if globalStringMethodBindings.method_format == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_format")
	}
	methodName26 := NewStringNameWithLatin1Chars("replace")
	defer methodName26.Destroy()
	log.Debug("globalStringMethodBindings.method_replace")
	globalStringMethodBindings.method_replace = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName26.AsGDExtensionConstStringNamePtr(), 1340436205)
	if globalStringMethodBindings.method_replace == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_replace")
	}
	methodName27 := NewStringNameWithLatin1Chars("replacen")
	defer methodName27.Destroy()
	log.Debug("globalStringMethodBindings.method_replacen")
	globalStringMethodBindings.method_replacen = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName27.AsGDExtensionConstStringNamePtr(), 1340436205)
	if globalStringMethodBindings.method_replacen == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_replacen")
	}
	methodName28 := NewStringNameWithLatin1Chars("repeat")
	defer methodName28.Destroy()
	log.Debug("globalStringMethodBindings.method_repeat")
	globalStringMethodBindings.method_repeat = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName28.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringMethodBindings.method_repeat == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_repeat")
	}
	methodName29 := NewStringNameWithLatin1Chars("reverse")
	defer methodName29.Destroy()
	log.Debug("globalStringMethodBindings.method_reverse")
	globalStringMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName29.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_reverse")
	}
	methodName30 := NewStringNameWithLatin1Chars("insert")
	defer methodName30.Destroy()
	log.Debug("globalStringMethodBindings.method_insert")
	globalStringMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName30.AsGDExtensionConstStringNamePtr(), 248737229)
	if globalStringMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_insert")
	}
	methodName31 := NewStringNameWithLatin1Chars("erase")
	defer methodName31.Destroy()
	log.Debug("globalStringMethodBindings.method_erase")
	globalStringMethodBindings.method_erase = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName31.AsGDExtensionConstStringNamePtr(), 787537301)
	if globalStringMethodBindings.method_erase == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_erase")
	}
	methodName32 := NewStringNameWithLatin1Chars("capitalize")
	defer methodName32.Destroy()
	log.Debug("globalStringMethodBindings.method_capitalize")
	globalStringMethodBindings.method_capitalize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName32.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_capitalize == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_capitalize")
	}
	methodName33 := NewStringNameWithLatin1Chars("to_camel_case")
	defer methodName33.Destroy()
	log.Debug("globalStringMethodBindings.method_to_camel_case")
	globalStringMethodBindings.method_to_camel_case = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName33.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_to_camel_case == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_camel_case")
	}
	methodName34 := NewStringNameWithLatin1Chars("to_pascal_case")
	defer methodName34.Destroy()
	log.Debug("globalStringMethodBindings.method_to_pascal_case")
	globalStringMethodBindings.method_to_pascal_case = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName34.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_to_pascal_case == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_pascal_case")
	}
	methodName35 := NewStringNameWithLatin1Chars("to_snake_case")
	defer methodName35.Destroy()
	log.Debug("globalStringMethodBindings.method_to_snake_case")
	globalStringMethodBindings.method_to_snake_case = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName35.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_to_snake_case == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_snake_case")
	}
	methodName36 := NewStringNameWithLatin1Chars("split")
	defer methodName36.Destroy()
	log.Debug("globalStringMethodBindings.method_split")
	globalStringMethodBindings.method_split = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName36.AsGDExtensionConstStringNamePtr(), 1252735785)
	if globalStringMethodBindings.method_split == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_split")
	}
	methodName37 := NewStringNameWithLatin1Chars("rsplit")
	defer methodName37.Destroy()
	log.Debug("globalStringMethodBindings.method_rsplit")
	globalStringMethodBindings.method_rsplit = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName37.AsGDExtensionConstStringNamePtr(), 1252735785)
	if globalStringMethodBindings.method_rsplit == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_rsplit")
	}
	methodName38 := NewStringNameWithLatin1Chars("split_floats")
	defer methodName38.Destroy()
	log.Debug("globalStringMethodBindings.method_split_floats")
	globalStringMethodBindings.method_split_floats = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName38.AsGDExtensionConstStringNamePtr(), 2092079095)
	if globalStringMethodBindings.method_split_floats == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_split_floats")
	}
	methodName39 := NewStringNameWithLatin1Chars("join")
	defer methodName39.Destroy()
	log.Debug("globalStringMethodBindings.method_join")
	globalStringMethodBindings.method_join = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName39.AsGDExtensionConstStringNamePtr(), 3595973238)
	if globalStringMethodBindings.method_join == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_join")
	}
	methodName40 := NewStringNameWithLatin1Chars("to_upper")
	defer methodName40.Destroy()
	log.Debug("globalStringMethodBindings.method_to_upper")
	globalStringMethodBindings.method_to_upper = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName40.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_to_upper == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_upper")
	}
	methodName41 := NewStringNameWithLatin1Chars("to_lower")
	defer methodName41.Destroy()
	log.Debug("globalStringMethodBindings.method_to_lower")
	globalStringMethodBindings.method_to_lower = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName41.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_to_lower == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_lower")
	}
	methodName42 := NewStringNameWithLatin1Chars("left")
	defer methodName42.Destroy()
	log.Debug("globalStringMethodBindings.method_left")
	globalStringMethodBindings.method_left = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName42.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringMethodBindings.method_left == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_left")
	}
	methodName43 := NewStringNameWithLatin1Chars("right")
	defer methodName43.Destroy()
	log.Debug("globalStringMethodBindings.method_right")
	globalStringMethodBindings.method_right = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName43.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringMethodBindings.method_right == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_right")
	}
	methodName44 := NewStringNameWithLatin1Chars("strip_edges")
	defer methodName44.Destroy()
	log.Debug("globalStringMethodBindings.method_strip_edges")
	globalStringMethodBindings.method_strip_edges = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName44.AsGDExtensionConstStringNamePtr(), 907855311)
	if globalStringMethodBindings.method_strip_edges == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_strip_edges")
	}
	methodName45 := NewStringNameWithLatin1Chars("strip_escapes")
	defer methodName45.Destroy()
	log.Debug("globalStringMethodBindings.method_strip_escapes")
	globalStringMethodBindings.method_strip_escapes = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName45.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_strip_escapes == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_strip_escapes")
	}
	methodName46 := NewStringNameWithLatin1Chars("lstrip")
	defer methodName46.Destroy()
	log.Debug("globalStringMethodBindings.method_lstrip")
	globalStringMethodBindings.method_lstrip = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName46.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringMethodBindings.method_lstrip == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_lstrip")
	}
	methodName47 := NewStringNameWithLatin1Chars("rstrip")
	defer methodName47.Destroy()
	log.Debug("globalStringMethodBindings.method_rstrip")
	globalStringMethodBindings.method_rstrip = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName47.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringMethodBindings.method_rstrip == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_rstrip")
	}
	methodName48 := NewStringNameWithLatin1Chars("get_extension")
	defer methodName48.Destroy()
	log.Debug("globalStringMethodBindings.method_get_extension")
	globalStringMethodBindings.method_get_extension = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName48.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_get_extension == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_extension")
	}
	methodName49 := NewStringNameWithLatin1Chars("get_basename")
	defer methodName49.Destroy()
	log.Debug("globalStringMethodBindings.method_get_basename")
	globalStringMethodBindings.method_get_basename = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName49.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_get_basename == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_basename")
	}
	methodName50 := NewStringNameWithLatin1Chars("path_join")
	defer methodName50.Destroy()
	log.Debug("globalStringMethodBindings.method_path_join")
	globalStringMethodBindings.method_path_join = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName50.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringMethodBindings.method_path_join == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_path_join")
	}
	methodName51 := NewStringNameWithLatin1Chars("unicode_at")
	defer methodName51.Destroy()
	log.Debug("globalStringMethodBindings.method_unicode_at")
	globalStringMethodBindings.method_unicode_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName51.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalStringMethodBindings.method_unicode_at == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_unicode_at")
	}
	methodName52 := NewStringNameWithLatin1Chars("indent")
	defer methodName52.Destroy()
	log.Debug("globalStringMethodBindings.method_indent")
	globalStringMethodBindings.method_indent = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName52.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringMethodBindings.method_indent == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_indent")
	}
	methodName53 := NewStringNameWithLatin1Chars("dedent")
	defer methodName53.Destroy()
	log.Debug("globalStringMethodBindings.method_dedent")
	globalStringMethodBindings.method_dedent = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName53.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_dedent == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_dedent")
	}
	methodName54 := NewStringNameWithLatin1Chars("hash")
	defer methodName54.Destroy()
	log.Debug("globalStringMethodBindings.method_hash")
	globalStringMethodBindings.method_hash = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName54.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringMethodBindings.method_hash == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_hash")
	}
	methodName55 := NewStringNameWithLatin1Chars("md5_text")
	defer methodName55.Destroy()
	log.Debug("globalStringMethodBindings.method_md5_text")
	globalStringMethodBindings.method_md5_text = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName55.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_md5_text == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_md5_text")
	}
	methodName56 := NewStringNameWithLatin1Chars("sha1_text")
	defer methodName56.Destroy()
	log.Debug("globalStringMethodBindings.method_sha1_text")
	globalStringMethodBindings.method_sha1_text = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName56.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_sha1_text == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_sha1_text")
	}
	methodName57 := NewStringNameWithLatin1Chars("sha256_text")
	defer methodName57.Destroy()
	log.Debug("globalStringMethodBindings.method_sha256_text")
	globalStringMethodBindings.method_sha256_text = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName57.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_sha256_text == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_sha256_text")
	}
	methodName58 := NewStringNameWithLatin1Chars("md5_buffer")
	defer methodName58.Destroy()
	log.Debug("globalStringMethodBindings.method_md5_buffer")
	globalStringMethodBindings.method_md5_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName58.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_md5_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_md5_buffer")
	}
	methodName59 := NewStringNameWithLatin1Chars("sha1_buffer")
	defer methodName59.Destroy()
	log.Debug("globalStringMethodBindings.method_sha1_buffer")
	globalStringMethodBindings.method_sha1_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName59.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_sha1_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_sha1_buffer")
	}
	methodName60 := NewStringNameWithLatin1Chars("sha256_buffer")
	defer methodName60.Destroy()
	log.Debug("globalStringMethodBindings.method_sha256_buffer")
	globalStringMethodBindings.method_sha256_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName60.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_sha256_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_sha256_buffer")
	}
	methodName61 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName61.Destroy()
	log.Debug("globalStringMethodBindings.method_is_empty")
	globalStringMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName61.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_empty")
	}
	methodName62 := NewStringNameWithLatin1Chars("contains")
	defer methodName62.Destroy()
	log.Debug("globalStringMethodBindings.method_contains")
	globalStringMethodBindings.method_contains = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName62.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_contains == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_contains")
	}
	methodName63 := NewStringNameWithLatin1Chars("containsn")
	defer methodName63.Destroy()
	log.Debug("globalStringMethodBindings.method_containsn")
	globalStringMethodBindings.method_containsn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName63.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringMethodBindings.method_containsn == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_containsn")
	}
	methodName64 := NewStringNameWithLatin1Chars("is_absolute_path")
	defer methodName64.Destroy()
	log.Debug("globalStringMethodBindings.method_is_absolute_path")
	globalStringMethodBindings.method_is_absolute_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName64.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_absolute_path == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_absolute_path")
	}
	methodName65 := NewStringNameWithLatin1Chars("is_relative_path")
	defer methodName65.Destroy()
	log.Debug("globalStringMethodBindings.method_is_relative_path")
	globalStringMethodBindings.method_is_relative_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName65.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_relative_path == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_relative_path")
	}
	methodName66 := NewStringNameWithLatin1Chars("simplify_path")
	defer methodName66.Destroy()
	log.Debug("globalStringMethodBindings.method_simplify_path")
	globalStringMethodBindings.method_simplify_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName66.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_simplify_path == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_simplify_path")
	}
	methodName67 := NewStringNameWithLatin1Chars("get_base_dir")
	defer methodName67.Destroy()
	log.Debug("globalStringMethodBindings.method_get_base_dir")
	globalStringMethodBindings.method_get_base_dir = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName67.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_get_base_dir == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_base_dir")
	}
	methodName68 := NewStringNameWithLatin1Chars("get_file")
	defer methodName68.Destroy()
	log.Debug("globalStringMethodBindings.method_get_file")
	globalStringMethodBindings.method_get_file = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName68.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_get_file == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_get_file")
	}
	methodName69 := NewStringNameWithLatin1Chars("xml_escape")
	defer methodName69.Destroy()
	log.Debug("globalStringMethodBindings.method_xml_escape")
	globalStringMethodBindings.method_xml_escape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName69.AsGDExtensionConstStringNamePtr(), 3429816538)
	if globalStringMethodBindings.method_xml_escape == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_xml_escape")
	}
	methodName70 := NewStringNameWithLatin1Chars("xml_unescape")
	defer methodName70.Destroy()
	log.Debug("globalStringMethodBindings.method_xml_unescape")
	globalStringMethodBindings.method_xml_unescape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName70.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_xml_unescape == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_xml_unescape")
	}
	methodName71 := NewStringNameWithLatin1Chars("uri_encode")
	defer methodName71.Destroy()
	log.Debug("globalStringMethodBindings.method_uri_encode")
	globalStringMethodBindings.method_uri_encode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName71.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_uri_encode == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_uri_encode")
	}
	methodName72 := NewStringNameWithLatin1Chars("uri_decode")
	defer methodName72.Destroy()
	log.Debug("globalStringMethodBindings.method_uri_decode")
	globalStringMethodBindings.method_uri_decode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName72.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_uri_decode == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_uri_decode")
	}
	methodName73 := NewStringNameWithLatin1Chars("c_escape")
	defer methodName73.Destroy()
	log.Debug("globalStringMethodBindings.method_c_escape")
	globalStringMethodBindings.method_c_escape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName73.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_c_escape == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_c_escape")
	}
	methodName74 := NewStringNameWithLatin1Chars("c_unescape")
	defer methodName74.Destroy()
	log.Debug("globalStringMethodBindings.method_c_unescape")
	globalStringMethodBindings.method_c_unescape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName74.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_c_unescape == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_c_unescape")
	}
	methodName75 := NewStringNameWithLatin1Chars("json_escape")
	defer methodName75.Destroy()
	log.Debug("globalStringMethodBindings.method_json_escape")
	globalStringMethodBindings.method_json_escape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName75.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_json_escape == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_json_escape")
	}
	methodName76 := NewStringNameWithLatin1Chars("validate_node_name")
	defer methodName76.Destroy()
	log.Debug("globalStringMethodBindings.method_validate_node_name")
	globalStringMethodBindings.method_validate_node_name = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName76.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_validate_node_name == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_validate_node_name")
	}
	methodName77 := NewStringNameWithLatin1Chars("validate_filename")
	defer methodName77.Destroy()
	log.Debug("globalStringMethodBindings.method_validate_filename")
	globalStringMethodBindings.method_validate_filename = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName77.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringMethodBindings.method_validate_filename == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_validate_filename")
	}
	methodName78 := NewStringNameWithLatin1Chars("is_valid_identifier")
	defer methodName78.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_identifier")
	globalStringMethodBindings.method_is_valid_identifier = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName78.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_valid_identifier == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_identifier")
	}
	methodName79 := NewStringNameWithLatin1Chars("is_valid_int")
	defer methodName79.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_int")
	globalStringMethodBindings.method_is_valid_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName79.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_valid_int == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_int")
	}
	methodName80 := NewStringNameWithLatin1Chars("is_valid_float")
	defer methodName80.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_float")
	globalStringMethodBindings.method_is_valid_float = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName80.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_valid_float == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_float")
	}
	methodName81 := NewStringNameWithLatin1Chars("is_valid_hex_number")
	defer methodName81.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_hex_number")
	globalStringMethodBindings.method_is_valid_hex_number = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName81.AsGDExtensionConstStringNamePtr(), 593672999)
	if globalStringMethodBindings.method_is_valid_hex_number == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_hex_number")
	}
	methodName82 := NewStringNameWithLatin1Chars("is_valid_html_color")
	defer methodName82.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_html_color")
	globalStringMethodBindings.method_is_valid_html_color = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName82.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_valid_html_color == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_html_color")
	}
	methodName83 := NewStringNameWithLatin1Chars("is_valid_ip_address")
	defer methodName83.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_ip_address")
	globalStringMethodBindings.method_is_valid_ip_address = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName83.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_valid_ip_address == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_ip_address")
	}
	methodName84 := NewStringNameWithLatin1Chars("is_valid_filename")
	defer methodName84.Destroy()
	log.Debug("globalStringMethodBindings.method_is_valid_filename")
	globalStringMethodBindings.method_is_valid_filename = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName84.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringMethodBindings.method_is_valid_filename == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_is_valid_filename")
	}
	methodName85 := NewStringNameWithLatin1Chars("to_int")
	defer methodName85.Destroy()
	log.Debug("globalStringMethodBindings.method_to_int")
	globalStringMethodBindings.method_to_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName85.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringMethodBindings.method_to_int == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_int")
	}
	methodName86 := NewStringNameWithLatin1Chars("to_float")
	defer methodName86.Destroy()
	log.Debug("globalStringMethodBindings.method_to_float")
	globalStringMethodBindings.method_to_float = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName86.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalStringMethodBindings.method_to_float == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_float")
	}
	methodName87 := NewStringNameWithLatin1Chars("hex_to_int")
	defer methodName87.Destroy()
	log.Debug("globalStringMethodBindings.method_hex_to_int")
	globalStringMethodBindings.method_hex_to_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName87.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringMethodBindings.method_hex_to_int == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_hex_to_int")
	}
	methodName88 := NewStringNameWithLatin1Chars("bin_to_int")
	defer methodName88.Destroy()
	log.Debug("globalStringMethodBindings.method_bin_to_int")
	globalStringMethodBindings.method_bin_to_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName88.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringMethodBindings.method_bin_to_int == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_bin_to_int")
	}
	methodName89 := NewStringNameWithLatin1Chars("lpad")
	defer methodName89.Destroy()
	log.Debug("globalStringMethodBindings.method_lpad")
	globalStringMethodBindings.method_lpad = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName89.AsGDExtensionConstStringNamePtr(), 248737229)
	if globalStringMethodBindings.method_lpad == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_lpad")
	}
	methodName90 := NewStringNameWithLatin1Chars("rpad")
	defer methodName90.Destroy()
	log.Debug("globalStringMethodBindings.method_rpad")
	globalStringMethodBindings.method_rpad = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName90.AsGDExtensionConstStringNamePtr(), 248737229)
	if globalStringMethodBindings.method_rpad == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_rpad")
	}
	methodName91 := NewStringNameWithLatin1Chars("pad_decimals")
	defer methodName91.Destroy()
	log.Debug("globalStringMethodBindings.method_pad_decimals")
	globalStringMethodBindings.method_pad_decimals = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName91.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringMethodBindings.method_pad_decimals == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_pad_decimals")
	}
	methodName92 := NewStringNameWithLatin1Chars("pad_zeros")
	defer methodName92.Destroy()
	log.Debug("globalStringMethodBindings.method_pad_zeros")
	globalStringMethodBindings.method_pad_zeros = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName92.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringMethodBindings.method_pad_zeros == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_pad_zeros")
	}
	methodName93 := NewStringNameWithLatin1Chars("trim_prefix")
	defer methodName93.Destroy()
	log.Debug("globalStringMethodBindings.method_trim_prefix")
	globalStringMethodBindings.method_trim_prefix = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName93.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringMethodBindings.method_trim_prefix == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_trim_prefix")
	}
	methodName94 := NewStringNameWithLatin1Chars("trim_suffix")
	defer methodName94.Destroy()
	log.Debug("globalStringMethodBindings.method_trim_suffix")
	globalStringMethodBindings.method_trim_suffix = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName94.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringMethodBindings.method_trim_suffix == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_trim_suffix")
	}
	methodName95 := NewStringNameWithLatin1Chars("to_ascii_buffer")
	defer methodName95.Destroy()
	log.Debug("globalStringMethodBindings.method_to_ascii_buffer")
	globalStringMethodBindings.method_to_ascii_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName95.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_to_ascii_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_ascii_buffer")
	}
	methodName96 := NewStringNameWithLatin1Chars("to_utf8_buffer")
	defer methodName96.Destroy()
	log.Debug("globalStringMethodBindings.method_to_utf8_buffer")
	globalStringMethodBindings.method_to_utf8_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName96.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_to_utf8_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_utf8_buffer")
	}
	methodName97 := NewStringNameWithLatin1Chars("to_utf16_buffer")
	defer methodName97.Destroy()
	log.Debug("globalStringMethodBindings.method_to_utf16_buffer")
	globalStringMethodBindings.method_to_utf16_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName97.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_to_utf16_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_utf16_buffer")
	}
	methodName98 := NewStringNameWithLatin1Chars("to_utf32_buffer")
	defer methodName98.Destroy()
	log.Debug("globalStringMethodBindings.method_to_utf32_buffer")
	globalStringMethodBindings.method_to_utf32_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName98.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_to_utf32_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_utf32_buffer")
	}
	methodName99 := NewStringNameWithLatin1Chars("hex_decode")
	defer methodName99.Destroy()
	log.Debug("globalStringMethodBindings.method_hex_decode")
	globalStringMethodBindings.method_hex_decode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName99.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_hex_decode == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_hex_decode")
	}
	methodName100 := NewStringNameWithLatin1Chars("to_wchar_buffer")
	defer methodName100.Destroy()
	log.Debug("globalStringMethodBindings.method_to_wchar_buffer")
	globalStringMethodBindings.method_to_wchar_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName100.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringMethodBindings.method_to_wchar_buffer == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_to_wchar_buffer")
	}
	methodName101 := NewStringNameWithLatin1Chars("num_scientific")
	defer methodName101.Destroy()
	log.Debug("globalStringMethodBindings.method_num_scientific")
	globalStringMethodBindings.method_num_scientific = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName101.AsGDExtensionConstStringNamePtr(), 2710373411)
	if globalStringMethodBindings.method_num_scientific == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_num_scientific")
	}
	methodName102 := NewStringNameWithLatin1Chars("num")
	defer methodName102.Destroy()
	log.Debug("globalStringMethodBindings.method_num")
	globalStringMethodBindings.method_num = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName102.AsGDExtensionConstStringNamePtr(), 1555901022)
	if globalStringMethodBindings.method_num == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_num")
	}
	methodName103 := NewStringNameWithLatin1Chars("num_int64")
	defer methodName103.Destroy()
	log.Debug("globalStringMethodBindings.method_num_int64")
	globalStringMethodBindings.method_num_int64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName103.AsGDExtensionConstStringNamePtr(), 2111271071)
	if globalStringMethodBindings.method_num_int64 == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_num_int64")
	}
	methodName104 := NewStringNameWithLatin1Chars("num_uint64")
	defer methodName104.Destroy()
	log.Debug("globalStringMethodBindings.method_num_uint64")
	globalStringMethodBindings.method_num_uint64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName104.AsGDExtensionConstStringNamePtr(), 2111271071)
	if globalStringMethodBindings.method_num_uint64 == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_num_uint64")
	}
	methodName105 := NewStringNameWithLatin1Chars("chr")
	defer methodName105.Destroy()
	log.Debug("globalStringMethodBindings.method_chr")
	globalStringMethodBindings.method_chr = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName105.AsGDExtensionConstStringNamePtr(), 897497541)
	if globalStringMethodBindings.method_chr == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_chr")
	}
	methodName106 := NewStringNameWithLatin1Chars("humanize_size")
	defer methodName106.Destroy()
	log.Debug("globalStringMethodBindings.method_humanize_size")
	globalStringMethodBindings.method_humanize_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING, methodName106.AsGDExtensionConstStringNamePtr(), 897497541)
	if globalStringMethodBindings.method_humanize_size == nil {
		missingMethods = append(missingMethods, "globalStringMethodBindings.method_humanize_size")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalStringMethodBindings.indexed_setter")
	globalStringMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.indexed_getter")
	globalStringMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: equal Variant")
	globalStringMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringMethodBindings.operator: not_equal Variant")
	globalStringMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringMethodBindings.operator: module Variant")
	globalStringMethodBindings.operator_module_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringMethodBindings.operator: not ")
	globalStringMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringMethodBindings.operator: module bool")
	globalStringMethodBindings.operator_module_bool = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_BOOL)
	log.Debug("globalStringMethodBindings.operator: module int")
	globalStringMethodBindings.operator_module_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalStringMethodBindings.operator: module float")
	globalStringMethodBindings.operator_module_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalStringMethodBindings.operator: equal String")
	globalStringMethodBindings.operator_equal_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: not_equal String")
	globalStringMethodBindings.operator_not_equal_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: less String")
	globalStringMethodBindings.operator_less_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: less_equal String")
	globalStringMethodBindings.operator_less_equal_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: greater String")
	globalStringMethodBindings.operator_greater_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: greater_equal String")
	globalStringMethodBindings.operator_greater_equal_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: add String")
	globalStringMethodBindings.operator_add_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: module String")
	globalStringMethodBindings.operator_module_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: in String")
	globalStringMethodBindings.operator_in_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringMethodBindings.operator: module Vector2")
	globalStringMethodBindings.operator_module_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalStringMethodBindings.operator: module Vector2i")
	globalStringMethodBindings.operator_module_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalStringMethodBindings.operator: module Rect2")
	globalStringMethodBindings.operator_module_Rect2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_RECT2)
	log.Debug("globalStringMethodBindings.operator: module Rect2i")
	globalStringMethodBindings.operator_module_Rect2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_RECT2I)
	log.Debug("globalStringMethodBindings.operator: module Vector3")
	globalStringMethodBindings.operator_module_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalStringMethodBindings.operator: module Vector3i")
	globalStringMethodBindings.operator_module_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalStringMethodBindings.operator: module Transform2D")
	globalStringMethodBindings.operator_module_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalStringMethodBindings.operator: module Vector4")
	globalStringMethodBindings.operator_module_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalStringMethodBindings.operator: module Vector4i")
	globalStringMethodBindings.operator_module_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalStringMethodBindings.operator: module Plane")
	globalStringMethodBindings.operator_module_Plane = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PLANE)
	log.Debug("globalStringMethodBindings.operator: module Quaternion")
	globalStringMethodBindings.operator_module_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalStringMethodBindings.operator: module AABB")
	globalStringMethodBindings.operator_module_AABB = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_AABB)
	log.Debug("globalStringMethodBindings.operator: module Basis")
	globalStringMethodBindings.operator_module_Basis = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalStringMethodBindings.operator: module Transform3D")
	globalStringMethodBindings.operator_module_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalStringMethodBindings.operator: module Projection")
	globalStringMethodBindings.operator_module_Projection = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalStringMethodBindings.operator: module Color")
	globalStringMethodBindings.operator_module_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalStringMethodBindings.operator: equal StringName")
	globalStringMethodBindings.operator_equal_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringMethodBindings.operator: not_equal StringName")
	globalStringMethodBindings.operator_not_equal_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringMethodBindings.operator: add StringName")
	globalStringMethodBindings.operator_add_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringMethodBindings.operator: module StringName")
	globalStringMethodBindings.operator_module_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringMethodBindings.operator: in StringName")
	globalStringMethodBindings.operator_in_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringMethodBindings.operator: module NodePath")
	globalStringMethodBindings.operator_module_NodePath = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_NODE_PATH)
	log.Debug("globalStringMethodBindings.operator: module Object")
	globalStringMethodBindings.operator_module_Object = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_OBJECT)
	log.Debug("globalStringMethodBindings.operator: in Object")
	globalStringMethodBindings.operator_in_Object = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_OBJECT)
	log.Debug("globalStringMethodBindings.operator: module Callable")
	globalStringMethodBindings.operator_module_Callable = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_CALLABLE)
	log.Debug("globalStringMethodBindings.operator: module Signal")
	globalStringMethodBindings.operator_module_Signal = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_SIGNAL)
	log.Debug("globalStringMethodBindings.operator: module Dictionary")
	globalStringMethodBindings.operator_module_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalStringMethodBindings.operator: in Dictionary")
	globalStringMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalStringMethodBindings.operator: module Array")
	globalStringMethodBindings.operator_module_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalStringMethodBindings.operator: in Array")
	globalStringMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedByteArray")
	globalStringMethodBindings.operator_module_PackedByteArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedInt32Array")
	globalStringMethodBindings.operator_module_PackedInt32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedInt64Array")
	globalStringMethodBindings.operator_module_PackedInt64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedFloat32Array")
	globalStringMethodBindings.operator_module_PackedFloat32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedFloat64Array")
	globalStringMethodBindings.operator_module_PackedFloat64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedStringArray")
	globalStringMethodBindings.operator_module_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalStringMethodBindings.operator: in PackedStringArray")
	globalStringMethodBindings.operator_in_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedVector2Array")
	globalStringMethodBindings.operator_module_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedVector3Array")
	globalStringMethodBindings.operator_module_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedColorArray")
	globalStringMethodBindings.operator_module_PackedColorArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("globalStringMethodBindings.operator: module PackedVector4Array")
	globalStringMethodBindings.operator_module_PackedVector4Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("stringInitBindings end")
}

type vector2MethodBindings struct {
	constructor_0                    GDExtensionPtrConstructor
	constructor_1                    GDExtensionPtrConstructor
	constructor_2                    GDExtensionPtrConstructor
	constructor_3                    GDExtensionPtrConstructor
	method_angle                     GDExtensionPtrBuiltInMethod
	method_angle_to                  GDExtensionPtrBuiltInMethod
	method_angle_to_point            GDExtensionPtrBuiltInMethod
	method_direction_to              GDExtensionPtrBuiltInMethod
	method_distance_to               GDExtensionPtrBuiltInMethod
	method_distance_squared_to       GDExtensionPtrBuiltInMethod
	method_length                    GDExtensionPtrBuiltInMethod
	method_length_squared            GDExtensionPtrBuiltInMethod
	method_limit_length              GDExtensionPtrBuiltInMethod
	method_normalized                GDExtensionPtrBuiltInMethod
	method_is_normalized             GDExtensionPtrBuiltInMethod
	method_is_equal_approx           GDExtensionPtrBuiltInMethod
	method_is_zero_approx            GDExtensionPtrBuiltInMethod
	method_is_finite                 GDExtensionPtrBuiltInMethod
	method_posmod                    GDExtensionPtrBuiltInMethod
	method_posmodv                   GDExtensionPtrBuiltInMethod
	method_project                   GDExtensionPtrBuiltInMethod
	method_lerp                      GDExtensionPtrBuiltInMethod
	method_slerp                     GDExtensionPtrBuiltInMethod
	method_cubic_interpolate         GDExtensionPtrBuiltInMethod
	method_cubic_interpolate_in_time GDExtensionPtrBuiltInMethod
	method_bezier_interpolate        GDExtensionPtrBuiltInMethod
	method_bezier_derivative         GDExtensionPtrBuiltInMethod
	method_max_axis_index            GDExtensionPtrBuiltInMethod
	method_min_axis_index            GDExtensionPtrBuiltInMethod
	method_move_toward               GDExtensionPtrBuiltInMethod
	method_rotated                   GDExtensionPtrBuiltInMethod
	method_orthogonal                GDExtensionPtrBuiltInMethod
	method_floor                     GDExtensionPtrBuiltInMethod
	method_ceil                      GDExtensionPtrBuiltInMethod
	method_round                     GDExtensionPtrBuiltInMethod
	method_aspect                    GDExtensionPtrBuiltInMethod
	method_dot                       GDExtensionPtrBuiltInMethod
	method_slide                     GDExtensionPtrBuiltInMethod
	method_bounce                    GDExtensionPtrBuiltInMethod
	method_reflect                   GDExtensionPtrBuiltInMethod
	method_cross                     GDExtensionPtrBuiltInMethod
	method_abs                       GDExtensionPtrBuiltInMethod
	method_sign                      GDExtensionPtrBuiltInMethod
	method_clamp                     GDExtensionPtrBuiltInMethod
	method_clampf                    GDExtensionPtrBuiltInMethod
	method_snapped                   GDExtensionPtrBuiltInMethod
	method_snappedf                  GDExtensionPtrBuiltInMethod
	method_min                       GDExtensionPtrBuiltInMethod
	method_minf                      GDExtensionPtrBuiltInMethod
	method_max                       GDExtensionPtrBuiltInMethod
	method_maxf                      GDExtensionPtrBuiltInMethod
	method_from_angle                GDExtensionPtrBuiltInMethod
	member_x_setter                  GDExtensionPtrSetter
	member_x_getter                  GDExtensionPtrGetter
	member_y_setter                  GDExtensionPtrSetter
	member_y_getter                  GDExtensionPtrGetter
	indexed_setter                   GDExtensionPtrIndexedSetter
	indexed_getter                   GDExtensionPtrIndexedGetter
	operator_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_negate                  GDExtensionPtrOperatorEvaluator
	operator_positive                GDExtensionPtrOperatorEvaluator
	operator_not                     GDExtensionPtrOperatorEvaluator
	operator_multiply_int            GDExtensionPtrOperatorEvaluator
	operator_divide_int              GDExtensionPtrOperatorEvaluator
	operator_multiply_float          GDExtensionPtrOperatorEvaluator
	operator_divide_float            GDExtensionPtrOperatorEvaluator
	operator_equal_Vector2           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Vector2       GDExtensionPtrOperatorEvaluator
	operator_less_Vector2            GDExtensionPtrOperatorEvaluator
	operator_less_equal_Vector2      GDExtensionPtrOperatorEvaluator
	operator_greater_Vector2         GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Vector2   GDExtensionPtrOperatorEvaluator
	operator_add_Vector2             GDExtensionPtrOperatorEvaluator
	operator_subtract_Vector2        GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector2        GDExtensionPtrOperatorEvaluator
	operator_divide_Vector2          GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform2D    GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary           GDExtensionPtrOperatorEvaluator
	operator_in_Array                GDExtensionPtrOperatorEvaluator
	operator_in_PackedVector2Array   GDExtensionPtrOperatorEvaluator
}

var globalVector2MethodBindings vector2MethodBindings

func vector2InitConstructorBindings() {
	log.Debug("vector2InitConstructorBindings called")

	log.Debug("globalVector2MethodBindings.constructor_0")
	globalVector2MethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2, 0)
	log.Debug("globalVector2MethodBindings.constructor_1")
	globalVector2MethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2, 1)
	log.Debug("globalVector2MethodBindings.constructor_2")
	globalVector2MethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2, 2)
	log.Debug("globalVector2MethodBindings.constructor_3")
	globalVector2MethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2, 3)
}

func vector2InitMethodBindings() {
	log.Debug("vector2InitMethodBindings called")

	missingMethods := make([]string, 0, 48)

	methodName0 := NewStringNameWithLatin1Chars("angle")
	defer methodName0.Destroy()
	log.Debug("globalVector2MethodBindings.method_angle")
	globalVector2MethodBindings.method_angle = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName0.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector2MethodBindings.method_angle == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_angle")
	}
	methodName1 := NewStringNameWithLatin1Chars("angle_to")
	defer methodName1.Destroy()
	log.Debug("globalVector2MethodBindings.method_angle_to")
	globalVector2MethodBindings.method_angle_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName1.AsGDExtensionConstStringNamePtr(), 3819070308)
	if globalVector2MethodBindings.method_angle_to == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_angle_to")
	}
	methodName2 := NewStringNameWithLatin1Chars("angle_to_point")
	defer methodName2.Destroy()
	log.Debug("globalVector2MethodBindings.method_angle_to_point")
	globalVector2MethodBindings.method_angle_to_point = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName2.AsGDExtensionConstStringNamePtr(), 3819070308)
	if globalVector2MethodBindings.method_angle_to_point == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_angle_to_point")
	}
	methodName3 := NewStringNameWithLatin1Chars("direction_to")
	defer methodName3.Destroy()
	log.Debug("globalVector2MethodBindings.method_direction_to")
	globalVector2MethodBindings.method_direction_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName3.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_direction_to == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_direction_to")
	}
	methodName4 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName4.Destroy()
	log.Debug("globalVector2MethodBindings.method_distance_to")
	globalVector2MethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName4.AsGDExtensionConstStringNamePtr(), 3819070308)
	if globalVector2MethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_distance_to")
	}
	methodName5 := NewStringNameWithLatin1Chars("distance_squared_to")
	defer methodName5.Destroy()
	log.Debug("globalVector2MethodBindings.method_distance_squared_to")
	globalVector2MethodBindings.method_distance_squared_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName5.AsGDExtensionConstStringNamePtr(), 3819070308)
	if globalVector2MethodBindings.method_distance_squared_to == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_distance_squared_to")
	}
	methodName6 := NewStringNameWithLatin1Chars("length")
	defer methodName6.Destroy()
	log.Debug("globalVector2MethodBindings.method_length")
	globalVector2MethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName6.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector2MethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_length")
	}
	methodName7 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName7.Destroy()
	log.Debug("globalVector2MethodBindings.method_length_squared")
	globalVector2MethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName7.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector2MethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_length_squared")
	}
	methodName8 := NewStringNameWithLatin1Chars("limit_length")
	defer methodName8.Destroy()
	log.Debug("globalVector2MethodBindings.method_limit_length")
	globalVector2MethodBindings.method_limit_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName8.AsGDExtensionConstStringNamePtr(), 2544004089)
	if globalVector2MethodBindings.method_limit_length == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_limit_length")
	}
	methodName9 := NewStringNameWithLatin1Chars("normalized")
	defer methodName9.Destroy()
	log.Debug("globalVector2MethodBindings.method_normalized")
	globalVector2MethodBindings.method_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName9.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_normalized == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_normalized")
	}
	methodName10 := NewStringNameWithLatin1Chars("is_normalized")
	defer methodName10.Destroy()
	log.Debug("globalVector2MethodBindings.method_is_normalized")
	globalVector2MethodBindings.method_is_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName10.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector2MethodBindings.method_is_normalized == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_is_normalized")
	}
	methodName11 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName11.Destroy()
	log.Debug("globalVector2MethodBindings.method_is_equal_approx")
	globalVector2MethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName11.AsGDExtensionConstStringNamePtr(), 3190634762)
	if globalVector2MethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_is_equal_approx")
	}
	methodName12 := NewStringNameWithLatin1Chars("is_zero_approx")
	defer methodName12.Destroy()
	log.Debug("globalVector2MethodBindings.method_is_zero_approx")
	globalVector2MethodBindings.method_is_zero_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName12.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector2MethodBindings.method_is_zero_approx == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_is_zero_approx")
	}
	methodName13 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName13.Destroy()
	log.Debug("globalVector2MethodBindings.method_is_finite")
	globalVector2MethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName13.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector2MethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_is_finite")
	}
	methodName14 := NewStringNameWithLatin1Chars("posmod")
	defer methodName14.Destroy()
	log.Debug("globalVector2MethodBindings.method_posmod")
	globalVector2MethodBindings.method_posmod = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName14.AsGDExtensionConstStringNamePtr(), 2544004089)
	if globalVector2MethodBindings.method_posmod == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_posmod")
	}
	methodName15 := NewStringNameWithLatin1Chars("posmodv")
	defer methodName15.Destroy()
	log.Debug("globalVector2MethodBindings.method_posmodv")
	globalVector2MethodBindings.method_posmodv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName15.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_posmodv == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_posmodv")
	}
	methodName16 := NewStringNameWithLatin1Chars("project")
	defer methodName16.Destroy()
	log.Debug("globalVector2MethodBindings.method_project")
	globalVector2MethodBindings.method_project = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName16.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_project == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_project")
	}
	methodName17 := NewStringNameWithLatin1Chars("lerp")
	defer methodName17.Destroy()
	log.Debug("globalVector2MethodBindings.method_lerp")
	globalVector2MethodBindings.method_lerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName17.AsGDExtensionConstStringNamePtr(), 4250033116)
	if globalVector2MethodBindings.method_lerp == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_lerp")
	}
	methodName18 := NewStringNameWithLatin1Chars("slerp")
	defer methodName18.Destroy()
	log.Debug("globalVector2MethodBindings.method_slerp")
	globalVector2MethodBindings.method_slerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName18.AsGDExtensionConstStringNamePtr(), 4250033116)
	if globalVector2MethodBindings.method_slerp == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_slerp")
	}
	methodName19 := NewStringNameWithLatin1Chars("cubic_interpolate")
	defer methodName19.Destroy()
	log.Debug("globalVector2MethodBindings.method_cubic_interpolate")
	globalVector2MethodBindings.method_cubic_interpolate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName19.AsGDExtensionConstStringNamePtr(), 193522989)
	if globalVector2MethodBindings.method_cubic_interpolate == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_cubic_interpolate")
	}
	methodName20 := NewStringNameWithLatin1Chars("cubic_interpolate_in_time")
	defer methodName20.Destroy()
	log.Debug("globalVector2MethodBindings.method_cubic_interpolate_in_time")
	globalVector2MethodBindings.method_cubic_interpolate_in_time = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName20.AsGDExtensionConstStringNamePtr(), 1957055074)
	if globalVector2MethodBindings.method_cubic_interpolate_in_time == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_cubic_interpolate_in_time")
	}
	methodName21 := NewStringNameWithLatin1Chars("bezier_interpolate")
	defer methodName21.Destroy()
	log.Debug("globalVector2MethodBindings.method_bezier_interpolate")
	globalVector2MethodBindings.method_bezier_interpolate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName21.AsGDExtensionConstStringNamePtr(), 193522989)
	if globalVector2MethodBindings.method_bezier_interpolate == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_bezier_interpolate")
	}
	methodName22 := NewStringNameWithLatin1Chars("bezier_derivative")
	defer methodName22.Destroy()
	log.Debug("globalVector2MethodBindings.method_bezier_derivative")
	globalVector2MethodBindings.method_bezier_derivative = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName22.AsGDExtensionConstStringNamePtr(), 193522989)
	if globalVector2MethodBindings.method_bezier_derivative == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_bezier_derivative")
	}
	methodName23 := NewStringNameWithLatin1Chars("max_axis_index")
	defer methodName23.Destroy()
	log.Debug("globalVector2MethodBindings.method_max_axis_index")
	globalVector2MethodBindings.method_max_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName23.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector2MethodBindings.method_max_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_max_axis_index")
	}
	methodName24 := NewStringNameWithLatin1Chars("min_axis_index")
	defer methodName24.Destroy()
	log.Debug("globalVector2MethodBindings.method_min_axis_index")
	globalVector2MethodBindings.method_min_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName24.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector2MethodBindings.method_min_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_min_axis_index")
	}
	methodName25 := NewStringNameWithLatin1Chars("move_toward")
	defer methodName25.Destroy()
	log.Debug("globalVector2MethodBindings.method_move_toward")
	globalVector2MethodBindings.method_move_toward = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName25.AsGDExtensionConstStringNamePtr(), 4250033116)
	if globalVector2MethodBindings.method_move_toward == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_move_toward")
	}
	methodName26 := NewStringNameWithLatin1Chars("rotated")
	defer methodName26.Destroy()
	log.Debug("globalVector2MethodBindings.method_rotated")
	globalVector2MethodBindings.method_rotated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName26.AsGDExtensionConstStringNamePtr(), 2544004089)
	if globalVector2MethodBindings.method_rotated == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_rotated")
	}
	methodName27 := NewStringNameWithLatin1Chars("orthogonal")
	defer methodName27.Destroy()
	log.Debug("globalVector2MethodBindings.method_orthogonal")
	globalVector2MethodBindings.method_orthogonal = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName27.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_orthogonal == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_orthogonal")
	}
	methodName28 := NewStringNameWithLatin1Chars("floor")
	defer methodName28.Destroy()
	log.Debug("globalVector2MethodBindings.method_floor")
	globalVector2MethodBindings.method_floor = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName28.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_floor == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_floor")
	}
	methodName29 := NewStringNameWithLatin1Chars("ceil")
	defer methodName29.Destroy()
	log.Debug("globalVector2MethodBindings.method_ceil")
	globalVector2MethodBindings.method_ceil = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName29.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_ceil == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_ceil")
	}
	methodName30 := NewStringNameWithLatin1Chars("round")
	defer methodName30.Destroy()
	log.Debug("globalVector2MethodBindings.method_round")
	globalVector2MethodBindings.method_round = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName30.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_round == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_round")
	}
	methodName31 := NewStringNameWithLatin1Chars("aspect")
	defer methodName31.Destroy()
	log.Debug("globalVector2MethodBindings.method_aspect")
	globalVector2MethodBindings.method_aspect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName31.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector2MethodBindings.method_aspect == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_aspect")
	}
	methodName32 := NewStringNameWithLatin1Chars("dot")
	defer methodName32.Destroy()
	log.Debug("globalVector2MethodBindings.method_dot")
	globalVector2MethodBindings.method_dot = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName32.AsGDExtensionConstStringNamePtr(), 3819070308)
	if globalVector2MethodBindings.method_dot == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_dot")
	}
	methodName33 := NewStringNameWithLatin1Chars("slide")
	defer methodName33.Destroy()
	log.Debug("globalVector2MethodBindings.method_slide")
	globalVector2MethodBindings.method_slide = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName33.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_slide == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_slide")
	}
	methodName34 := NewStringNameWithLatin1Chars("bounce")
	defer methodName34.Destroy()
	log.Debug("globalVector2MethodBindings.method_bounce")
	globalVector2MethodBindings.method_bounce = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName34.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_bounce == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_bounce")
	}
	methodName35 := NewStringNameWithLatin1Chars("reflect")
	defer methodName35.Destroy()
	log.Debug("globalVector2MethodBindings.method_reflect")
	globalVector2MethodBindings.method_reflect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName35.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_reflect == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_reflect")
	}
	methodName36 := NewStringNameWithLatin1Chars("cross")
	defer methodName36.Destroy()
	log.Debug("globalVector2MethodBindings.method_cross")
	globalVector2MethodBindings.method_cross = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName36.AsGDExtensionConstStringNamePtr(), 3819070308)
	if globalVector2MethodBindings.method_cross == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_cross")
	}
	methodName37 := NewStringNameWithLatin1Chars("abs")
	defer methodName37.Destroy()
	log.Debug("globalVector2MethodBindings.method_abs")
	globalVector2MethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName37.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_abs")
	}
	methodName38 := NewStringNameWithLatin1Chars("sign")
	defer methodName38.Destroy()
	log.Debug("globalVector2MethodBindings.method_sign")
	globalVector2MethodBindings.method_sign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName38.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector2MethodBindings.method_sign == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_sign")
	}
	methodName39 := NewStringNameWithLatin1Chars("clamp")
	defer methodName39.Destroy()
	log.Debug("globalVector2MethodBindings.method_clamp")
	globalVector2MethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName39.AsGDExtensionConstStringNamePtr(), 318031021)
	if globalVector2MethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_clamp")
	}
	methodName40 := NewStringNameWithLatin1Chars("clampf")
	defer methodName40.Destroy()
	log.Debug("globalVector2MethodBindings.method_clampf")
	globalVector2MethodBindings.method_clampf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName40.AsGDExtensionConstStringNamePtr(), 3464402636)
	if globalVector2MethodBindings.method_clampf == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_clampf")
	}
	methodName41 := NewStringNameWithLatin1Chars("snapped")
	defer methodName41.Destroy()
	log.Debug("globalVector2MethodBindings.method_snapped")
	globalVector2MethodBindings.method_snapped = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName41.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_snapped == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_snapped")
	}
	methodName42 := NewStringNameWithLatin1Chars("snappedf")
	defer methodName42.Destroy()
	log.Debug("globalVector2MethodBindings.method_snappedf")
	globalVector2MethodBindings.method_snappedf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName42.AsGDExtensionConstStringNamePtr(), 2544004089)
	if globalVector2MethodBindings.method_snappedf == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_snappedf")
	}
	methodName43 := NewStringNameWithLatin1Chars("min")
	defer methodName43.Destroy()
	log.Debug("globalVector2MethodBindings.method_min")
	globalVector2MethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName43.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_min")
	}
	methodName44 := NewStringNameWithLatin1Chars("minf")
	defer methodName44.Destroy()
	log.Debug("globalVector2MethodBindings.method_minf")
	globalVector2MethodBindings.method_minf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName44.AsGDExtensionConstStringNamePtr(), 2544004089)
	if globalVector2MethodBindings.method_minf == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_minf")
	}
	methodName45 := NewStringNameWithLatin1Chars("max")
	defer methodName45.Destroy()
	log.Debug("globalVector2MethodBindings.method_max")
	globalVector2MethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName45.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalVector2MethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_max")
	}
	methodName46 := NewStringNameWithLatin1Chars("maxf")
	defer methodName46.Destroy()
	log.Debug("globalVector2MethodBindings.method_maxf")
	globalVector2MethodBindings.method_maxf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName46.AsGDExtensionConstStringNamePtr(), 2544004089)
	if globalVector2MethodBindings.method_maxf == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_maxf")
	}
	methodName47 := NewStringNameWithLatin1Chars("from_angle")
	defer methodName47.Destroy()
	log.Debug("globalVector2MethodBindings.method_from_angle")
	globalVector2MethodBindings.method_from_angle = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2, methodName47.AsGDExtensionConstStringNamePtr(), 889263119)
	if globalVector2MethodBindings.method_from_angle == nil {
		missingMethods = append(missingMethods, "globalVector2MethodBindings.method_from_angle")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalVector2MethodBindings.member_x_setter")
	globalVector2MethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR2, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector2MethodBindings.member_x_getter")
	globalVector2MethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR2, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalVector2MethodBindings.member_y_setter")
	globalVector2MethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR2, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector2MethodBindings.member_y_getter")
	globalVector2MethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR2, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector2MethodBindings.indexed_setter")
	globalVector2MethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.indexed_getter")
	globalVector2MethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: equal Variant")
	globalVector2MethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2MethodBindings.operator: not_equal Variant")
	globalVector2MethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2MethodBindings.operator: negate ")
	globalVector2MethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2MethodBindings.operator: positive ")
	globalVector2MethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2MethodBindings.operator: not ")
	globalVector2MethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2MethodBindings.operator: multiply int")
	globalVector2MethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector2MethodBindings.operator: divide int")
	globalVector2MethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector2MethodBindings.operator: multiply float")
	globalVector2MethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector2MethodBindings.operator: divide float")
	globalVector2MethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector2MethodBindings.operator: equal Vector2")
	globalVector2MethodBindings.operator_equal_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: not_equal Vector2")
	globalVector2MethodBindings.operator_not_equal_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: less Vector2")
	globalVector2MethodBindings.operator_less_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: less_equal Vector2")
	globalVector2MethodBindings.operator_less_equal_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: greater Vector2")
	globalVector2MethodBindings.operator_greater_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: greater_equal Vector2")
	globalVector2MethodBindings.operator_greater_equal_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: add Vector2")
	globalVector2MethodBindings.operator_add_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: subtract Vector2")
	globalVector2MethodBindings.operator_subtract_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: multiply Vector2")
	globalVector2MethodBindings.operator_multiply_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: divide Vector2")
	globalVector2MethodBindings.operator_divide_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalVector2MethodBindings.operator: multiply Transform2D")
	globalVector2MethodBindings.operator_multiply_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalVector2MethodBindings.operator: in Dictionary")
	globalVector2MethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalVector2MethodBindings.operator: in Array")
	globalVector2MethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalVector2MethodBindings.operator: in PackedVector2Array")
	globalVector2MethodBindings.operator_in_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR2, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("vector2InitBindings end")
}

type vector2iMethodBindings struct {
	constructor_0                   GDExtensionPtrConstructor
	constructor_1                   GDExtensionPtrConstructor
	constructor_2                   GDExtensionPtrConstructor
	constructor_3                   GDExtensionPtrConstructor
	method_aspect                   GDExtensionPtrBuiltInMethod
	method_max_axis_index           GDExtensionPtrBuiltInMethod
	method_min_axis_index           GDExtensionPtrBuiltInMethod
	method_distance_to              GDExtensionPtrBuiltInMethod
	method_distance_squared_to      GDExtensionPtrBuiltInMethod
	method_length                   GDExtensionPtrBuiltInMethod
	method_length_squared           GDExtensionPtrBuiltInMethod
	method_sign                     GDExtensionPtrBuiltInMethod
	method_abs                      GDExtensionPtrBuiltInMethod
	method_clamp                    GDExtensionPtrBuiltInMethod
	method_clampi                   GDExtensionPtrBuiltInMethod
	method_snapped                  GDExtensionPtrBuiltInMethod
	method_snappedi                 GDExtensionPtrBuiltInMethod
	method_min                      GDExtensionPtrBuiltInMethod
	method_mini                     GDExtensionPtrBuiltInMethod
	method_max                      GDExtensionPtrBuiltInMethod
	method_maxi                     GDExtensionPtrBuiltInMethod
	member_x_setter                 GDExtensionPtrSetter
	member_x_getter                 GDExtensionPtrGetter
	member_y_setter                 GDExtensionPtrSetter
	member_y_getter                 GDExtensionPtrGetter
	indexed_setter                  GDExtensionPtrIndexedSetter
	indexed_getter                  GDExtensionPtrIndexedGetter
	operator_equal_Variant          GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant      GDExtensionPtrOperatorEvaluator
	operator_negate                 GDExtensionPtrOperatorEvaluator
	operator_positive               GDExtensionPtrOperatorEvaluator
	operator_not                    GDExtensionPtrOperatorEvaluator
	operator_multiply_int           GDExtensionPtrOperatorEvaluator
	operator_divide_int             GDExtensionPtrOperatorEvaluator
	operator_module_int             GDExtensionPtrOperatorEvaluator
	operator_multiply_float         GDExtensionPtrOperatorEvaluator
	operator_divide_float           GDExtensionPtrOperatorEvaluator
	operator_equal_Vector2i         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Vector2i     GDExtensionPtrOperatorEvaluator
	operator_less_Vector2i          GDExtensionPtrOperatorEvaluator
	operator_less_equal_Vector2i    GDExtensionPtrOperatorEvaluator
	operator_greater_Vector2i       GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Vector2i GDExtensionPtrOperatorEvaluator
	operator_add_Vector2i           GDExtensionPtrOperatorEvaluator
	operator_subtract_Vector2i      GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector2i      GDExtensionPtrOperatorEvaluator
	operator_divide_Vector2i        GDExtensionPtrOperatorEvaluator
	operator_module_Vector2i        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary          GDExtensionPtrOperatorEvaluator
	operator_in_Array               GDExtensionPtrOperatorEvaluator
}

var globalVector2iMethodBindings vector2iMethodBindings

func vector2iInitConstructorBindings() {
	log.Debug("vector2iInitConstructorBindings called")

	log.Debug("globalVector2iMethodBindings.constructor_0")
	globalVector2iMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2I, 0)
	log.Debug("globalVector2iMethodBindings.constructor_1")
	globalVector2iMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2I, 1)
	log.Debug("globalVector2iMethodBindings.constructor_2")
	globalVector2iMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2I, 2)
	log.Debug("globalVector2iMethodBindings.constructor_3")
	globalVector2iMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR2I, 3)
}

func vector2iInitMethodBindings() {
	log.Debug("vector2iInitMethodBindings called")

	missingMethods := make([]string, 0, 17)

	methodName0 := NewStringNameWithLatin1Chars("aspect")
	defer methodName0.Destroy()
	log.Debug("globalVector2iMethodBindings.method_aspect")
	globalVector2iMethodBindings.method_aspect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName0.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector2iMethodBindings.method_aspect == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_aspect")
	}
	methodName1 := NewStringNameWithLatin1Chars("max_axis_index")
	defer methodName1.Destroy()
	log.Debug("globalVector2iMethodBindings.method_max_axis_index")
	globalVector2iMethodBindings.method_max_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector2iMethodBindings.method_max_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_max_axis_index")
	}
	methodName2 := NewStringNameWithLatin1Chars("min_axis_index")
	defer methodName2.Destroy()
	log.Debug("globalVector2iMethodBindings.method_min_axis_index")
	globalVector2iMethodBindings.method_min_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName2.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector2iMethodBindings.method_min_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_min_axis_index")
	}
	methodName3 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName3.Destroy()
	log.Debug("globalVector2iMethodBindings.method_distance_to")
	globalVector2iMethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName3.AsGDExtensionConstStringNamePtr(), 707501214)
	if globalVector2iMethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_distance_to")
	}
	methodName4 := NewStringNameWithLatin1Chars("distance_squared_to")
	defer methodName4.Destroy()
	log.Debug("globalVector2iMethodBindings.method_distance_squared_to")
	globalVector2iMethodBindings.method_distance_squared_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName4.AsGDExtensionConstStringNamePtr(), 1130029528)
	if globalVector2iMethodBindings.method_distance_squared_to == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_distance_squared_to")
	}
	methodName5 := NewStringNameWithLatin1Chars("length")
	defer methodName5.Destroy()
	log.Debug("globalVector2iMethodBindings.method_length")
	globalVector2iMethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName5.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector2iMethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_length")
	}
	methodName6 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName6.Destroy()
	log.Debug("globalVector2iMethodBindings.method_length_squared")
	globalVector2iMethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName6.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector2iMethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_length_squared")
	}
	methodName7 := NewStringNameWithLatin1Chars("sign")
	defer methodName7.Destroy()
	log.Debug("globalVector2iMethodBindings.method_sign")
	globalVector2iMethodBindings.method_sign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName7.AsGDExtensionConstStringNamePtr(), 3444277866)
	if globalVector2iMethodBindings.method_sign == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_sign")
	}
	methodName8 := NewStringNameWithLatin1Chars("abs")
	defer methodName8.Destroy()
	log.Debug("globalVector2iMethodBindings.method_abs")
	globalVector2iMethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName8.AsGDExtensionConstStringNamePtr(), 3444277866)
	if globalVector2iMethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_abs")
	}
	methodName9 := NewStringNameWithLatin1Chars("clamp")
	defer methodName9.Destroy()
	log.Debug("globalVector2iMethodBindings.method_clamp")
	globalVector2iMethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName9.AsGDExtensionConstStringNamePtr(), 186568249)
	if globalVector2iMethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_clamp")
	}
	methodName10 := NewStringNameWithLatin1Chars("clampi")
	defer methodName10.Destroy()
	log.Debug("globalVector2iMethodBindings.method_clampi")
	globalVector2iMethodBindings.method_clampi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName10.AsGDExtensionConstStringNamePtr(), 3686769569)
	if globalVector2iMethodBindings.method_clampi == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_clampi")
	}
	methodName11 := NewStringNameWithLatin1Chars("snapped")
	defer methodName11.Destroy()
	log.Debug("globalVector2iMethodBindings.method_snapped")
	globalVector2iMethodBindings.method_snapped = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName11.AsGDExtensionConstStringNamePtr(), 1735278196)
	if globalVector2iMethodBindings.method_snapped == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_snapped")
	}
	methodName12 := NewStringNameWithLatin1Chars("snappedi")
	defer methodName12.Destroy()
	log.Debug("globalVector2iMethodBindings.method_snappedi")
	globalVector2iMethodBindings.method_snappedi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName12.AsGDExtensionConstStringNamePtr(), 2161988953)
	if globalVector2iMethodBindings.method_snappedi == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_snappedi")
	}
	methodName13 := NewStringNameWithLatin1Chars("min")
	defer methodName13.Destroy()
	log.Debug("globalVector2iMethodBindings.method_min")
	globalVector2iMethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName13.AsGDExtensionConstStringNamePtr(), 1735278196)
	if globalVector2iMethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_min")
	}
	methodName14 := NewStringNameWithLatin1Chars("mini")
	defer methodName14.Destroy()
	log.Debug("globalVector2iMethodBindings.method_mini")
	globalVector2iMethodBindings.method_mini = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName14.AsGDExtensionConstStringNamePtr(), 2161988953)
	if globalVector2iMethodBindings.method_mini == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_mini")
	}
	methodName15 := NewStringNameWithLatin1Chars("max")
	defer methodName15.Destroy()
	log.Debug("globalVector2iMethodBindings.method_max")
	globalVector2iMethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName15.AsGDExtensionConstStringNamePtr(), 1735278196)
	if globalVector2iMethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_max")
	}
	methodName16 := NewStringNameWithLatin1Chars("maxi")
	defer methodName16.Destroy()
	log.Debug("globalVector2iMethodBindings.method_maxi")
	globalVector2iMethodBindings.method_maxi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR2I, methodName16.AsGDExtensionConstStringNamePtr(), 2161988953)
	if globalVector2iMethodBindings.method_maxi == nil {
		missingMethods = append(missingMethods, "globalVector2iMethodBindings.method_maxi")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalVector2iMethodBindings.member_x_setter")
	globalVector2iMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR2I, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector2iMethodBindings.member_x_getter")
	globalVector2iMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR2I, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalVector2iMethodBindings.member_y_setter")
	globalVector2iMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR2I, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector2iMethodBindings.member_y_getter")
	globalVector2iMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR2I, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector2iMethodBindings.indexed_setter")
	globalVector2iMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.indexed_getter")
	globalVector2iMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: equal Variant")
	globalVector2iMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2iMethodBindings.operator: not_equal Variant")
	globalVector2iMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2iMethodBindings.operator: negate ")
	globalVector2iMethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2iMethodBindings.operator: positive ")
	globalVector2iMethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2iMethodBindings.operator: not ")
	globalVector2iMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector2iMethodBindings.operator: multiply int")
	globalVector2iMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector2iMethodBindings.operator: divide int")
	globalVector2iMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector2iMethodBindings.operator: module int")
	globalVector2iMethodBindings.operator_module_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector2iMethodBindings.operator: multiply float")
	globalVector2iMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector2iMethodBindings.operator: divide float")
	globalVector2iMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector2iMethodBindings.operator: equal Vector2i")
	globalVector2iMethodBindings.operator_equal_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: not_equal Vector2i")
	globalVector2iMethodBindings.operator_not_equal_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: less Vector2i")
	globalVector2iMethodBindings.operator_less_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: less_equal Vector2i")
	globalVector2iMethodBindings.operator_less_equal_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: greater Vector2i")
	globalVector2iMethodBindings.operator_greater_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: greater_equal Vector2i")
	globalVector2iMethodBindings.operator_greater_equal_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: add Vector2i")
	globalVector2iMethodBindings.operator_add_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: subtract Vector2i")
	globalVector2iMethodBindings.operator_subtract_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: multiply Vector2i")
	globalVector2iMethodBindings.operator_multiply_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: divide Vector2i")
	globalVector2iMethodBindings.operator_divide_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: module Vector2i")
	globalVector2iMethodBindings.operator_module_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalVector2iMethodBindings.operator: in Dictionary")
	globalVector2iMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalVector2iMethodBindings.operator: in Array")
	globalVector2iMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR2I, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("vector2iInitBindings end")
}

type rect2MethodBindings struct {
	constructor_0                 GDExtensionPtrConstructor
	constructor_1                 GDExtensionPtrConstructor
	constructor_2                 GDExtensionPtrConstructor
	constructor_3                 GDExtensionPtrConstructor
	constructor_4                 GDExtensionPtrConstructor
	method_get_center             GDExtensionPtrBuiltInMethod
	method_get_area               GDExtensionPtrBuiltInMethod
	method_has_area               GDExtensionPtrBuiltInMethod
	method_has_point              GDExtensionPtrBuiltInMethod
	method_is_equal_approx        GDExtensionPtrBuiltInMethod
	method_is_finite              GDExtensionPtrBuiltInMethod
	method_intersects             GDExtensionPtrBuiltInMethod
	method_encloses               GDExtensionPtrBuiltInMethod
	method_intersection           GDExtensionPtrBuiltInMethod
	method_merge                  GDExtensionPtrBuiltInMethod
	method_expand                 GDExtensionPtrBuiltInMethod
	method_grow                   GDExtensionPtrBuiltInMethod
	method_grow_side              GDExtensionPtrBuiltInMethod
	method_grow_individual        GDExtensionPtrBuiltInMethod
	method_abs                    GDExtensionPtrBuiltInMethod
	member_position_setter        GDExtensionPtrSetter
	member_position_getter        GDExtensionPtrGetter
	member_size_setter            GDExtensionPtrSetter
	member_size_getter            GDExtensionPtrGetter
	member_end_setter             GDExtensionPtrSetter
	member_end_getter             GDExtensionPtrGetter
	operator_equal_Variant        GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant    GDExtensionPtrOperatorEvaluator
	operator_not                  GDExtensionPtrOperatorEvaluator
	operator_equal_Rect2          GDExtensionPtrOperatorEvaluator
	operator_not_equal_Rect2      GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform2D GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary        GDExtensionPtrOperatorEvaluator
	operator_in_Array             GDExtensionPtrOperatorEvaluator
}

var globalRect2MethodBindings rect2MethodBindings

func rect2InitConstructorBindings() {
	log.Debug("rect2InitConstructorBindings called")

	log.Debug("globalRect2MethodBindings.constructor_0")
	globalRect2MethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2, 0)
	log.Debug("globalRect2MethodBindings.constructor_1")
	globalRect2MethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2, 1)
	log.Debug("globalRect2MethodBindings.constructor_2")
	globalRect2MethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2, 2)
	log.Debug("globalRect2MethodBindings.constructor_3")
	globalRect2MethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2, 3)
	log.Debug("globalRect2MethodBindings.constructor_4")
	globalRect2MethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2, 4)
}

func rect2InitMethodBindings() {
	log.Debug("rect2InitMethodBindings called")

	missingMethods := make([]string, 0, 15)

	methodName0 := NewStringNameWithLatin1Chars("get_center")
	defer methodName0.Destroy()
	log.Debug("globalRect2MethodBindings.method_get_center")
	globalRect2MethodBindings.method_get_center = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName0.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalRect2MethodBindings.method_get_center == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_get_center")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_area")
	defer methodName1.Destroy()
	log.Debug("globalRect2MethodBindings.method_get_area")
	globalRect2MethodBindings.method_get_area = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName1.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalRect2MethodBindings.method_get_area == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_get_area")
	}
	methodName2 := NewStringNameWithLatin1Chars("has_area")
	defer methodName2.Destroy()
	log.Debug("globalRect2MethodBindings.method_has_area")
	globalRect2MethodBindings.method_has_area = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName2.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalRect2MethodBindings.method_has_area == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_has_area")
	}
	methodName3 := NewStringNameWithLatin1Chars("has_point")
	defer methodName3.Destroy()
	log.Debug("globalRect2MethodBindings.method_has_point")
	globalRect2MethodBindings.method_has_point = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName3.AsGDExtensionConstStringNamePtr(), 3190634762)
	if globalRect2MethodBindings.method_has_point == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_has_point")
	}
	methodName4 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName4.Destroy()
	log.Debug("globalRect2MethodBindings.method_is_equal_approx")
	globalRect2MethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName4.AsGDExtensionConstStringNamePtr(), 1908192260)
	if globalRect2MethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_is_equal_approx")
	}
	methodName5 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName5.Destroy()
	log.Debug("globalRect2MethodBindings.method_is_finite")
	globalRect2MethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName5.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalRect2MethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_is_finite")
	}
	methodName6 := NewStringNameWithLatin1Chars("intersects")
	defer methodName6.Destroy()
	log.Debug("globalRect2MethodBindings.method_intersects")
	globalRect2MethodBindings.method_intersects = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName6.AsGDExtensionConstStringNamePtr(), 819294880)
	if globalRect2MethodBindings.method_intersects == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_intersects")
	}
	methodName7 := NewStringNameWithLatin1Chars("encloses")
	defer methodName7.Destroy()
	log.Debug("globalRect2MethodBindings.method_encloses")
	globalRect2MethodBindings.method_encloses = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName7.AsGDExtensionConstStringNamePtr(), 1908192260)
	if globalRect2MethodBindings.method_encloses == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_encloses")
	}
	methodName8 := NewStringNameWithLatin1Chars("intersection")
	defer methodName8.Destroy()
	log.Debug("globalRect2MethodBindings.method_intersection")
	globalRect2MethodBindings.method_intersection = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName8.AsGDExtensionConstStringNamePtr(), 2282977743)
	if globalRect2MethodBindings.method_intersection == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_intersection")
	}
	methodName9 := NewStringNameWithLatin1Chars("merge")
	defer methodName9.Destroy()
	log.Debug("globalRect2MethodBindings.method_merge")
	globalRect2MethodBindings.method_merge = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName9.AsGDExtensionConstStringNamePtr(), 2282977743)
	if globalRect2MethodBindings.method_merge == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_merge")
	}
	methodName10 := NewStringNameWithLatin1Chars("expand")
	defer methodName10.Destroy()
	log.Debug("globalRect2MethodBindings.method_expand")
	globalRect2MethodBindings.method_expand = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName10.AsGDExtensionConstStringNamePtr(), 293272265)
	if globalRect2MethodBindings.method_expand == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_expand")
	}
	methodName11 := NewStringNameWithLatin1Chars("grow")
	defer methodName11.Destroy()
	log.Debug("globalRect2MethodBindings.method_grow")
	globalRect2MethodBindings.method_grow = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName11.AsGDExtensionConstStringNamePtr(), 39664498)
	if globalRect2MethodBindings.method_grow == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_grow")
	}
	methodName12 := NewStringNameWithLatin1Chars("grow_side")
	defer methodName12.Destroy()
	log.Debug("globalRect2MethodBindings.method_grow_side")
	globalRect2MethodBindings.method_grow_side = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName12.AsGDExtensionConstStringNamePtr(), 4177736158)
	if globalRect2MethodBindings.method_grow_side == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_grow_side")
	}
	methodName13 := NewStringNameWithLatin1Chars("grow_individual")
	defer methodName13.Destroy()
	log.Debug("globalRect2MethodBindings.method_grow_individual")
	globalRect2MethodBindings.method_grow_individual = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName13.AsGDExtensionConstStringNamePtr(), 3203390369)
	if globalRect2MethodBindings.method_grow_individual == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_grow_individual")
	}
	methodName14 := NewStringNameWithLatin1Chars("abs")
	defer methodName14.Destroy()
	log.Debug("globalRect2MethodBindings.method_abs")
	globalRect2MethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2, methodName14.AsGDExtensionConstStringNamePtr(), 3107653634)
	if globalRect2MethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalRect2MethodBindings.method_abs")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("position")
	defer memberName0.Destroy()
	log.Debug("globalRect2MethodBindings.member_position_setter")
	globalRect2MethodBindings.member_position_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_RECT2, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2MethodBindings.member_position_getter")
	globalRect2MethodBindings.member_position_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_RECT2, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("size")
	defer memberName1.Destroy()
	log.Debug("globalRect2MethodBindings.member_size_setter")
	globalRect2MethodBindings.member_size_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_RECT2, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2MethodBindings.member_size_getter")
	globalRect2MethodBindings.member_size_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_RECT2, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("end")
	defer memberName2.Destroy()
	log.Debug("globalRect2MethodBindings.member_end_setter")
	globalRect2MethodBindings.member_end_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_RECT2, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2MethodBindings.member_end_getter")
	globalRect2MethodBindings.member_end_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_RECT2, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2MethodBindings.operator: equal Variant")
	globalRect2MethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRect2MethodBindings.operator: not_equal Variant")
	globalRect2MethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRect2MethodBindings.operator: not ")
	globalRect2MethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRect2MethodBindings.operator: equal Rect2")
	globalRect2MethodBindings.operator_equal_Rect2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_RECT2)
	log.Debug("globalRect2MethodBindings.operator: not_equal Rect2")
	globalRect2MethodBindings.operator_not_equal_Rect2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_RECT2)
	log.Debug("globalRect2MethodBindings.operator: multiply Transform2D")
	globalRect2MethodBindings.operator_multiply_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalRect2MethodBindings.operator: in Dictionary")
	globalRect2MethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalRect2MethodBindings.operator: in Array")
	globalRect2MethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_RECT2, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("rect2InitBindings end")
}

type rect2iMethodBindings struct {
	constructor_0              GDExtensionPtrConstructor
	constructor_1              GDExtensionPtrConstructor
	constructor_2              GDExtensionPtrConstructor
	constructor_3              GDExtensionPtrConstructor
	constructor_4              GDExtensionPtrConstructor
	method_get_center          GDExtensionPtrBuiltInMethod
	method_get_area            GDExtensionPtrBuiltInMethod
	method_has_area            GDExtensionPtrBuiltInMethod
	method_has_point           GDExtensionPtrBuiltInMethod
	method_intersects          GDExtensionPtrBuiltInMethod
	method_encloses            GDExtensionPtrBuiltInMethod
	method_intersection        GDExtensionPtrBuiltInMethod
	method_merge               GDExtensionPtrBuiltInMethod
	method_expand              GDExtensionPtrBuiltInMethod
	method_grow                GDExtensionPtrBuiltInMethod
	method_grow_side           GDExtensionPtrBuiltInMethod
	method_grow_individual     GDExtensionPtrBuiltInMethod
	method_abs                 GDExtensionPtrBuiltInMethod
	member_position_setter     GDExtensionPtrSetter
	member_position_getter     GDExtensionPtrGetter
	member_size_setter         GDExtensionPtrSetter
	member_size_getter         GDExtensionPtrGetter
	member_end_setter          GDExtensionPtrSetter
	member_end_getter          GDExtensionPtrGetter
	operator_equal_Variant     GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant GDExtensionPtrOperatorEvaluator
	operator_not               GDExtensionPtrOperatorEvaluator
	operator_equal_Rect2i      GDExtensionPtrOperatorEvaluator
	operator_not_equal_Rect2i  GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary     GDExtensionPtrOperatorEvaluator
	operator_in_Array          GDExtensionPtrOperatorEvaluator
}

var globalRect2iMethodBindings rect2iMethodBindings

func rect2iInitConstructorBindings() {
	log.Debug("rect2iInitConstructorBindings called")

	log.Debug("globalRect2iMethodBindings.constructor_0")
	globalRect2iMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2I, 0)
	log.Debug("globalRect2iMethodBindings.constructor_1")
	globalRect2iMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2I, 1)
	log.Debug("globalRect2iMethodBindings.constructor_2")
	globalRect2iMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2I, 2)
	log.Debug("globalRect2iMethodBindings.constructor_3")
	globalRect2iMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2I, 3)
	log.Debug("globalRect2iMethodBindings.constructor_4")
	globalRect2iMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RECT2I, 4)
}

func rect2iInitMethodBindings() {
	log.Debug("rect2iInitMethodBindings called")

	missingMethods := make([]string, 0, 13)

	methodName0 := NewStringNameWithLatin1Chars("get_center")
	defer methodName0.Destroy()
	log.Debug("globalRect2iMethodBindings.method_get_center")
	globalRect2iMethodBindings.method_get_center = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName0.AsGDExtensionConstStringNamePtr(), 3444277866)
	if globalRect2iMethodBindings.method_get_center == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_get_center")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_area")
	defer methodName1.Destroy()
	log.Debug("globalRect2iMethodBindings.method_get_area")
	globalRect2iMethodBindings.method_get_area = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalRect2iMethodBindings.method_get_area == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_get_area")
	}
	methodName2 := NewStringNameWithLatin1Chars("has_area")
	defer methodName2.Destroy()
	log.Debug("globalRect2iMethodBindings.method_has_area")
	globalRect2iMethodBindings.method_has_area = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName2.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalRect2iMethodBindings.method_has_area == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_has_area")
	}
	methodName3 := NewStringNameWithLatin1Chars("has_point")
	defer methodName3.Destroy()
	log.Debug("globalRect2iMethodBindings.method_has_point")
	globalRect2iMethodBindings.method_has_point = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName3.AsGDExtensionConstStringNamePtr(), 328189994)
	if globalRect2iMethodBindings.method_has_point == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_has_point")
	}
	methodName4 := NewStringNameWithLatin1Chars("intersects")
	defer methodName4.Destroy()
	log.Debug("globalRect2iMethodBindings.method_intersects")
	globalRect2iMethodBindings.method_intersects = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName4.AsGDExtensionConstStringNamePtr(), 3434691493)
	if globalRect2iMethodBindings.method_intersects == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_intersects")
	}
	methodName5 := NewStringNameWithLatin1Chars("encloses")
	defer methodName5.Destroy()
	log.Debug("globalRect2iMethodBindings.method_encloses")
	globalRect2iMethodBindings.method_encloses = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName5.AsGDExtensionConstStringNamePtr(), 3434691493)
	if globalRect2iMethodBindings.method_encloses == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_encloses")
	}
	methodName6 := NewStringNameWithLatin1Chars("intersection")
	defer methodName6.Destroy()
	log.Debug("globalRect2iMethodBindings.method_intersection")
	globalRect2iMethodBindings.method_intersection = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName6.AsGDExtensionConstStringNamePtr(), 717431873)
	if globalRect2iMethodBindings.method_intersection == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_intersection")
	}
	methodName7 := NewStringNameWithLatin1Chars("merge")
	defer methodName7.Destroy()
	log.Debug("globalRect2iMethodBindings.method_merge")
	globalRect2iMethodBindings.method_merge = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName7.AsGDExtensionConstStringNamePtr(), 717431873)
	if globalRect2iMethodBindings.method_merge == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_merge")
	}
	methodName8 := NewStringNameWithLatin1Chars("expand")
	defer methodName8.Destroy()
	log.Debug("globalRect2iMethodBindings.method_expand")
	globalRect2iMethodBindings.method_expand = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName8.AsGDExtensionConstStringNamePtr(), 1355196872)
	if globalRect2iMethodBindings.method_expand == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_expand")
	}
	methodName9 := NewStringNameWithLatin1Chars("grow")
	defer methodName9.Destroy()
	log.Debug("globalRect2iMethodBindings.method_grow")
	globalRect2iMethodBindings.method_grow = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName9.AsGDExtensionConstStringNamePtr(), 1578070074)
	if globalRect2iMethodBindings.method_grow == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_grow")
	}
	methodName10 := NewStringNameWithLatin1Chars("grow_side")
	defer methodName10.Destroy()
	log.Debug("globalRect2iMethodBindings.method_grow_side")
	globalRect2iMethodBindings.method_grow_side = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName10.AsGDExtensionConstStringNamePtr(), 3191154199)
	if globalRect2iMethodBindings.method_grow_side == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_grow_side")
	}
	methodName11 := NewStringNameWithLatin1Chars("grow_individual")
	defer methodName11.Destroy()
	log.Debug("globalRect2iMethodBindings.method_grow_individual")
	globalRect2iMethodBindings.method_grow_individual = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName11.AsGDExtensionConstStringNamePtr(), 1893743416)
	if globalRect2iMethodBindings.method_grow_individual == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_grow_individual")
	}
	methodName12 := NewStringNameWithLatin1Chars("abs")
	defer methodName12.Destroy()
	log.Debug("globalRect2iMethodBindings.method_abs")
	globalRect2iMethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RECT2I, methodName12.AsGDExtensionConstStringNamePtr(), 1469025700)
	if globalRect2iMethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalRect2iMethodBindings.method_abs")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("position")
	defer memberName0.Destroy()
	log.Debug("globalRect2iMethodBindings.member_position_setter")
	globalRect2iMethodBindings.member_position_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_RECT2I, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2iMethodBindings.member_position_getter")
	globalRect2iMethodBindings.member_position_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_RECT2I, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("size")
	defer memberName1.Destroy()
	log.Debug("globalRect2iMethodBindings.member_size_setter")
	globalRect2iMethodBindings.member_size_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_RECT2I, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2iMethodBindings.member_size_getter")
	globalRect2iMethodBindings.member_size_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_RECT2I, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("end")
	defer memberName2.Destroy()
	log.Debug("globalRect2iMethodBindings.member_end_setter")
	globalRect2iMethodBindings.member_end_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_RECT2I, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2iMethodBindings.member_end_getter")
	globalRect2iMethodBindings.member_end_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_RECT2I, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalRect2iMethodBindings.operator: equal Variant")
	globalRect2iMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRect2iMethodBindings.operator: not_equal Variant")
	globalRect2iMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRect2iMethodBindings.operator: not ")
	globalRect2iMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRect2iMethodBindings.operator: equal Rect2i")
	globalRect2iMethodBindings.operator_equal_Rect2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_RECT2I)
	log.Debug("globalRect2iMethodBindings.operator: not_equal Rect2i")
	globalRect2iMethodBindings.operator_not_equal_Rect2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_RECT2I)
	log.Debug("globalRect2iMethodBindings.operator: in Dictionary")
	globalRect2iMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalRect2iMethodBindings.operator: in Array")
	globalRect2iMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_RECT2I, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("rect2iInitBindings end")
}

type vector3MethodBindings struct {
	constructor_0                    GDExtensionPtrConstructor
	constructor_1                    GDExtensionPtrConstructor
	constructor_2                    GDExtensionPtrConstructor
	constructor_3                    GDExtensionPtrConstructor
	method_min_axis_index            GDExtensionPtrBuiltInMethod
	method_max_axis_index            GDExtensionPtrBuiltInMethod
	method_angle_to                  GDExtensionPtrBuiltInMethod
	method_signed_angle_to           GDExtensionPtrBuiltInMethod
	method_direction_to              GDExtensionPtrBuiltInMethod
	method_distance_to               GDExtensionPtrBuiltInMethod
	method_distance_squared_to       GDExtensionPtrBuiltInMethod
	method_length                    GDExtensionPtrBuiltInMethod
	method_length_squared            GDExtensionPtrBuiltInMethod
	method_limit_length              GDExtensionPtrBuiltInMethod
	method_normalized                GDExtensionPtrBuiltInMethod
	method_is_normalized             GDExtensionPtrBuiltInMethod
	method_is_equal_approx           GDExtensionPtrBuiltInMethod
	method_is_zero_approx            GDExtensionPtrBuiltInMethod
	method_is_finite                 GDExtensionPtrBuiltInMethod
	method_inverse                   GDExtensionPtrBuiltInMethod
	method_clamp                     GDExtensionPtrBuiltInMethod
	method_clampf                    GDExtensionPtrBuiltInMethod
	method_snapped                   GDExtensionPtrBuiltInMethod
	method_snappedf                  GDExtensionPtrBuiltInMethod
	method_rotated                   GDExtensionPtrBuiltInMethod
	method_lerp                      GDExtensionPtrBuiltInMethod
	method_slerp                     GDExtensionPtrBuiltInMethod
	method_cubic_interpolate         GDExtensionPtrBuiltInMethod
	method_cubic_interpolate_in_time GDExtensionPtrBuiltInMethod
	method_bezier_interpolate        GDExtensionPtrBuiltInMethod
	method_bezier_derivative         GDExtensionPtrBuiltInMethod
	method_move_toward               GDExtensionPtrBuiltInMethod
	method_dot                       GDExtensionPtrBuiltInMethod
	method_cross                     GDExtensionPtrBuiltInMethod
	method_outer                     GDExtensionPtrBuiltInMethod
	method_abs                       GDExtensionPtrBuiltInMethod
	method_floor                     GDExtensionPtrBuiltInMethod
	method_ceil                      GDExtensionPtrBuiltInMethod
	method_round                     GDExtensionPtrBuiltInMethod
	method_posmod                    GDExtensionPtrBuiltInMethod
	method_posmodv                   GDExtensionPtrBuiltInMethod
	method_project                   GDExtensionPtrBuiltInMethod
	method_slide                     GDExtensionPtrBuiltInMethod
	method_bounce                    GDExtensionPtrBuiltInMethod
	method_reflect                   GDExtensionPtrBuiltInMethod
	method_sign                      GDExtensionPtrBuiltInMethod
	method_octahedron_encode         GDExtensionPtrBuiltInMethod
	method_min                       GDExtensionPtrBuiltInMethod
	method_minf                      GDExtensionPtrBuiltInMethod
	method_max                       GDExtensionPtrBuiltInMethod
	method_maxf                      GDExtensionPtrBuiltInMethod
	method_octahedron_decode         GDExtensionPtrBuiltInMethod
	member_x_setter                  GDExtensionPtrSetter
	member_x_getter                  GDExtensionPtrGetter
	member_y_setter                  GDExtensionPtrSetter
	member_y_getter                  GDExtensionPtrGetter
	member_z_setter                  GDExtensionPtrSetter
	member_z_getter                  GDExtensionPtrGetter
	indexed_setter                   GDExtensionPtrIndexedSetter
	indexed_getter                   GDExtensionPtrIndexedGetter
	operator_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_negate                  GDExtensionPtrOperatorEvaluator
	operator_positive                GDExtensionPtrOperatorEvaluator
	operator_not                     GDExtensionPtrOperatorEvaluator
	operator_multiply_int            GDExtensionPtrOperatorEvaluator
	operator_divide_int              GDExtensionPtrOperatorEvaluator
	operator_multiply_float          GDExtensionPtrOperatorEvaluator
	operator_divide_float            GDExtensionPtrOperatorEvaluator
	operator_equal_Vector3           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Vector3       GDExtensionPtrOperatorEvaluator
	operator_less_Vector3            GDExtensionPtrOperatorEvaluator
	operator_less_equal_Vector3      GDExtensionPtrOperatorEvaluator
	operator_greater_Vector3         GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Vector3   GDExtensionPtrOperatorEvaluator
	operator_add_Vector3             GDExtensionPtrOperatorEvaluator
	operator_subtract_Vector3        GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector3        GDExtensionPtrOperatorEvaluator
	operator_divide_Vector3          GDExtensionPtrOperatorEvaluator
	operator_multiply_Quaternion     GDExtensionPtrOperatorEvaluator
	operator_multiply_Basis          GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform3D    GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary           GDExtensionPtrOperatorEvaluator
	operator_in_Array                GDExtensionPtrOperatorEvaluator
	operator_in_PackedVector3Array   GDExtensionPtrOperatorEvaluator
}

var globalVector3MethodBindings vector3MethodBindings

func vector3InitConstructorBindings() {
	log.Debug("vector3InitConstructorBindings called")

	log.Debug("globalVector3MethodBindings.constructor_0")
	globalVector3MethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3, 0)
	log.Debug("globalVector3MethodBindings.constructor_1")
	globalVector3MethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3, 1)
	log.Debug("globalVector3MethodBindings.constructor_2")
	globalVector3MethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3, 2)
	log.Debug("globalVector3MethodBindings.constructor_3")
	globalVector3MethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3, 3)
}

func vector3InitMethodBindings() {
	log.Debug("vector3InitMethodBindings called")

	missingMethods := make([]string, 0, 48)

	methodName0 := NewStringNameWithLatin1Chars("min_axis_index")
	defer methodName0.Destroy()
	log.Debug("globalVector3MethodBindings.method_min_axis_index")
	globalVector3MethodBindings.method_min_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector3MethodBindings.method_min_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_min_axis_index")
	}
	methodName1 := NewStringNameWithLatin1Chars("max_axis_index")
	defer methodName1.Destroy()
	log.Debug("globalVector3MethodBindings.method_max_axis_index")
	globalVector3MethodBindings.method_max_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector3MethodBindings.method_max_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_max_axis_index")
	}
	methodName2 := NewStringNameWithLatin1Chars("angle_to")
	defer methodName2.Destroy()
	log.Debug("globalVector3MethodBindings.method_angle_to")
	globalVector3MethodBindings.method_angle_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName2.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalVector3MethodBindings.method_angle_to == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_angle_to")
	}
	methodName3 := NewStringNameWithLatin1Chars("signed_angle_to")
	defer methodName3.Destroy()
	log.Debug("globalVector3MethodBindings.method_signed_angle_to")
	globalVector3MethodBindings.method_signed_angle_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName3.AsGDExtensionConstStringNamePtr(), 2781412522)
	if globalVector3MethodBindings.method_signed_angle_to == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_signed_angle_to")
	}
	methodName4 := NewStringNameWithLatin1Chars("direction_to")
	defer methodName4.Destroy()
	log.Debug("globalVector3MethodBindings.method_direction_to")
	globalVector3MethodBindings.method_direction_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName4.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_direction_to == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_direction_to")
	}
	methodName5 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName5.Destroy()
	log.Debug("globalVector3MethodBindings.method_distance_to")
	globalVector3MethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName5.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalVector3MethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_distance_to")
	}
	methodName6 := NewStringNameWithLatin1Chars("distance_squared_to")
	defer methodName6.Destroy()
	log.Debug("globalVector3MethodBindings.method_distance_squared_to")
	globalVector3MethodBindings.method_distance_squared_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName6.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalVector3MethodBindings.method_distance_squared_to == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_distance_squared_to")
	}
	methodName7 := NewStringNameWithLatin1Chars("length")
	defer methodName7.Destroy()
	log.Debug("globalVector3MethodBindings.method_length")
	globalVector3MethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName7.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector3MethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_length")
	}
	methodName8 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName8.Destroy()
	log.Debug("globalVector3MethodBindings.method_length_squared")
	globalVector3MethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName8.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector3MethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_length_squared")
	}
	methodName9 := NewStringNameWithLatin1Chars("limit_length")
	defer methodName9.Destroy()
	log.Debug("globalVector3MethodBindings.method_limit_length")
	globalVector3MethodBindings.method_limit_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName9.AsGDExtensionConstStringNamePtr(), 514930144)
	if globalVector3MethodBindings.method_limit_length == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_limit_length")
	}
	methodName10 := NewStringNameWithLatin1Chars("normalized")
	defer methodName10.Destroy()
	log.Debug("globalVector3MethodBindings.method_normalized")
	globalVector3MethodBindings.method_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName10.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_normalized == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_normalized")
	}
	methodName11 := NewStringNameWithLatin1Chars("is_normalized")
	defer methodName11.Destroy()
	log.Debug("globalVector3MethodBindings.method_is_normalized")
	globalVector3MethodBindings.method_is_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName11.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector3MethodBindings.method_is_normalized == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_is_normalized")
	}
	methodName12 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName12.Destroy()
	log.Debug("globalVector3MethodBindings.method_is_equal_approx")
	globalVector3MethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName12.AsGDExtensionConstStringNamePtr(), 1749054343)
	if globalVector3MethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_is_equal_approx")
	}
	methodName13 := NewStringNameWithLatin1Chars("is_zero_approx")
	defer methodName13.Destroy()
	log.Debug("globalVector3MethodBindings.method_is_zero_approx")
	globalVector3MethodBindings.method_is_zero_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName13.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector3MethodBindings.method_is_zero_approx == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_is_zero_approx")
	}
	methodName14 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName14.Destroy()
	log.Debug("globalVector3MethodBindings.method_is_finite")
	globalVector3MethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName14.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector3MethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_is_finite")
	}
	methodName15 := NewStringNameWithLatin1Chars("inverse")
	defer methodName15.Destroy()
	log.Debug("globalVector3MethodBindings.method_inverse")
	globalVector3MethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName15.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_inverse")
	}
	methodName16 := NewStringNameWithLatin1Chars("clamp")
	defer methodName16.Destroy()
	log.Debug("globalVector3MethodBindings.method_clamp")
	globalVector3MethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName16.AsGDExtensionConstStringNamePtr(), 4145107892)
	if globalVector3MethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_clamp")
	}
	methodName17 := NewStringNameWithLatin1Chars("clampf")
	defer methodName17.Destroy()
	log.Debug("globalVector3MethodBindings.method_clampf")
	globalVector3MethodBindings.method_clampf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName17.AsGDExtensionConstStringNamePtr(), 2329594628)
	if globalVector3MethodBindings.method_clampf == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_clampf")
	}
	methodName18 := NewStringNameWithLatin1Chars("snapped")
	defer methodName18.Destroy()
	log.Debug("globalVector3MethodBindings.method_snapped")
	globalVector3MethodBindings.method_snapped = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName18.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_snapped == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_snapped")
	}
	methodName19 := NewStringNameWithLatin1Chars("snappedf")
	defer methodName19.Destroy()
	log.Debug("globalVector3MethodBindings.method_snappedf")
	globalVector3MethodBindings.method_snappedf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName19.AsGDExtensionConstStringNamePtr(), 514930144)
	if globalVector3MethodBindings.method_snappedf == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_snappedf")
	}
	methodName20 := NewStringNameWithLatin1Chars("rotated")
	defer methodName20.Destroy()
	log.Debug("globalVector3MethodBindings.method_rotated")
	globalVector3MethodBindings.method_rotated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName20.AsGDExtensionConstStringNamePtr(), 1682608829)
	if globalVector3MethodBindings.method_rotated == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_rotated")
	}
	methodName21 := NewStringNameWithLatin1Chars("lerp")
	defer methodName21.Destroy()
	log.Debug("globalVector3MethodBindings.method_lerp")
	globalVector3MethodBindings.method_lerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName21.AsGDExtensionConstStringNamePtr(), 1682608829)
	if globalVector3MethodBindings.method_lerp == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_lerp")
	}
	methodName22 := NewStringNameWithLatin1Chars("slerp")
	defer methodName22.Destroy()
	log.Debug("globalVector3MethodBindings.method_slerp")
	globalVector3MethodBindings.method_slerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName22.AsGDExtensionConstStringNamePtr(), 1682608829)
	if globalVector3MethodBindings.method_slerp == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_slerp")
	}
	methodName23 := NewStringNameWithLatin1Chars("cubic_interpolate")
	defer methodName23.Destroy()
	log.Debug("globalVector3MethodBindings.method_cubic_interpolate")
	globalVector3MethodBindings.method_cubic_interpolate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName23.AsGDExtensionConstStringNamePtr(), 2597922253)
	if globalVector3MethodBindings.method_cubic_interpolate == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_cubic_interpolate")
	}
	methodName24 := NewStringNameWithLatin1Chars("cubic_interpolate_in_time")
	defer methodName24.Destroy()
	log.Debug("globalVector3MethodBindings.method_cubic_interpolate_in_time")
	globalVector3MethodBindings.method_cubic_interpolate_in_time = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName24.AsGDExtensionConstStringNamePtr(), 3256682901)
	if globalVector3MethodBindings.method_cubic_interpolate_in_time == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_cubic_interpolate_in_time")
	}
	methodName25 := NewStringNameWithLatin1Chars("bezier_interpolate")
	defer methodName25.Destroy()
	log.Debug("globalVector3MethodBindings.method_bezier_interpolate")
	globalVector3MethodBindings.method_bezier_interpolate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName25.AsGDExtensionConstStringNamePtr(), 2597922253)
	if globalVector3MethodBindings.method_bezier_interpolate == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_bezier_interpolate")
	}
	methodName26 := NewStringNameWithLatin1Chars("bezier_derivative")
	defer methodName26.Destroy()
	log.Debug("globalVector3MethodBindings.method_bezier_derivative")
	globalVector3MethodBindings.method_bezier_derivative = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName26.AsGDExtensionConstStringNamePtr(), 2597922253)
	if globalVector3MethodBindings.method_bezier_derivative == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_bezier_derivative")
	}
	methodName27 := NewStringNameWithLatin1Chars("move_toward")
	defer methodName27.Destroy()
	log.Debug("globalVector3MethodBindings.method_move_toward")
	globalVector3MethodBindings.method_move_toward = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName27.AsGDExtensionConstStringNamePtr(), 1682608829)
	if globalVector3MethodBindings.method_move_toward == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_move_toward")
	}
	methodName28 := NewStringNameWithLatin1Chars("dot")
	defer methodName28.Destroy()
	log.Debug("globalVector3MethodBindings.method_dot")
	globalVector3MethodBindings.method_dot = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName28.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalVector3MethodBindings.method_dot == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_dot")
	}
	methodName29 := NewStringNameWithLatin1Chars("cross")
	defer methodName29.Destroy()
	log.Debug("globalVector3MethodBindings.method_cross")
	globalVector3MethodBindings.method_cross = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName29.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_cross == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_cross")
	}
	methodName30 := NewStringNameWithLatin1Chars("outer")
	defer methodName30.Destroy()
	log.Debug("globalVector3MethodBindings.method_outer")
	globalVector3MethodBindings.method_outer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName30.AsGDExtensionConstStringNamePtr(), 3934786792)
	if globalVector3MethodBindings.method_outer == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_outer")
	}
	methodName31 := NewStringNameWithLatin1Chars("abs")
	defer methodName31.Destroy()
	log.Debug("globalVector3MethodBindings.method_abs")
	globalVector3MethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName31.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_abs")
	}
	methodName32 := NewStringNameWithLatin1Chars("floor")
	defer methodName32.Destroy()
	log.Debug("globalVector3MethodBindings.method_floor")
	globalVector3MethodBindings.method_floor = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName32.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_floor == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_floor")
	}
	methodName33 := NewStringNameWithLatin1Chars("ceil")
	defer methodName33.Destroy()
	log.Debug("globalVector3MethodBindings.method_ceil")
	globalVector3MethodBindings.method_ceil = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName33.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_ceil == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_ceil")
	}
	methodName34 := NewStringNameWithLatin1Chars("round")
	defer methodName34.Destroy()
	log.Debug("globalVector3MethodBindings.method_round")
	globalVector3MethodBindings.method_round = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName34.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_round == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_round")
	}
	methodName35 := NewStringNameWithLatin1Chars("posmod")
	defer methodName35.Destroy()
	log.Debug("globalVector3MethodBindings.method_posmod")
	globalVector3MethodBindings.method_posmod = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName35.AsGDExtensionConstStringNamePtr(), 514930144)
	if globalVector3MethodBindings.method_posmod == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_posmod")
	}
	methodName36 := NewStringNameWithLatin1Chars("posmodv")
	defer methodName36.Destroy()
	log.Debug("globalVector3MethodBindings.method_posmodv")
	globalVector3MethodBindings.method_posmodv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName36.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_posmodv == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_posmodv")
	}
	methodName37 := NewStringNameWithLatin1Chars("project")
	defer methodName37.Destroy()
	log.Debug("globalVector3MethodBindings.method_project")
	globalVector3MethodBindings.method_project = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName37.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_project == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_project")
	}
	methodName38 := NewStringNameWithLatin1Chars("slide")
	defer methodName38.Destroy()
	log.Debug("globalVector3MethodBindings.method_slide")
	globalVector3MethodBindings.method_slide = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName38.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_slide == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_slide")
	}
	methodName39 := NewStringNameWithLatin1Chars("bounce")
	defer methodName39.Destroy()
	log.Debug("globalVector3MethodBindings.method_bounce")
	globalVector3MethodBindings.method_bounce = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName39.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_bounce == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_bounce")
	}
	methodName40 := NewStringNameWithLatin1Chars("reflect")
	defer methodName40.Destroy()
	log.Debug("globalVector3MethodBindings.method_reflect")
	globalVector3MethodBindings.method_reflect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName40.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_reflect == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_reflect")
	}
	methodName41 := NewStringNameWithLatin1Chars("sign")
	defer methodName41.Destroy()
	log.Debug("globalVector3MethodBindings.method_sign")
	globalVector3MethodBindings.method_sign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName41.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalVector3MethodBindings.method_sign == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_sign")
	}
	methodName42 := NewStringNameWithLatin1Chars("octahedron_encode")
	defer methodName42.Destroy()
	log.Debug("globalVector3MethodBindings.method_octahedron_encode")
	globalVector3MethodBindings.method_octahedron_encode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName42.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalVector3MethodBindings.method_octahedron_encode == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_octahedron_encode")
	}
	methodName43 := NewStringNameWithLatin1Chars("min")
	defer methodName43.Destroy()
	log.Debug("globalVector3MethodBindings.method_min")
	globalVector3MethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName43.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_min")
	}
	methodName44 := NewStringNameWithLatin1Chars("minf")
	defer methodName44.Destroy()
	log.Debug("globalVector3MethodBindings.method_minf")
	globalVector3MethodBindings.method_minf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName44.AsGDExtensionConstStringNamePtr(), 514930144)
	if globalVector3MethodBindings.method_minf == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_minf")
	}
	methodName45 := NewStringNameWithLatin1Chars("max")
	defer methodName45.Destroy()
	log.Debug("globalVector3MethodBindings.method_max")
	globalVector3MethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName45.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalVector3MethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_max")
	}
	methodName46 := NewStringNameWithLatin1Chars("maxf")
	defer methodName46.Destroy()
	log.Debug("globalVector3MethodBindings.method_maxf")
	globalVector3MethodBindings.method_maxf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName46.AsGDExtensionConstStringNamePtr(), 514930144)
	if globalVector3MethodBindings.method_maxf == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_maxf")
	}
	methodName47 := NewStringNameWithLatin1Chars("octahedron_decode")
	defer methodName47.Destroy()
	log.Debug("globalVector3MethodBindings.method_octahedron_decode")
	globalVector3MethodBindings.method_octahedron_decode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3, methodName47.AsGDExtensionConstStringNamePtr(), 3991820552)
	if globalVector3MethodBindings.method_octahedron_decode == nil {
		missingMethods = append(missingMethods, "globalVector3MethodBindings.method_octahedron_decode")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalVector3MethodBindings.member_x_setter")
	globalVector3MethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3MethodBindings.member_x_getter")
	globalVector3MethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalVector3MethodBindings.member_y_setter")
	globalVector3MethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3MethodBindings.member_y_getter")
	globalVector3MethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalVector3MethodBindings.member_z_setter")
	globalVector3MethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3MethodBindings.member_z_getter")
	globalVector3MethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3MethodBindings.indexed_setter")
	globalVector3MethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.indexed_getter")
	globalVector3MethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: equal Variant")
	globalVector3MethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3MethodBindings.operator: not_equal Variant")
	globalVector3MethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3MethodBindings.operator: negate ")
	globalVector3MethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3MethodBindings.operator: positive ")
	globalVector3MethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3MethodBindings.operator: not ")
	globalVector3MethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3MethodBindings.operator: multiply int")
	globalVector3MethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector3MethodBindings.operator: divide int")
	globalVector3MethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector3MethodBindings.operator: multiply float")
	globalVector3MethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector3MethodBindings.operator: divide float")
	globalVector3MethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector3MethodBindings.operator: equal Vector3")
	globalVector3MethodBindings.operator_equal_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: not_equal Vector3")
	globalVector3MethodBindings.operator_not_equal_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: less Vector3")
	globalVector3MethodBindings.operator_less_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: less_equal Vector3")
	globalVector3MethodBindings.operator_less_equal_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: greater Vector3")
	globalVector3MethodBindings.operator_greater_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: greater_equal Vector3")
	globalVector3MethodBindings.operator_greater_equal_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: add Vector3")
	globalVector3MethodBindings.operator_add_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: subtract Vector3")
	globalVector3MethodBindings.operator_subtract_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: multiply Vector3")
	globalVector3MethodBindings.operator_multiply_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: divide Vector3")
	globalVector3MethodBindings.operator_divide_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalVector3MethodBindings.operator: multiply Quaternion")
	globalVector3MethodBindings.operator_multiply_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalVector3MethodBindings.operator: multiply Basis")
	globalVector3MethodBindings.operator_multiply_Basis = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalVector3MethodBindings.operator: multiply Transform3D")
	globalVector3MethodBindings.operator_multiply_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalVector3MethodBindings.operator: in Dictionary")
	globalVector3MethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalVector3MethodBindings.operator: in Array")
	globalVector3MethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalVector3MethodBindings.operator: in PackedVector3Array")
	globalVector3MethodBindings.operator_in_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR3, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("vector3InitBindings end")
}

type vector3iMethodBindings struct {
	constructor_0                   GDExtensionPtrConstructor
	constructor_1                   GDExtensionPtrConstructor
	constructor_2                   GDExtensionPtrConstructor
	constructor_3                   GDExtensionPtrConstructor
	method_min_axis_index           GDExtensionPtrBuiltInMethod
	method_max_axis_index           GDExtensionPtrBuiltInMethod
	method_distance_to              GDExtensionPtrBuiltInMethod
	method_distance_squared_to      GDExtensionPtrBuiltInMethod
	method_length                   GDExtensionPtrBuiltInMethod
	method_length_squared           GDExtensionPtrBuiltInMethod
	method_sign                     GDExtensionPtrBuiltInMethod
	method_abs                      GDExtensionPtrBuiltInMethod
	method_clamp                    GDExtensionPtrBuiltInMethod
	method_clampi                   GDExtensionPtrBuiltInMethod
	method_snapped                  GDExtensionPtrBuiltInMethod
	method_snappedi                 GDExtensionPtrBuiltInMethod
	method_min                      GDExtensionPtrBuiltInMethod
	method_mini                     GDExtensionPtrBuiltInMethod
	method_max                      GDExtensionPtrBuiltInMethod
	method_maxi                     GDExtensionPtrBuiltInMethod
	member_x_setter                 GDExtensionPtrSetter
	member_x_getter                 GDExtensionPtrGetter
	member_y_setter                 GDExtensionPtrSetter
	member_y_getter                 GDExtensionPtrGetter
	member_z_setter                 GDExtensionPtrSetter
	member_z_getter                 GDExtensionPtrGetter
	indexed_setter                  GDExtensionPtrIndexedSetter
	indexed_getter                  GDExtensionPtrIndexedGetter
	operator_equal_Variant          GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant      GDExtensionPtrOperatorEvaluator
	operator_negate                 GDExtensionPtrOperatorEvaluator
	operator_positive               GDExtensionPtrOperatorEvaluator
	operator_not                    GDExtensionPtrOperatorEvaluator
	operator_multiply_int           GDExtensionPtrOperatorEvaluator
	operator_divide_int             GDExtensionPtrOperatorEvaluator
	operator_module_int             GDExtensionPtrOperatorEvaluator
	operator_multiply_float         GDExtensionPtrOperatorEvaluator
	operator_divide_float           GDExtensionPtrOperatorEvaluator
	operator_equal_Vector3i         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Vector3i     GDExtensionPtrOperatorEvaluator
	operator_less_Vector3i          GDExtensionPtrOperatorEvaluator
	operator_less_equal_Vector3i    GDExtensionPtrOperatorEvaluator
	operator_greater_Vector3i       GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Vector3i GDExtensionPtrOperatorEvaluator
	operator_add_Vector3i           GDExtensionPtrOperatorEvaluator
	operator_subtract_Vector3i      GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector3i      GDExtensionPtrOperatorEvaluator
	operator_divide_Vector3i        GDExtensionPtrOperatorEvaluator
	operator_module_Vector3i        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary          GDExtensionPtrOperatorEvaluator
	operator_in_Array               GDExtensionPtrOperatorEvaluator
}

var globalVector3iMethodBindings vector3iMethodBindings

func vector3iInitConstructorBindings() {
	log.Debug("vector3iInitConstructorBindings called")

	log.Debug("globalVector3iMethodBindings.constructor_0")
	globalVector3iMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3I, 0)
	log.Debug("globalVector3iMethodBindings.constructor_1")
	globalVector3iMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3I, 1)
	log.Debug("globalVector3iMethodBindings.constructor_2")
	globalVector3iMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3I, 2)
	log.Debug("globalVector3iMethodBindings.constructor_3")
	globalVector3iMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR3I, 3)
}

func vector3iInitMethodBindings() {
	log.Debug("vector3iInitMethodBindings called")

	missingMethods := make([]string, 0, 16)

	methodName0 := NewStringNameWithLatin1Chars("min_axis_index")
	defer methodName0.Destroy()
	log.Debug("globalVector3iMethodBindings.method_min_axis_index")
	globalVector3iMethodBindings.method_min_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector3iMethodBindings.method_min_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_min_axis_index")
	}
	methodName1 := NewStringNameWithLatin1Chars("max_axis_index")
	defer methodName1.Destroy()
	log.Debug("globalVector3iMethodBindings.method_max_axis_index")
	globalVector3iMethodBindings.method_max_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector3iMethodBindings.method_max_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_max_axis_index")
	}
	methodName2 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName2.Destroy()
	log.Debug("globalVector3iMethodBindings.method_distance_to")
	globalVector3iMethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName2.AsGDExtensionConstStringNamePtr(), 1975170430)
	if globalVector3iMethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_distance_to")
	}
	methodName3 := NewStringNameWithLatin1Chars("distance_squared_to")
	defer methodName3.Destroy()
	log.Debug("globalVector3iMethodBindings.method_distance_squared_to")
	globalVector3iMethodBindings.method_distance_squared_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName3.AsGDExtensionConstStringNamePtr(), 2947717320)
	if globalVector3iMethodBindings.method_distance_squared_to == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_distance_squared_to")
	}
	methodName4 := NewStringNameWithLatin1Chars("length")
	defer methodName4.Destroy()
	log.Debug("globalVector3iMethodBindings.method_length")
	globalVector3iMethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName4.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector3iMethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_length")
	}
	methodName5 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName5.Destroy()
	log.Debug("globalVector3iMethodBindings.method_length_squared")
	globalVector3iMethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName5.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector3iMethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_length_squared")
	}
	methodName6 := NewStringNameWithLatin1Chars("sign")
	defer methodName6.Destroy()
	log.Debug("globalVector3iMethodBindings.method_sign")
	globalVector3iMethodBindings.method_sign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName6.AsGDExtensionConstStringNamePtr(), 3729604559)
	if globalVector3iMethodBindings.method_sign == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_sign")
	}
	methodName7 := NewStringNameWithLatin1Chars("abs")
	defer methodName7.Destroy()
	log.Debug("globalVector3iMethodBindings.method_abs")
	globalVector3iMethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName7.AsGDExtensionConstStringNamePtr(), 3729604559)
	if globalVector3iMethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_abs")
	}
	methodName8 := NewStringNameWithLatin1Chars("clamp")
	defer methodName8.Destroy()
	log.Debug("globalVector3iMethodBindings.method_clamp")
	globalVector3iMethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName8.AsGDExtensionConstStringNamePtr(), 1086892323)
	if globalVector3iMethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_clamp")
	}
	methodName9 := NewStringNameWithLatin1Chars("clampi")
	defer methodName9.Destroy()
	log.Debug("globalVector3iMethodBindings.method_clampi")
	globalVector3iMethodBindings.method_clampi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName9.AsGDExtensionConstStringNamePtr(), 1077216921)
	if globalVector3iMethodBindings.method_clampi == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_clampi")
	}
	methodName10 := NewStringNameWithLatin1Chars("snapped")
	defer methodName10.Destroy()
	log.Debug("globalVector3iMethodBindings.method_snapped")
	globalVector3iMethodBindings.method_snapped = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName10.AsGDExtensionConstStringNamePtr(), 1989319750)
	if globalVector3iMethodBindings.method_snapped == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_snapped")
	}
	methodName11 := NewStringNameWithLatin1Chars("snappedi")
	defer methodName11.Destroy()
	log.Debug("globalVector3iMethodBindings.method_snappedi")
	globalVector3iMethodBindings.method_snappedi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName11.AsGDExtensionConstStringNamePtr(), 2377625641)
	if globalVector3iMethodBindings.method_snappedi == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_snappedi")
	}
	methodName12 := NewStringNameWithLatin1Chars("min")
	defer methodName12.Destroy()
	log.Debug("globalVector3iMethodBindings.method_min")
	globalVector3iMethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName12.AsGDExtensionConstStringNamePtr(), 1989319750)
	if globalVector3iMethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_min")
	}
	methodName13 := NewStringNameWithLatin1Chars("mini")
	defer methodName13.Destroy()
	log.Debug("globalVector3iMethodBindings.method_mini")
	globalVector3iMethodBindings.method_mini = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName13.AsGDExtensionConstStringNamePtr(), 2377625641)
	if globalVector3iMethodBindings.method_mini == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_mini")
	}
	methodName14 := NewStringNameWithLatin1Chars("max")
	defer methodName14.Destroy()
	log.Debug("globalVector3iMethodBindings.method_max")
	globalVector3iMethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName14.AsGDExtensionConstStringNamePtr(), 1989319750)
	if globalVector3iMethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_max")
	}
	methodName15 := NewStringNameWithLatin1Chars("maxi")
	defer methodName15.Destroy()
	log.Debug("globalVector3iMethodBindings.method_maxi")
	globalVector3iMethodBindings.method_maxi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR3I, methodName15.AsGDExtensionConstStringNamePtr(), 2377625641)
	if globalVector3iMethodBindings.method_maxi == nil {
		missingMethods = append(missingMethods, "globalVector3iMethodBindings.method_maxi")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalVector3iMethodBindings.member_x_setter")
	globalVector3iMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3iMethodBindings.member_x_getter")
	globalVector3iMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalVector3iMethodBindings.member_y_setter")
	globalVector3iMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3iMethodBindings.member_y_getter")
	globalVector3iMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalVector3iMethodBindings.member_z_setter")
	globalVector3iMethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3iMethodBindings.member_z_getter")
	globalVector3iMethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector3iMethodBindings.indexed_setter")
	globalVector3iMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.indexed_getter")
	globalVector3iMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: equal Variant")
	globalVector3iMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3iMethodBindings.operator: not_equal Variant")
	globalVector3iMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3iMethodBindings.operator: negate ")
	globalVector3iMethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3iMethodBindings.operator: positive ")
	globalVector3iMethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3iMethodBindings.operator: not ")
	globalVector3iMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector3iMethodBindings.operator: multiply int")
	globalVector3iMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector3iMethodBindings.operator: divide int")
	globalVector3iMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector3iMethodBindings.operator: module int")
	globalVector3iMethodBindings.operator_module_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector3iMethodBindings.operator: multiply float")
	globalVector3iMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector3iMethodBindings.operator: divide float")
	globalVector3iMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector3iMethodBindings.operator: equal Vector3i")
	globalVector3iMethodBindings.operator_equal_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: not_equal Vector3i")
	globalVector3iMethodBindings.operator_not_equal_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: less Vector3i")
	globalVector3iMethodBindings.operator_less_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: less_equal Vector3i")
	globalVector3iMethodBindings.operator_less_equal_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: greater Vector3i")
	globalVector3iMethodBindings.operator_greater_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: greater_equal Vector3i")
	globalVector3iMethodBindings.operator_greater_equal_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: add Vector3i")
	globalVector3iMethodBindings.operator_add_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: subtract Vector3i")
	globalVector3iMethodBindings.operator_subtract_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: multiply Vector3i")
	globalVector3iMethodBindings.operator_multiply_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: divide Vector3i")
	globalVector3iMethodBindings.operator_divide_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: module Vector3i")
	globalVector3iMethodBindings.operator_module_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalVector3iMethodBindings.operator: in Dictionary")
	globalVector3iMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalVector3iMethodBindings.operator: in Array")
	globalVector3iMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR3I, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("vector3iInitBindings end")
}

type transform2DMethodBindings struct {
	constructor_0                        GDExtensionPtrConstructor
	constructor_1                        GDExtensionPtrConstructor
	constructor_2                        GDExtensionPtrConstructor
	constructor_3                        GDExtensionPtrConstructor
	constructor_4                        GDExtensionPtrConstructor
	method_inverse                       GDExtensionPtrBuiltInMethod
	method_affine_inverse                GDExtensionPtrBuiltInMethod
	method_get_rotation                  GDExtensionPtrBuiltInMethod
	method_get_origin                    GDExtensionPtrBuiltInMethod
	method_get_scale                     GDExtensionPtrBuiltInMethod
	method_get_skew                      GDExtensionPtrBuiltInMethod
	method_orthonormalized               GDExtensionPtrBuiltInMethod
	method_rotated                       GDExtensionPtrBuiltInMethod
	method_rotated_local                 GDExtensionPtrBuiltInMethod
	method_scaled                        GDExtensionPtrBuiltInMethod
	method_scaled_local                  GDExtensionPtrBuiltInMethod
	method_translated                    GDExtensionPtrBuiltInMethod
	method_translated_local              GDExtensionPtrBuiltInMethod
	method_determinant                   GDExtensionPtrBuiltInMethod
	method_basis_xform                   GDExtensionPtrBuiltInMethod
	method_basis_xform_inv               GDExtensionPtrBuiltInMethod
	method_interpolate_with              GDExtensionPtrBuiltInMethod
	method_is_conformal                  GDExtensionPtrBuiltInMethod
	method_is_equal_approx               GDExtensionPtrBuiltInMethod
	method_is_finite                     GDExtensionPtrBuiltInMethod
	method_looking_at                    GDExtensionPtrBuiltInMethod
	member_x_setter                      GDExtensionPtrSetter
	member_x_getter                      GDExtensionPtrGetter
	member_y_setter                      GDExtensionPtrSetter
	member_y_getter                      GDExtensionPtrGetter
	member_origin_setter                 GDExtensionPtrSetter
	member_origin_getter                 GDExtensionPtrGetter
	indexed_setter                       GDExtensionPtrIndexedSetter
	indexed_getter                       GDExtensionPtrIndexedGetter
	operator_equal_Variant               GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not                         GDExtensionPtrOperatorEvaluator
	operator_multiply_int                GDExtensionPtrOperatorEvaluator
	operator_divide_int                  GDExtensionPtrOperatorEvaluator
	operator_multiply_float              GDExtensionPtrOperatorEvaluator
	operator_divide_float                GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector2            GDExtensionPtrOperatorEvaluator
	operator_multiply_Rect2              GDExtensionPtrOperatorEvaluator
	operator_equal_Transform2D           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Transform2D       GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform2D        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary               GDExtensionPtrOperatorEvaluator
	operator_in_Array                    GDExtensionPtrOperatorEvaluator
	operator_multiply_PackedVector2Array GDExtensionPtrOperatorEvaluator
}

var globalTransform2DMethodBindings transform2DMethodBindings

func transform2DInitConstructorBindings() {
	log.Debug("transform2DInitConstructorBindings called")

	log.Debug("globalTransform2DMethodBindings.constructor_0")
	globalTransform2DMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, 0)
	log.Debug("globalTransform2DMethodBindings.constructor_1")
	globalTransform2DMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, 1)
	log.Debug("globalTransform2DMethodBindings.constructor_2")
	globalTransform2DMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, 2)
	log.Debug("globalTransform2DMethodBindings.constructor_3")
	globalTransform2DMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, 3)
	log.Debug("globalTransform2DMethodBindings.constructor_4")
	globalTransform2DMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, 4)
}

func transform2DInitMethodBindings() {
	log.Debug("transform2DInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("inverse")
	defer methodName0.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_inverse")
	globalTransform2DMethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName0.AsGDExtensionConstStringNamePtr(), 1420440541)
	if globalTransform2DMethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_inverse")
	}
	methodName1 := NewStringNameWithLatin1Chars("affine_inverse")
	defer methodName1.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_affine_inverse")
	globalTransform2DMethodBindings.method_affine_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName1.AsGDExtensionConstStringNamePtr(), 1420440541)
	if globalTransform2DMethodBindings.method_affine_inverse == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_affine_inverse")
	}
	methodName2 := NewStringNameWithLatin1Chars("get_rotation")
	defer methodName2.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_get_rotation")
	globalTransform2DMethodBindings.method_get_rotation = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName2.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalTransform2DMethodBindings.method_get_rotation == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_get_rotation")
	}
	methodName3 := NewStringNameWithLatin1Chars("get_origin")
	defer methodName3.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_get_origin")
	globalTransform2DMethodBindings.method_get_origin = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName3.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalTransform2DMethodBindings.method_get_origin == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_get_origin")
	}
	methodName4 := NewStringNameWithLatin1Chars("get_scale")
	defer methodName4.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_get_scale")
	globalTransform2DMethodBindings.method_get_scale = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName4.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalTransform2DMethodBindings.method_get_scale == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_get_scale")
	}
	methodName5 := NewStringNameWithLatin1Chars("get_skew")
	defer methodName5.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_get_skew")
	globalTransform2DMethodBindings.method_get_skew = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName5.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalTransform2DMethodBindings.method_get_skew == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_get_skew")
	}
	methodName6 := NewStringNameWithLatin1Chars("orthonormalized")
	defer methodName6.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_orthonormalized")
	globalTransform2DMethodBindings.method_orthonormalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName6.AsGDExtensionConstStringNamePtr(), 1420440541)
	if globalTransform2DMethodBindings.method_orthonormalized == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_orthonormalized")
	}
	methodName7 := NewStringNameWithLatin1Chars("rotated")
	defer methodName7.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_rotated")
	globalTransform2DMethodBindings.method_rotated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName7.AsGDExtensionConstStringNamePtr(), 729597514)
	if globalTransform2DMethodBindings.method_rotated == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_rotated")
	}
	methodName8 := NewStringNameWithLatin1Chars("rotated_local")
	defer methodName8.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_rotated_local")
	globalTransform2DMethodBindings.method_rotated_local = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName8.AsGDExtensionConstStringNamePtr(), 729597514)
	if globalTransform2DMethodBindings.method_rotated_local == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_rotated_local")
	}
	methodName9 := NewStringNameWithLatin1Chars("scaled")
	defer methodName9.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_scaled")
	globalTransform2DMethodBindings.method_scaled = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName9.AsGDExtensionConstStringNamePtr(), 1446323263)
	if globalTransform2DMethodBindings.method_scaled == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_scaled")
	}
	methodName10 := NewStringNameWithLatin1Chars("scaled_local")
	defer methodName10.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_scaled_local")
	globalTransform2DMethodBindings.method_scaled_local = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName10.AsGDExtensionConstStringNamePtr(), 1446323263)
	if globalTransform2DMethodBindings.method_scaled_local == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_scaled_local")
	}
	methodName11 := NewStringNameWithLatin1Chars("translated")
	defer methodName11.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_translated")
	globalTransform2DMethodBindings.method_translated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName11.AsGDExtensionConstStringNamePtr(), 1446323263)
	if globalTransform2DMethodBindings.method_translated == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_translated")
	}
	methodName12 := NewStringNameWithLatin1Chars("translated_local")
	defer methodName12.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_translated_local")
	globalTransform2DMethodBindings.method_translated_local = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName12.AsGDExtensionConstStringNamePtr(), 1446323263)
	if globalTransform2DMethodBindings.method_translated_local == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_translated_local")
	}
	methodName13 := NewStringNameWithLatin1Chars("determinant")
	defer methodName13.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_determinant")
	globalTransform2DMethodBindings.method_determinant = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName13.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalTransform2DMethodBindings.method_determinant == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_determinant")
	}
	methodName14 := NewStringNameWithLatin1Chars("basis_xform")
	defer methodName14.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_basis_xform")
	globalTransform2DMethodBindings.method_basis_xform = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName14.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalTransform2DMethodBindings.method_basis_xform == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_basis_xform")
	}
	methodName15 := NewStringNameWithLatin1Chars("basis_xform_inv")
	defer methodName15.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_basis_xform_inv")
	globalTransform2DMethodBindings.method_basis_xform_inv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName15.AsGDExtensionConstStringNamePtr(), 2026743667)
	if globalTransform2DMethodBindings.method_basis_xform_inv == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_basis_xform_inv")
	}
	methodName16 := NewStringNameWithLatin1Chars("interpolate_with")
	defer methodName16.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_interpolate_with")
	globalTransform2DMethodBindings.method_interpolate_with = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName16.AsGDExtensionConstStringNamePtr(), 359399686)
	if globalTransform2DMethodBindings.method_interpolate_with == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_interpolate_with")
	}
	methodName17 := NewStringNameWithLatin1Chars("is_conformal")
	defer methodName17.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_is_conformal")
	globalTransform2DMethodBindings.method_is_conformal = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName17.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalTransform2DMethodBindings.method_is_conformal == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_is_conformal")
	}
	methodName18 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName18.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_is_equal_approx")
	globalTransform2DMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName18.AsGDExtensionConstStringNamePtr(), 3837431929)
	if globalTransform2DMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_is_equal_approx")
	}
	methodName19 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName19.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_is_finite")
	globalTransform2DMethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName19.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalTransform2DMethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_is_finite")
	}
	methodName20 := NewStringNameWithLatin1Chars("looking_at")
	defer methodName20.Destroy()
	log.Debug("globalTransform2DMethodBindings.method_looking_at")
	globalTransform2DMethodBindings.method_looking_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, methodName20.AsGDExtensionConstStringNamePtr(), 1446323263)
	if globalTransform2DMethodBindings.method_looking_at == nil {
		missingMethods = append(missingMethods, "globalTransform2DMethodBindings.method_looking_at")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalTransform2DMethodBindings.member_x_setter")
	globalTransform2DMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform2DMethodBindings.member_x_getter")
	globalTransform2DMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalTransform2DMethodBindings.member_y_setter")
	globalTransform2DMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform2DMethodBindings.member_y_getter")
	globalTransform2DMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("origin")
	defer memberName2.Destroy()
	log.Debug("globalTransform2DMethodBindings.member_origin_setter")
	globalTransform2DMethodBindings.member_origin_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform2DMethodBindings.member_origin_getter")
	globalTransform2DMethodBindings.member_origin_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform2DMethodBindings.indexed_setter")
	globalTransform2DMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalTransform2DMethodBindings.indexed_getter")
	globalTransform2DMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalTransform2DMethodBindings.operator: equal Variant")
	globalTransform2DMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalTransform2DMethodBindings.operator: not_equal Variant")
	globalTransform2DMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalTransform2DMethodBindings.operator: not ")
	globalTransform2DMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalTransform2DMethodBindings.operator: multiply int")
	globalTransform2DMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalTransform2DMethodBindings.operator: divide int")
	globalTransform2DMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalTransform2DMethodBindings.operator: multiply float")
	globalTransform2DMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalTransform2DMethodBindings.operator: divide float")
	globalTransform2DMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalTransform2DMethodBindings.operator: multiply Vector2")
	globalTransform2DMethodBindings.operator_multiply_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalTransform2DMethodBindings.operator: multiply Rect2")
	globalTransform2DMethodBindings.operator_multiply_Rect2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_RECT2)
	log.Debug("globalTransform2DMethodBindings.operator: equal Transform2D")
	globalTransform2DMethodBindings.operator_equal_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalTransform2DMethodBindings.operator: not_equal Transform2D")
	globalTransform2DMethodBindings.operator_not_equal_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalTransform2DMethodBindings.operator: multiply Transform2D")
	globalTransform2DMethodBindings.operator_multiply_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalTransform2DMethodBindings.operator: in Dictionary")
	globalTransform2DMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalTransform2DMethodBindings.operator: in Array")
	globalTransform2DMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalTransform2DMethodBindings.operator: multiply PackedVector2Array")
	globalTransform2DMethodBindings.operator_multiply_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("transform2DInitBindings end")
}

type vector4MethodBindings struct {
	constructor_0                    GDExtensionPtrConstructor
	constructor_1                    GDExtensionPtrConstructor
	constructor_2                    GDExtensionPtrConstructor
	constructor_3                    GDExtensionPtrConstructor
	method_min_axis_index            GDExtensionPtrBuiltInMethod
	method_max_axis_index            GDExtensionPtrBuiltInMethod
	method_length                    GDExtensionPtrBuiltInMethod
	method_length_squared            GDExtensionPtrBuiltInMethod
	method_abs                       GDExtensionPtrBuiltInMethod
	method_sign                      GDExtensionPtrBuiltInMethod
	method_floor                     GDExtensionPtrBuiltInMethod
	method_ceil                      GDExtensionPtrBuiltInMethod
	method_round                     GDExtensionPtrBuiltInMethod
	method_lerp                      GDExtensionPtrBuiltInMethod
	method_cubic_interpolate         GDExtensionPtrBuiltInMethod
	method_cubic_interpolate_in_time GDExtensionPtrBuiltInMethod
	method_posmod                    GDExtensionPtrBuiltInMethod
	method_posmodv                   GDExtensionPtrBuiltInMethod
	method_snapped                   GDExtensionPtrBuiltInMethod
	method_snappedf                  GDExtensionPtrBuiltInMethod
	method_clamp                     GDExtensionPtrBuiltInMethod
	method_clampf                    GDExtensionPtrBuiltInMethod
	method_normalized                GDExtensionPtrBuiltInMethod
	method_is_normalized             GDExtensionPtrBuiltInMethod
	method_direction_to              GDExtensionPtrBuiltInMethod
	method_distance_to               GDExtensionPtrBuiltInMethod
	method_distance_squared_to       GDExtensionPtrBuiltInMethod
	method_dot                       GDExtensionPtrBuiltInMethod
	method_inverse                   GDExtensionPtrBuiltInMethod
	method_is_equal_approx           GDExtensionPtrBuiltInMethod
	method_is_zero_approx            GDExtensionPtrBuiltInMethod
	method_is_finite                 GDExtensionPtrBuiltInMethod
	method_min                       GDExtensionPtrBuiltInMethod
	method_minf                      GDExtensionPtrBuiltInMethod
	method_max                       GDExtensionPtrBuiltInMethod
	method_maxf                      GDExtensionPtrBuiltInMethod
	member_x_setter                  GDExtensionPtrSetter
	member_x_getter                  GDExtensionPtrGetter
	member_y_setter                  GDExtensionPtrSetter
	member_y_getter                  GDExtensionPtrGetter
	member_z_setter                  GDExtensionPtrSetter
	member_z_getter                  GDExtensionPtrGetter
	member_w_setter                  GDExtensionPtrSetter
	member_w_getter                  GDExtensionPtrGetter
	indexed_setter                   GDExtensionPtrIndexedSetter
	indexed_getter                   GDExtensionPtrIndexedGetter
	operator_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_negate                  GDExtensionPtrOperatorEvaluator
	operator_positive                GDExtensionPtrOperatorEvaluator
	operator_not                     GDExtensionPtrOperatorEvaluator
	operator_multiply_int            GDExtensionPtrOperatorEvaluator
	operator_divide_int              GDExtensionPtrOperatorEvaluator
	operator_multiply_float          GDExtensionPtrOperatorEvaluator
	operator_divide_float            GDExtensionPtrOperatorEvaluator
	operator_equal_Vector4           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Vector4       GDExtensionPtrOperatorEvaluator
	operator_less_Vector4            GDExtensionPtrOperatorEvaluator
	operator_less_equal_Vector4      GDExtensionPtrOperatorEvaluator
	operator_greater_Vector4         GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Vector4   GDExtensionPtrOperatorEvaluator
	operator_add_Vector4             GDExtensionPtrOperatorEvaluator
	operator_subtract_Vector4        GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector4        GDExtensionPtrOperatorEvaluator
	operator_divide_Vector4          GDExtensionPtrOperatorEvaluator
	operator_multiply_Projection     GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary           GDExtensionPtrOperatorEvaluator
	operator_in_Array                GDExtensionPtrOperatorEvaluator
	operator_in_PackedVector4Array   GDExtensionPtrOperatorEvaluator
}

var globalVector4MethodBindings vector4MethodBindings

func vector4InitConstructorBindings() {
	log.Debug("vector4InitConstructorBindings called")

	log.Debug("globalVector4MethodBindings.constructor_0")
	globalVector4MethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4, 0)
	log.Debug("globalVector4MethodBindings.constructor_1")
	globalVector4MethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4, 1)
	log.Debug("globalVector4MethodBindings.constructor_2")
	globalVector4MethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4, 2)
	log.Debug("globalVector4MethodBindings.constructor_3")
	globalVector4MethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4, 3)
}

func vector4InitMethodBindings() {
	log.Debug("vector4InitMethodBindings called")

	missingMethods := make([]string, 0, 32)

	methodName0 := NewStringNameWithLatin1Chars("min_axis_index")
	defer methodName0.Destroy()
	log.Debug("globalVector4MethodBindings.method_min_axis_index")
	globalVector4MethodBindings.method_min_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector4MethodBindings.method_min_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_min_axis_index")
	}
	methodName1 := NewStringNameWithLatin1Chars("max_axis_index")
	defer methodName1.Destroy()
	log.Debug("globalVector4MethodBindings.method_max_axis_index")
	globalVector4MethodBindings.method_max_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector4MethodBindings.method_max_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_max_axis_index")
	}
	methodName2 := NewStringNameWithLatin1Chars("length")
	defer methodName2.Destroy()
	log.Debug("globalVector4MethodBindings.method_length")
	globalVector4MethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName2.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector4MethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_length")
	}
	methodName3 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName3.Destroy()
	log.Debug("globalVector4MethodBindings.method_length_squared")
	globalVector4MethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName3.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector4MethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_length_squared")
	}
	methodName4 := NewStringNameWithLatin1Chars("abs")
	defer methodName4.Destroy()
	log.Debug("globalVector4MethodBindings.method_abs")
	globalVector4MethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName4.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_abs")
	}
	methodName5 := NewStringNameWithLatin1Chars("sign")
	defer methodName5.Destroy()
	log.Debug("globalVector4MethodBindings.method_sign")
	globalVector4MethodBindings.method_sign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName5.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_sign == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_sign")
	}
	methodName6 := NewStringNameWithLatin1Chars("floor")
	defer methodName6.Destroy()
	log.Debug("globalVector4MethodBindings.method_floor")
	globalVector4MethodBindings.method_floor = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName6.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_floor == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_floor")
	}
	methodName7 := NewStringNameWithLatin1Chars("ceil")
	defer methodName7.Destroy()
	log.Debug("globalVector4MethodBindings.method_ceil")
	globalVector4MethodBindings.method_ceil = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName7.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_ceil == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_ceil")
	}
	methodName8 := NewStringNameWithLatin1Chars("round")
	defer methodName8.Destroy()
	log.Debug("globalVector4MethodBindings.method_round")
	globalVector4MethodBindings.method_round = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName8.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_round == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_round")
	}
	methodName9 := NewStringNameWithLatin1Chars("lerp")
	defer methodName9.Destroy()
	log.Debug("globalVector4MethodBindings.method_lerp")
	globalVector4MethodBindings.method_lerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName9.AsGDExtensionConstStringNamePtr(), 2329757942)
	if globalVector4MethodBindings.method_lerp == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_lerp")
	}
	methodName10 := NewStringNameWithLatin1Chars("cubic_interpolate")
	defer methodName10.Destroy()
	log.Debug("globalVector4MethodBindings.method_cubic_interpolate")
	globalVector4MethodBindings.method_cubic_interpolate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName10.AsGDExtensionConstStringNamePtr(), 726768410)
	if globalVector4MethodBindings.method_cubic_interpolate == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_cubic_interpolate")
	}
	methodName11 := NewStringNameWithLatin1Chars("cubic_interpolate_in_time")
	defer methodName11.Destroy()
	log.Debug("globalVector4MethodBindings.method_cubic_interpolate_in_time")
	globalVector4MethodBindings.method_cubic_interpolate_in_time = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName11.AsGDExtensionConstStringNamePtr(), 681631873)
	if globalVector4MethodBindings.method_cubic_interpolate_in_time == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_cubic_interpolate_in_time")
	}
	methodName12 := NewStringNameWithLatin1Chars("posmod")
	defer methodName12.Destroy()
	log.Debug("globalVector4MethodBindings.method_posmod")
	globalVector4MethodBindings.method_posmod = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName12.AsGDExtensionConstStringNamePtr(), 3129671720)
	if globalVector4MethodBindings.method_posmod == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_posmod")
	}
	methodName13 := NewStringNameWithLatin1Chars("posmodv")
	defer methodName13.Destroy()
	log.Debug("globalVector4MethodBindings.method_posmodv")
	globalVector4MethodBindings.method_posmodv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName13.AsGDExtensionConstStringNamePtr(), 2031281584)
	if globalVector4MethodBindings.method_posmodv == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_posmodv")
	}
	methodName14 := NewStringNameWithLatin1Chars("snapped")
	defer methodName14.Destroy()
	log.Debug("globalVector4MethodBindings.method_snapped")
	globalVector4MethodBindings.method_snapped = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName14.AsGDExtensionConstStringNamePtr(), 2031281584)
	if globalVector4MethodBindings.method_snapped == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_snapped")
	}
	methodName15 := NewStringNameWithLatin1Chars("snappedf")
	defer methodName15.Destroy()
	log.Debug("globalVector4MethodBindings.method_snappedf")
	globalVector4MethodBindings.method_snappedf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName15.AsGDExtensionConstStringNamePtr(), 3129671720)
	if globalVector4MethodBindings.method_snappedf == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_snappedf")
	}
	methodName16 := NewStringNameWithLatin1Chars("clamp")
	defer methodName16.Destroy()
	log.Debug("globalVector4MethodBindings.method_clamp")
	globalVector4MethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName16.AsGDExtensionConstStringNamePtr(), 823915692)
	if globalVector4MethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_clamp")
	}
	methodName17 := NewStringNameWithLatin1Chars("clampf")
	defer methodName17.Destroy()
	log.Debug("globalVector4MethodBindings.method_clampf")
	globalVector4MethodBindings.method_clampf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName17.AsGDExtensionConstStringNamePtr(), 4072091586)
	if globalVector4MethodBindings.method_clampf == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_clampf")
	}
	methodName18 := NewStringNameWithLatin1Chars("normalized")
	defer methodName18.Destroy()
	log.Debug("globalVector4MethodBindings.method_normalized")
	globalVector4MethodBindings.method_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName18.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_normalized == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_normalized")
	}
	methodName19 := NewStringNameWithLatin1Chars("is_normalized")
	defer methodName19.Destroy()
	log.Debug("globalVector4MethodBindings.method_is_normalized")
	globalVector4MethodBindings.method_is_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName19.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector4MethodBindings.method_is_normalized == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_is_normalized")
	}
	methodName20 := NewStringNameWithLatin1Chars("direction_to")
	defer methodName20.Destroy()
	log.Debug("globalVector4MethodBindings.method_direction_to")
	globalVector4MethodBindings.method_direction_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName20.AsGDExtensionConstStringNamePtr(), 2031281584)
	if globalVector4MethodBindings.method_direction_to == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_direction_to")
	}
	methodName21 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName21.Destroy()
	log.Debug("globalVector4MethodBindings.method_distance_to")
	globalVector4MethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName21.AsGDExtensionConstStringNamePtr(), 3770801042)
	if globalVector4MethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_distance_to")
	}
	methodName22 := NewStringNameWithLatin1Chars("distance_squared_to")
	defer methodName22.Destroy()
	log.Debug("globalVector4MethodBindings.method_distance_squared_to")
	globalVector4MethodBindings.method_distance_squared_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName22.AsGDExtensionConstStringNamePtr(), 3770801042)
	if globalVector4MethodBindings.method_distance_squared_to == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_distance_squared_to")
	}
	methodName23 := NewStringNameWithLatin1Chars("dot")
	defer methodName23.Destroy()
	log.Debug("globalVector4MethodBindings.method_dot")
	globalVector4MethodBindings.method_dot = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName23.AsGDExtensionConstStringNamePtr(), 3770801042)
	if globalVector4MethodBindings.method_dot == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_dot")
	}
	methodName24 := NewStringNameWithLatin1Chars("inverse")
	defer methodName24.Destroy()
	log.Debug("globalVector4MethodBindings.method_inverse")
	globalVector4MethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName24.AsGDExtensionConstStringNamePtr(), 80860099)
	if globalVector4MethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_inverse")
	}
	methodName25 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName25.Destroy()
	log.Debug("globalVector4MethodBindings.method_is_equal_approx")
	globalVector4MethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName25.AsGDExtensionConstStringNamePtr(), 88913544)
	if globalVector4MethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_is_equal_approx")
	}
	methodName26 := NewStringNameWithLatin1Chars("is_zero_approx")
	defer methodName26.Destroy()
	log.Debug("globalVector4MethodBindings.method_is_zero_approx")
	globalVector4MethodBindings.method_is_zero_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName26.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector4MethodBindings.method_is_zero_approx == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_is_zero_approx")
	}
	methodName27 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName27.Destroy()
	log.Debug("globalVector4MethodBindings.method_is_finite")
	globalVector4MethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName27.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalVector4MethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_is_finite")
	}
	methodName28 := NewStringNameWithLatin1Chars("min")
	defer methodName28.Destroy()
	log.Debug("globalVector4MethodBindings.method_min")
	globalVector4MethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName28.AsGDExtensionConstStringNamePtr(), 2031281584)
	if globalVector4MethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_min")
	}
	methodName29 := NewStringNameWithLatin1Chars("minf")
	defer methodName29.Destroy()
	log.Debug("globalVector4MethodBindings.method_minf")
	globalVector4MethodBindings.method_minf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName29.AsGDExtensionConstStringNamePtr(), 3129671720)
	if globalVector4MethodBindings.method_minf == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_minf")
	}
	methodName30 := NewStringNameWithLatin1Chars("max")
	defer methodName30.Destroy()
	log.Debug("globalVector4MethodBindings.method_max")
	globalVector4MethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName30.AsGDExtensionConstStringNamePtr(), 2031281584)
	if globalVector4MethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_max")
	}
	methodName31 := NewStringNameWithLatin1Chars("maxf")
	defer methodName31.Destroy()
	log.Debug("globalVector4MethodBindings.method_maxf")
	globalVector4MethodBindings.method_maxf = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4, methodName31.AsGDExtensionConstStringNamePtr(), 3129671720)
	if globalVector4MethodBindings.method_maxf == nil {
		missingMethods = append(missingMethods, "globalVector4MethodBindings.method_maxf")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalVector4MethodBindings.member_x_setter")
	globalVector4MethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4MethodBindings.member_x_getter")
	globalVector4MethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalVector4MethodBindings.member_y_setter")
	globalVector4MethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4MethodBindings.member_y_getter")
	globalVector4MethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalVector4MethodBindings.member_z_setter")
	globalVector4MethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4MethodBindings.member_z_getter")
	globalVector4MethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName2.AsGDExtensionConstStringNamePtr())
	memberName3 := NewStringNameWithLatin1Chars("w")
	defer memberName3.Destroy()
	log.Debug("globalVector4MethodBindings.member_w_setter")
	globalVector4MethodBindings.member_w_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4MethodBindings.member_w_getter")
	globalVector4MethodBindings.member_w_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4MethodBindings.indexed_setter")
	globalVector4MethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.indexed_getter")
	globalVector4MethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: equal Variant")
	globalVector4MethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4MethodBindings.operator: not_equal Variant")
	globalVector4MethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4MethodBindings.operator: negate ")
	globalVector4MethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4MethodBindings.operator: positive ")
	globalVector4MethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4MethodBindings.operator: not ")
	globalVector4MethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4MethodBindings.operator: multiply int")
	globalVector4MethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector4MethodBindings.operator: divide int")
	globalVector4MethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector4MethodBindings.operator: multiply float")
	globalVector4MethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector4MethodBindings.operator: divide float")
	globalVector4MethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector4MethodBindings.operator: equal Vector4")
	globalVector4MethodBindings.operator_equal_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: not_equal Vector4")
	globalVector4MethodBindings.operator_not_equal_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: less Vector4")
	globalVector4MethodBindings.operator_less_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: less_equal Vector4")
	globalVector4MethodBindings.operator_less_equal_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: greater Vector4")
	globalVector4MethodBindings.operator_greater_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: greater_equal Vector4")
	globalVector4MethodBindings.operator_greater_equal_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: add Vector4")
	globalVector4MethodBindings.operator_add_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: subtract Vector4")
	globalVector4MethodBindings.operator_subtract_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: multiply Vector4")
	globalVector4MethodBindings.operator_multiply_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: divide Vector4")
	globalVector4MethodBindings.operator_divide_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalVector4MethodBindings.operator: multiply Projection")
	globalVector4MethodBindings.operator_multiply_Projection = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalVector4MethodBindings.operator: in Dictionary")
	globalVector4MethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalVector4MethodBindings.operator: in Array")
	globalVector4MethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalVector4MethodBindings.operator: in PackedVector4Array")
	globalVector4MethodBindings.operator_in_PackedVector4Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR4, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("vector4InitBindings end")
}

type vector4iMethodBindings struct {
	constructor_0                   GDExtensionPtrConstructor
	constructor_1                   GDExtensionPtrConstructor
	constructor_2                   GDExtensionPtrConstructor
	constructor_3                   GDExtensionPtrConstructor
	method_min_axis_index           GDExtensionPtrBuiltInMethod
	method_max_axis_index           GDExtensionPtrBuiltInMethod
	method_length                   GDExtensionPtrBuiltInMethod
	method_length_squared           GDExtensionPtrBuiltInMethod
	method_sign                     GDExtensionPtrBuiltInMethod
	method_abs                      GDExtensionPtrBuiltInMethod
	method_clamp                    GDExtensionPtrBuiltInMethod
	method_clampi                   GDExtensionPtrBuiltInMethod
	method_snapped                  GDExtensionPtrBuiltInMethod
	method_snappedi                 GDExtensionPtrBuiltInMethod
	method_min                      GDExtensionPtrBuiltInMethod
	method_mini                     GDExtensionPtrBuiltInMethod
	method_max                      GDExtensionPtrBuiltInMethod
	method_maxi                     GDExtensionPtrBuiltInMethod
	method_distance_to              GDExtensionPtrBuiltInMethod
	method_distance_squared_to      GDExtensionPtrBuiltInMethod
	member_x_setter                 GDExtensionPtrSetter
	member_x_getter                 GDExtensionPtrGetter
	member_y_setter                 GDExtensionPtrSetter
	member_y_getter                 GDExtensionPtrGetter
	member_z_setter                 GDExtensionPtrSetter
	member_z_getter                 GDExtensionPtrGetter
	member_w_setter                 GDExtensionPtrSetter
	member_w_getter                 GDExtensionPtrGetter
	indexed_setter                  GDExtensionPtrIndexedSetter
	indexed_getter                  GDExtensionPtrIndexedGetter
	operator_equal_Variant          GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant      GDExtensionPtrOperatorEvaluator
	operator_negate                 GDExtensionPtrOperatorEvaluator
	operator_positive               GDExtensionPtrOperatorEvaluator
	operator_not                    GDExtensionPtrOperatorEvaluator
	operator_multiply_int           GDExtensionPtrOperatorEvaluator
	operator_divide_int             GDExtensionPtrOperatorEvaluator
	operator_module_int             GDExtensionPtrOperatorEvaluator
	operator_multiply_float         GDExtensionPtrOperatorEvaluator
	operator_divide_float           GDExtensionPtrOperatorEvaluator
	operator_equal_Vector4i         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Vector4i     GDExtensionPtrOperatorEvaluator
	operator_less_Vector4i          GDExtensionPtrOperatorEvaluator
	operator_less_equal_Vector4i    GDExtensionPtrOperatorEvaluator
	operator_greater_Vector4i       GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Vector4i GDExtensionPtrOperatorEvaluator
	operator_add_Vector4i           GDExtensionPtrOperatorEvaluator
	operator_subtract_Vector4i      GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector4i      GDExtensionPtrOperatorEvaluator
	operator_divide_Vector4i        GDExtensionPtrOperatorEvaluator
	operator_module_Vector4i        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary          GDExtensionPtrOperatorEvaluator
	operator_in_Array               GDExtensionPtrOperatorEvaluator
}

var globalVector4iMethodBindings vector4iMethodBindings

func vector4iInitConstructorBindings() {
	log.Debug("vector4iInitConstructorBindings called")

	log.Debug("globalVector4iMethodBindings.constructor_0")
	globalVector4iMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4I, 0)
	log.Debug("globalVector4iMethodBindings.constructor_1")
	globalVector4iMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4I, 1)
	log.Debug("globalVector4iMethodBindings.constructor_2")
	globalVector4iMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4I, 2)
	log.Debug("globalVector4iMethodBindings.constructor_3")
	globalVector4iMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_VECTOR4I, 3)
}

func vector4iInitMethodBindings() {
	log.Debug("vector4iInitMethodBindings called")

	missingMethods := make([]string, 0, 16)

	methodName0 := NewStringNameWithLatin1Chars("min_axis_index")
	defer methodName0.Destroy()
	log.Debug("globalVector4iMethodBindings.method_min_axis_index")
	globalVector4iMethodBindings.method_min_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector4iMethodBindings.method_min_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_min_axis_index")
	}
	methodName1 := NewStringNameWithLatin1Chars("max_axis_index")
	defer methodName1.Destroy()
	log.Debug("globalVector4iMethodBindings.method_max_axis_index")
	globalVector4iMethodBindings.method_max_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector4iMethodBindings.method_max_axis_index == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_max_axis_index")
	}
	methodName2 := NewStringNameWithLatin1Chars("length")
	defer methodName2.Destroy()
	log.Debug("globalVector4iMethodBindings.method_length")
	globalVector4iMethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName2.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalVector4iMethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_length")
	}
	methodName3 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName3.Destroy()
	log.Debug("globalVector4iMethodBindings.method_length_squared")
	globalVector4iMethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName3.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalVector4iMethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_length_squared")
	}
	methodName4 := NewStringNameWithLatin1Chars("sign")
	defer methodName4.Destroy()
	log.Debug("globalVector4iMethodBindings.method_sign")
	globalVector4iMethodBindings.method_sign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName4.AsGDExtensionConstStringNamePtr(), 4134919947)
	if globalVector4iMethodBindings.method_sign == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_sign")
	}
	methodName5 := NewStringNameWithLatin1Chars("abs")
	defer methodName5.Destroy()
	log.Debug("globalVector4iMethodBindings.method_abs")
	globalVector4iMethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName5.AsGDExtensionConstStringNamePtr(), 4134919947)
	if globalVector4iMethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_abs")
	}
	methodName6 := NewStringNameWithLatin1Chars("clamp")
	defer methodName6.Destroy()
	log.Debug("globalVector4iMethodBindings.method_clamp")
	globalVector4iMethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName6.AsGDExtensionConstStringNamePtr(), 3046490913)
	if globalVector4iMethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_clamp")
	}
	methodName7 := NewStringNameWithLatin1Chars("clampi")
	defer methodName7.Destroy()
	log.Debug("globalVector4iMethodBindings.method_clampi")
	globalVector4iMethodBindings.method_clampi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName7.AsGDExtensionConstStringNamePtr(), 2994578256)
	if globalVector4iMethodBindings.method_clampi == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_clampi")
	}
	methodName8 := NewStringNameWithLatin1Chars("snapped")
	defer methodName8.Destroy()
	log.Debug("globalVector4iMethodBindings.method_snapped")
	globalVector4iMethodBindings.method_snapped = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName8.AsGDExtensionConstStringNamePtr(), 1181693102)
	if globalVector4iMethodBindings.method_snapped == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_snapped")
	}
	methodName9 := NewStringNameWithLatin1Chars("snappedi")
	defer methodName9.Destroy()
	log.Debug("globalVector4iMethodBindings.method_snappedi")
	globalVector4iMethodBindings.method_snappedi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName9.AsGDExtensionConstStringNamePtr(), 1476494415)
	if globalVector4iMethodBindings.method_snappedi == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_snappedi")
	}
	methodName10 := NewStringNameWithLatin1Chars("min")
	defer methodName10.Destroy()
	log.Debug("globalVector4iMethodBindings.method_min")
	globalVector4iMethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName10.AsGDExtensionConstStringNamePtr(), 1181693102)
	if globalVector4iMethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_min")
	}
	methodName11 := NewStringNameWithLatin1Chars("mini")
	defer methodName11.Destroy()
	log.Debug("globalVector4iMethodBindings.method_mini")
	globalVector4iMethodBindings.method_mini = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName11.AsGDExtensionConstStringNamePtr(), 1476494415)
	if globalVector4iMethodBindings.method_mini == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_mini")
	}
	methodName12 := NewStringNameWithLatin1Chars("max")
	defer methodName12.Destroy()
	log.Debug("globalVector4iMethodBindings.method_max")
	globalVector4iMethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName12.AsGDExtensionConstStringNamePtr(), 1181693102)
	if globalVector4iMethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_max")
	}
	methodName13 := NewStringNameWithLatin1Chars("maxi")
	defer methodName13.Destroy()
	log.Debug("globalVector4iMethodBindings.method_maxi")
	globalVector4iMethodBindings.method_maxi = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName13.AsGDExtensionConstStringNamePtr(), 1476494415)
	if globalVector4iMethodBindings.method_maxi == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_maxi")
	}
	methodName14 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName14.Destroy()
	log.Debug("globalVector4iMethodBindings.method_distance_to")
	globalVector4iMethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName14.AsGDExtensionConstStringNamePtr(), 3446086573)
	if globalVector4iMethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_distance_to")
	}
	methodName15 := NewStringNameWithLatin1Chars("distance_squared_to")
	defer methodName15.Destroy()
	log.Debug("globalVector4iMethodBindings.method_distance_squared_to")
	globalVector4iMethodBindings.method_distance_squared_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_VECTOR4I, methodName15.AsGDExtensionConstStringNamePtr(), 346708794)
	if globalVector4iMethodBindings.method_distance_squared_to == nil {
		missingMethods = append(missingMethods, "globalVector4iMethodBindings.method_distance_squared_to")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalVector4iMethodBindings.member_x_setter")
	globalVector4iMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4iMethodBindings.member_x_getter")
	globalVector4iMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalVector4iMethodBindings.member_y_setter")
	globalVector4iMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4iMethodBindings.member_y_getter")
	globalVector4iMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalVector4iMethodBindings.member_z_setter")
	globalVector4iMethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4iMethodBindings.member_z_getter")
	globalVector4iMethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName2.AsGDExtensionConstStringNamePtr())
	memberName3 := NewStringNameWithLatin1Chars("w")
	defer memberName3.Destroy()
	log.Debug("globalVector4iMethodBindings.member_w_setter")
	globalVector4iMethodBindings.member_w_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4iMethodBindings.member_w_getter")
	globalVector4iMethodBindings.member_w_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalVector4iMethodBindings.indexed_setter")
	globalVector4iMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.indexed_getter")
	globalVector4iMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: equal Variant")
	globalVector4iMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4iMethodBindings.operator: not_equal Variant")
	globalVector4iMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4iMethodBindings.operator: negate ")
	globalVector4iMethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4iMethodBindings.operator: positive ")
	globalVector4iMethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4iMethodBindings.operator: not ")
	globalVector4iMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalVector4iMethodBindings.operator: multiply int")
	globalVector4iMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector4iMethodBindings.operator: divide int")
	globalVector4iMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector4iMethodBindings.operator: module int")
	globalVector4iMethodBindings.operator_module_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalVector4iMethodBindings.operator: multiply float")
	globalVector4iMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector4iMethodBindings.operator: divide float")
	globalVector4iMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalVector4iMethodBindings.operator: equal Vector4i")
	globalVector4iMethodBindings.operator_equal_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: not_equal Vector4i")
	globalVector4iMethodBindings.operator_not_equal_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: less Vector4i")
	globalVector4iMethodBindings.operator_less_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: less_equal Vector4i")
	globalVector4iMethodBindings.operator_less_equal_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: greater Vector4i")
	globalVector4iMethodBindings.operator_greater_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: greater_equal Vector4i")
	globalVector4iMethodBindings.operator_greater_equal_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: add Vector4i")
	globalVector4iMethodBindings.operator_add_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: subtract Vector4i")
	globalVector4iMethodBindings.operator_subtract_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: multiply Vector4i")
	globalVector4iMethodBindings.operator_multiply_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: divide Vector4i")
	globalVector4iMethodBindings.operator_divide_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: module Vector4i")
	globalVector4iMethodBindings.operator_module_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalVector4iMethodBindings.operator: in Dictionary")
	globalVector4iMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalVector4iMethodBindings.operator: in Array")
	globalVector4iMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_VECTOR4I, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("vector4iInitBindings end")
}

type planeMethodBindings struct {
	constructor_0                 GDExtensionPtrConstructor
	constructor_1                 GDExtensionPtrConstructor
	constructor_2                 GDExtensionPtrConstructor
	constructor_3                 GDExtensionPtrConstructor
	constructor_4                 GDExtensionPtrConstructor
	constructor_5                 GDExtensionPtrConstructor
	constructor_6                 GDExtensionPtrConstructor
	method_normalized             GDExtensionPtrBuiltInMethod
	method_get_center             GDExtensionPtrBuiltInMethod
	method_is_equal_approx        GDExtensionPtrBuiltInMethod
	method_is_finite              GDExtensionPtrBuiltInMethod
	method_is_point_over          GDExtensionPtrBuiltInMethod
	method_distance_to            GDExtensionPtrBuiltInMethod
	method_has_point              GDExtensionPtrBuiltInMethod
	method_project                GDExtensionPtrBuiltInMethod
	method_intersect_3            GDExtensionPtrBuiltInMethod
	method_intersects_ray         GDExtensionPtrBuiltInMethod
	method_intersects_segment     GDExtensionPtrBuiltInMethod
	member_x_setter               GDExtensionPtrSetter
	member_x_getter               GDExtensionPtrGetter
	member_y_setter               GDExtensionPtrSetter
	member_y_getter               GDExtensionPtrGetter
	member_z_setter               GDExtensionPtrSetter
	member_z_getter               GDExtensionPtrGetter
	member_d_setter               GDExtensionPtrSetter
	member_d_getter               GDExtensionPtrGetter
	member_normal_setter          GDExtensionPtrSetter
	member_normal_getter          GDExtensionPtrGetter
	operator_equal_Variant        GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant    GDExtensionPtrOperatorEvaluator
	operator_negate               GDExtensionPtrOperatorEvaluator
	operator_positive             GDExtensionPtrOperatorEvaluator
	operator_not                  GDExtensionPtrOperatorEvaluator
	operator_equal_Plane          GDExtensionPtrOperatorEvaluator
	operator_not_equal_Plane      GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform3D GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary        GDExtensionPtrOperatorEvaluator
	operator_in_Array             GDExtensionPtrOperatorEvaluator
}

var globalPlaneMethodBindings planeMethodBindings

func planeInitConstructorBindings() {
	log.Debug("planeInitConstructorBindings called")

	log.Debug("globalPlaneMethodBindings.constructor_0")
	globalPlaneMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 0)
	log.Debug("globalPlaneMethodBindings.constructor_1")
	globalPlaneMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 1)
	log.Debug("globalPlaneMethodBindings.constructor_2")
	globalPlaneMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 2)
	log.Debug("globalPlaneMethodBindings.constructor_3")
	globalPlaneMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 3)
	log.Debug("globalPlaneMethodBindings.constructor_4")
	globalPlaneMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 4)
	log.Debug("globalPlaneMethodBindings.constructor_5")
	globalPlaneMethodBindings.constructor_5 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 5)
	log.Debug("globalPlaneMethodBindings.constructor_6")
	globalPlaneMethodBindings.constructor_6 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PLANE, 6)
}

func planeInitMethodBindings() {
	log.Debug("planeInitMethodBindings called")

	missingMethods := make([]string, 0, 11)

	methodName0 := NewStringNameWithLatin1Chars("normalized")
	defer methodName0.Destroy()
	log.Debug("globalPlaneMethodBindings.method_normalized")
	globalPlaneMethodBindings.method_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName0.AsGDExtensionConstStringNamePtr(), 1051796340)
	if globalPlaneMethodBindings.method_normalized == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_normalized")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_center")
	defer methodName1.Destroy()
	log.Debug("globalPlaneMethodBindings.method_get_center")
	globalPlaneMethodBindings.method_get_center = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName1.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalPlaneMethodBindings.method_get_center == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_get_center")
	}
	methodName2 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName2.Destroy()
	log.Debug("globalPlaneMethodBindings.method_is_equal_approx")
	globalPlaneMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName2.AsGDExtensionConstStringNamePtr(), 1150170233)
	if globalPlaneMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_is_equal_approx")
	}
	methodName3 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName3.Destroy()
	log.Debug("globalPlaneMethodBindings.method_is_finite")
	globalPlaneMethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName3.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPlaneMethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_is_finite")
	}
	methodName4 := NewStringNameWithLatin1Chars("is_point_over")
	defer methodName4.Destroy()
	log.Debug("globalPlaneMethodBindings.method_is_point_over")
	globalPlaneMethodBindings.method_is_point_over = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName4.AsGDExtensionConstStringNamePtr(), 1749054343)
	if globalPlaneMethodBindings.method_is_point_over == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_is_point_over")
	}
	methodName5 := NewStringNameWithLatin1Chars("distance_to")
	defer methodName5.Destroy()
	log.Debug("globalPlaneMethodBindings.method_distance_to")
	globalPlaneMethodBindings.method_distance_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName5.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalPlaneMethodBindings.method_distance_to == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_distance_to")
	}
	methodName6 := NewStringNameWithLatin1Chars("has_point")
	defer methodName6.Destroy()
	log.Debug("globalPlaneMethodBindings.method_has_point")
	globalPlaneMethodBindings.method_has_point = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName6.AsGDExtensionConstStringNamePtr(), 1258189072)
	if globalPlaneMethodBindings.method_has_point == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_has_point")
	}
	methodName7 := NewStringNameWithLatin1Chars("project")
	defer methodName7.Destroy()
	log.Debug("globalPlaneMethodBindings.method_project")
	globalPlaneMethodBindings.method_project = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName7.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalPlaneMethodBindings.method_project == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_project")
	}
	methodName8 := NewStringNameWithLatin1Chars("intersect_3")
	defer methodName8.Destroy()
	log.Debug("globalPlaneMethodBindings.method_intersect_3")
	globalPlaneMethodBindings.method_intersect_3 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName8.AsGDExtensionConstStringNamePtr(), 2012052692)
	if globalPlaneMethodBindings.method_intersect_3 == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_intersect_3")
	}
	methodName9 := NewStringNameWithLatin1Chars("intersects_ray")
	defer methodName9.Destroy()
	log.Debug("globalPlaneMethodBindings.method_intersects_ray")
	globalPlaneMethodBindings.method_intersects_ray = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName9.AsGDExtensionConstStringNamePtr(), 2048133369)
	if globalPlaneMethodBindings.method_intersects_ray == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_intersects_ray")
	}
	methodName10 := NewStringNameWithLatin1Chars("intersects_segment")
	defer methodName10.Destroy()
	log.Debug("globalPlaneMethodBindings.method_intersects_segment")
	globalPlaneMethodBindings.method_intersects_segment = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PLANE, methodName10.AsGDExtensionConstStringNamePtr(), 2048133369)
	if globalPlaneMethodBindings.method_intersects_segment == nil {
		missingMethods = append(missingMethods, "globalPlaneMethodBindings.method_intersects_segment")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalPlaneMethodBindings.member_x_setter")
	globalPlaneMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalPlaneMethodBindings.member_x_getter")
	globalPlaneMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalPlaneMethodBindings.member_y_setter")
	globalPlaneMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalPlaneMethodBindings.member_y_getter")
	globalPlaneMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalPlaneMethodBindings.member_z_setter")
	globalPlaneMethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalPlaneMethodBindings.member_z_getter")
	globalPlaneMethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName2.AsGDExtensionConstStringNamePtr())
	memberName3 := NewStringNameWithLatin1Chars("d")
	defer memberName3.Destroy()
	log.Debug("globalPlaneMethodBindings.member_d_setter")
	globalPlaneMethodBindings.member_d_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalPlaneMethodBindings.member_d_getter")
	globalPlaneMethodBindings.member_d_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName3.AsGDExtensionConstStringNamePtr())
	memberName4 := NewStringNameWithLatin1Chars("normal")
	defer memberName4.Destroy()
	log.Debug("globalPlaneMethodBindings.member_normal_setter")
	globalPlaneMethodBindings.member_normal_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName4.AsGDExtensionConstStringNamePtr())
	log.Debug("globalPlaneMethodBindings.member_normal_getter")
	globalPlaneMethodBindings.member_normal_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PLANE, memberName4.AsGDExtensionConstStringNamePtr())
	log.Debug("globalPlaneMethodBindings.operator: equal Variant")
	globalPlaneMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPlaneMethodBindings.operator: not_equal Variant")
	globalPlaneMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPlaneMethodBindings.operator: negate ")
	globalPlaneMethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPlaneMethodBindings.operator: positive ")
	globalPlaneMethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPlaneMethodBindings.operator: not ")
	globalPlaneMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPlaneMethodBindings.operator: equal Plane")
	globalPlaneMethodBindings.operator_equal_Plane = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_PLANE)
	log.Debug("globalPlaneMethodBindings.operator: not_equal Plane")
	globalPlaneMethodBindings.operator_not_equal_Plane = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_PLANE)
	log.Debug("globalPlaneMethodBindings.operator: multiply Transform3D")
	globalPlaneMethodBindings.operator_multiply_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalPlaneMethodBindings.operator: in Dictionary")
	globalPlaneMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPlaneMethodBindings.operator: in Array")
	globalPlaneMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PLANE, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("planeInitBindings end")
}

type quaternionMethodBindings struct {
	constructor_0                              GDExtensionPtrConstructor
	constructor_1                              GDExtensionPtrConstructor
	constructor_2                              GDExtensionPtrConstructor
	constructor_3                              GDExtensionPtrConstructor
	constructor_4                              GDExtensionPtrConstructor
	constructor_5                              GDExtensionPtrConstructor
	method_length                              GDExtensionPtrBuiltInMethod
	method_length_squared                      GDExtensionPtrBuiltInMethod
	method_normalized                          GDExtensionPtrBuiltInMethod
	method_is_normalized                       GDExtensionPtrBuiltInMethod
	method_is_equal_approx                     GDExtensionPtrBuiltInMethod
	method_is_finite                           GDExtensionPtrBuiltInMethod
	method_inverse                             GDExtensionPtrBuiltInMethod
	method_log                                 GDExtensionPtrBuiltInMethod
	method_exp                                 GDExtensionPtrBuiltInMethod
	method_angle_to                            GDExtensionPtrBuiltInMethod
	method_dot                                 GDExtensionPtrBuiltInMethod
	method_slerp                               GDExtensionPtrBuiltInMethod
	method_slerpni                             GDExtensionPtrBuiltInMethod
	method_spherical_cubic_interpolate         GDExtensionPtrBuiltInMethod
	method_spherical_cubic_interpolate_in_time GDExtensionPtrBuiltInMethod
	method_get_euler                           GDExtensionPtrBuiltInMethod
	method_from_euler                          GDExtensionPtrBuiltInMethod
	method_get_axis                            GDExtensionPtrBuiltInMethod
	method_get_angle                           GDExtensionPtrBuiltInMethod
	member_x_setter                            GDExtensionPtrSetter
	member_x_getter                            GDExtensionPtrGetter
	member_y_setter                            GDExtensionPtrSetter
	member_y_getter                            GDExtensionPtrGetter
	member_z_setter                            GDExtensionPtrSetter
	member_z_getter                            GDExtensionPtrGetter
	member_w_setter                            GDExtensionPtrSetter
	member_w_getter                            GDExtensionPtrGetter
	indexed_setter                             GDExtensionPtrIndexedSetter
	indexed_getter                             GDExtensionPtrIndexedGetter
	operator_equal_Variant                     GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant                 GDExtensionPtrOperatorEvaluator
	operator_negate                            GDExtensionPtrOperatorEvaluator
	operator_positive                          GDExtensionPtrOperatorEvaluator
	operator_not                               GDExtensionPtrOperatorEvaluator
	operator_multiply_int                      GDExtensionPtrOperatorEvaluator
	operator_divide_int                        GDExtensionPtrOperatorEvaluator
	operator_multiply_float                    GDExtensionPtrOperatorEvaluator
	operator_divide_float                      GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector3                  GDExtensionPtrOperatorEvaluator
	operator_equal_Quaternion                  GDExtensionPtrOperatorEvaluator
	operator_not_equal_Quaternion              GDExtensionPtrOperatorEvaluator
	operator_add_Quaternion                    GDExtensionPtrOperatorEvaluator
	operator_subtract_Quaternion               GDExtensionPtrOperatorEvaluator
	operator_multiply_Quaternion               GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary                     GDExtensionPtrOperatorEvaluator
	operator_in_Array                          GDExtensionPtrOperatorEvaluator
}

var globalQuaternionMethodBindings quaternionMethodBindings

func quaternionInitConstructorBindings() {
	log.Debug("quaternionInitConstructorBindings called")

	log.Debug("globalQuaternionMethodBindings.constructor_0")
	globalQuaternionMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_QUATERNION, 0)
	log.Debug("globalQuaternionMethodBindings.constructor_1")
	globalQuaternionMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_QUATERNION, 1)
	log.Debug("globalQuaternionMethodBindings.constructor_2")
	globalQuaternionMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_QUATERNION, 2)
	log.Debug("globalQuaternionMethodBindings.constructor_3")
	globalQuaternionMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_QUATERNION, 3)
	log.Debug("globalQuaternionMethodBindings.constructor_4")
	globalQuaternionMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_QUATERNION, 4)
	log.Debug("globalQuaternionMethodBindings.constructor_5")
	globalQuaternionMethodBindings.constructor_5 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_QUATERNION, 5)
}

func quaternionInitMethodBindings() {
	log.Debug("quaternionInitMethodBindings called")

	missingMethods := make([]string, 0, 19)

	methodName0 := NewStringNameWithLatin1Chars("length")
	defer methodName0.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_length")
	globalQuaternionMethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName0.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalQuaternionMethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_length")
	}
	methodName1 := NewStringNameWithLatin1Chars("length_squared")
	defer methodName1.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_length_squared")
	globalQuaternionMethodBindings.method_length_squared = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName1.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalQuaternionMethodBindings.method_length_squared == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_length_squared")
	}
	methodName2 := NewStringNameWithLatin1Chars("normalized")
	defer methodName2.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_normalized")
	globalQuaternionMethodBindings.method_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName2.AsGDExtensionConstStringNamePtr(), 4274879941)
	if globalQuaternionMethodBindings.method_normalized == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_normalized")
	}
	methodName3 := NewStringNameWithLatin1Chars("is_normalized")
	defer methodName3.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_is_normalized")
	globalQuaternionMethodBindings.method_is_normalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName3.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalQuaternionMethodBindings.method_is_normalized == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_is_normalized")
	}
	methodName4 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName4.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_is_equal_approx")
	globalQuaternionMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName4.AsGDExtensionConstStringNamePtr(), 1682156903)
	if globalQuaternionMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_is_equal_approx")
	}
	methodName5 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName5.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_is_finite")
	globalQuaternionMethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName5.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalQuaternionMethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_is_finite")
	}
	methodName6 := NewStringNameWithLatin1Chars("inverse")
	defer methodName6.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_inverse")
	globalQuaternionMethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName6.AsGDExtensionConstStringNamePtr(), 4274879941)
	if globalQuaternionMethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_inverse")
	}
	methodName7 := NewStringNameWithLatin1Chars("log")
	defer methodName7.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_log")
	globalQuaternionMethodBindings.method_log = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName7.AsGDExtensionConstStringNamePtr(), 4274879941)
	if globalQuaternionMethodBindings.method_log == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_log")
	}
	methodName8 := NewStringNameWithLatin1Chars("exp")
	defer methodName8.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_exp")
	globalQuaternionMethodBindings.method_exp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName8.AsGDExtensionConstStringNamePtr(), 4274879941)
	if globalQuaternionMethodBindings.method_exp == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_exp")
	}
	methodName9 := NewStringNameWithLatin1Chars("angle_to")
	defer methodName9.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_angle_to")
	globalQuaternionMethodBindings.method_angle_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName9.AsGDExtensionConstStringNamePtr(), 3244682419)
	if globalQuaternionMethodBindings.method_angle_to == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_angle_to")
	}
	methodName10 := NewStringNameWithLatin1Chars("dot")
	defer methodName10.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_dot")
	globalQuaternionMethodBindings.method_dot = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName10.AsGDExtensionConstStringNamePtr(), 3244682419)
	if globalQuaternionMethodBindings.method_dot == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_dot")
	}
	methodName11 := NewStringNameWithLatin1Chars("slerp")
	defer methodName11.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_slerp")
	globalQuaternionMethodBindings.method_slerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName11.AsGDExtensionConstStringNamePtr(), 1773590316)
	if globalQuaternionMethodBindings.method_slerp == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_slerp")
	}
	methodName12 := NewStringNameWithLatin1Chars("slerpni")
	defer methodName12.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_slerpni")
	globalQuaternionMethodBindings.method_slerpni = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName12.AsGDExtensionConstStringNamePtr(), 1773590316)
	if globalQuaternionMethodBindings.method_slerpni == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_slerpni")
	}
	methodName13 := NewStringNameWithLatin1Chars("spherical_cubic_interpolate")
	defer methodName13.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_spherical_cubic_interpolate")
	globalQuaternionMethodBindings.method_spherical_cubic_interpolate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName13.AsGDExtensionConstStringNamePtr(), 2150967576)
	if globalQuaternionMethodBindings.method_spherical_cubic_interpolate == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_spherical_cubic_interpolate")
	}
	methodName14 := NewStringNameWithLatin1Chars("spherical_cubic_interpolate_in_time")
	defer methodName14.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_spherical_cubic_interpolate_in_time")
	globalQuaternionMethodBindings.method_spherical_cubic_interpolate_in_time = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName14.AsGDExtensionConstStringNamePtr(), 1436023539)
	if globalQuaternionMethodBindings.method_spherical_cubic_interpolate_in_time == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_spherical_cubic_interpolate_in_time")
	}
	methodName15 := NewStringNameWithLatin1Chars("get_euler")
	defer methodName15.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_get_euler")
	globalQuaternionMethodBindings.method_get_euler = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName15.AsGDExtensionConstStringNamePtr(), 1394941017)
	if globalQuaternionMethodBindings.method_get_euler == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_get_euler")
	}
	methodName16 := NewStringNameWithLatin1Chars("from_euler")
	defer methodName16.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_from_euler")
	globalQuaternionMethodBindings.method_from_euler = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName16.AsGDExtensionConstStringNamePtr(), 4053467903)
	if globalQuaternionMethodBindings.method_from_euler == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_from_euler")
	}
	methodName17 := NewStringNameWithLatin1Chars("get_axis")
	defer methodName17.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_get_axis")
	globalQuaternionMethodBindings.method_get_axis = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName17.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalQuaternionMethodBindings.method_get_axis == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_get_axis")
	}
	methodName18 := NewStringNameWithLatin1Chars("get_angle")
	defer methodName18.Destroy()
	log.Debug("globalQuaternionMethodBindings.method_get_angle")
	globalQuaternionMethodBindings.method_get_angle = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_QUATERNION, methodName18.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalQuaternionMethodBindings.method_get_angle == nil {
		missingMethods = append(missingMethods, "globalQuaternionMethodBindings.method_get_angle")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalQuaternionMethodBindings.member_x_setter")
	globalQuaternionMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalQuaternionMethodBindings.member_x_getter")
	globalQuaternionMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalQuaternionMethodBindings.member_y_setter")
	globalQuaternionMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalQuaternionMethodBindings.member_y_getter")
	globalQuaternionMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalQuaternionMethodBindings.member_z_setter")
	globalQuaternionMethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalQuaternionMethodBindings.member_z_getter")
	globalQuaternionMethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName2.AsGDExtensionConstStringNamePtr())
	memberName3 := NewStringNameWithLatin1Chars("w")
	defer memberName3.Destroy()
	log.Debug("globalQuaternionMethodBindings.member_w_setter")
	globalQuaternionMethodBindings.member_w_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalQuaternionMethodBindings.member_w_getter")
	globalQuaternionMethodBindings.member_w_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_QUATERNION, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalQuaternionMethodBindings.indexed_setter")
	globalQuaternionMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.indexed_getter")
	globalQuaternionMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.operator: equal Variant")
	globalQuaternionMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalQuaternionMethodBindings.operator: not_equal Variant")
	globalQuaternionMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalQuaternionMethodBindings.operator: negate ")
	globalQuaternionMethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalQuaternionMethodBindings.operator: positive ")
	globalQuaternionMethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalQuaternionMethodBindings.operator: not ")
	globalQuaternionMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalQuaternionMethodBindings.operator: multiply int")
	globalQuaternionMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalQuaternionMethodBindings.operator: divide int")
	globalQuaternionMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalQuaternionMethodBindings.operator: multiply float")
	globalQuaternionMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalQuaternionMethodBindings.operator: divide float")
	globalQuaternionMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalQuaternionMethodBindings.operator: multiply Vector3")
	globalQuaternionMethodBindings.operator_multiply_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalQuaternionMethodBindings.operator: equal Quaternion")
	globalQuaternionMethodBindings.operator_equal_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.operator: not_equal Quaternion")
	globalQuaternionMethodBindings.operator_not_equal_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.operator: add Quaternion")
	globalQuaternionMethodBindings.operator_add_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.operator: subtract Quaternion")
	globalQuaternionMethodBindings.operator_subtract_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.operator: multiply Quaternion")
	globalQuaternionMethodBindings.operator_multiply_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalQuaternionMethodBindings.operator: in Dictionary")
	globalQuaternionMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalQuaternionMethodBindings.operator: in Array")
	globalQuaternionMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_QUATERNION, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("quaternionInitBindings end")
}

type aABBMethodBindings struct {
	constructor_0                  GDExtensionPtrConstructor
	constructor_1                  GDExtensionPtrConstructor
	constructor_2                  GDExtensionPtrConstructor
	method_abs                     GDExtensionPtrBuiltInMethod
	method_get_center              GDExtensionPtrBuiltInMethod
	method_get_volume              GDExtensionPtrBuiltInMethod
	method_has_volume              GDExtensionPtrBuiltInMethod
	method_has_surface             GDExtensionPtrBuiltInMethod
	method_has_point               GDExtensionPtrBuiltInMethod
	method_is_equal_approx         GDExtensionPtrBuiltInMethod
	method_is_finite               GDExtensionPtrBuiltInMethod
	method_intersects              GDExtensionPtrBuiltInMethod
	method_encloses                GDExtensionPtrBuiltInMethod
	method_intersects_plane        GDExtensionPtrBuiltInMethod
	method_intersection            GDExtensionPtrBuiltInMethod
	method_merge                   GDExtensionPtrBuiltInMethod
	method_expand                  GDExtensionPtrBuiltInMethod
	method_grow                    GDExtensionPtrBuiltInMethod
	method_get_support             GDExtensionPtrBuiltInMethod
	method_get_longest_axis        GDExtensionPtrBuiltInMethod
	method_get_longest_axis_index  GDExtensionPtrBuiltInMethod
	method_get_longest_axis_size   GDExtensionPtrBuiltInMethod
	method_get_shortest_axis       GDExtensionPtrBuiltInMethod
	method_get_shortest_axis_index GDExtensionPtrBuiltInMethod
	method_get_shortest_axis_size  GDExtensionPtrBuiltInMethod
	method_get_endpoint            GDExtensionPtrBuiltInMethod
	method_intersects_segment      GDExtensionPtrBuiltInMethod
	method_intersects_ray          GDExtensionPtrBuiltInMethod
	member_position_setter         GDExtensionPtrSetter
	member_position_getter         GDExtensionPtrGetter
	member_size_setter             GDExtensionPtrSetter
	member_size_getter             GDExtensionPtrGetter
	member_end_setter              GDExtensionPtrSetter
	member_end_getter              GDExtensionPtrGetter
	operator_equal_Variant         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant     GDExtensionPtrOperatorEvaluator
	operator_not                   GDExtensionPtrOperatorEvaluator
	operator_equal_AABB            GDExtensionPtrOperatorEvaluator
	operator_not_equal_AABB        GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform3D  GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary         GDExtensionPtrOperatorEvaluator
	operator_in_Array              GDExtensionPtrOperatorEvaluator
}

var globalAABBMethodBindings aABBMethodBindings

func aABBInitConstructorBindings() {
	log.Debug("aABBInitConstructorBindings called")

	log.Debug("globalAABBMethodBindings.constructor_0")
	globalAABBMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_AABB, 0)
	log.Debug("globalAABBMethodBindings.constructor_1")
	globalAABBMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_AABB, 1)
	log.Debug("globalAABBMethodBindings.constructor_2")
	globalAABBMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_AABB, 2)
}

func aABBInitMethodBindings() {
	log.Debug("aABBInitMethodBindings called")

	missingMethods := make([]string, 0, 25)

	methodName0 := NewStringNameWithLatin1Chars("abs")
	defer methodName0.Destroy()
	log.Debug("globalAABBMethodBindings.method_abs")
	globalAABBMethodBindings.method_abs = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName0.AsGDExtensionConstStringNamePtr(), 1576868580)
	if globalAABBMethodBindings.method_abs == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_abs")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_center")
	defer methodName1.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_center")
	globalAABBMethodBindings.method_get_center = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName1.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalAABBMethodBindings.method_get_center == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_center")
	}
	methodName2 := NewStringNameWithLatin1Chars("get_volume")
	defer methodName2.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_volume")
	globalAABBMethodBindings.method_get_volume = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName2.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalAABBMethodBindings.method_get_volume == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_volume")
	}
	methodName3 := NewStringNameWithLatin1Chars("has_volume")
	defer methodName3.Destroy()
	log.Debug("globalAABBMethodBindings.method_has_volume")
	globalAABBMethodBindings.method_has_volume = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName3.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalAABBMethodBindings.method_has_volume == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_has_volume")
	}
	methodName4 := NewStringNameWithLatin1Chars("has_surface")
	defer methodName4.Destroy()
	log.Debug("globalAABBMethodBindings.method_has_surface")
	globalAABBMethodBindings.method_has_surface = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName4.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalAABBMethodBindings.method_has_surface == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_has_surface")
	}
	methodName5 := NewStringNameWithLatin1Chars("has_point")
	defer methodName5.Destroy()
	log.Debug("globalAABBMethodBindings.method_has_point")
	globalAABBMethodBindings.method_has_point = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName5.AsGDExtensionConstStringNamePtr(), 1749054343)
	if globalAABBMethodBindings.method_has_point == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_has_point")
	}
	methodName6 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName6.Destroy()
	log.Debug("globalAABBMethodBindings.method_is_equal_approx")
	globalAABBMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName6.AsGDExtensionConstStringNamePtr(), 299946684)
	if globalAABBMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_is_equal_approx")
	}
	methodName7 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName7.Destroy()
	log.Debug("globalAABBMethodBindings.method_is_finite")
	globalAABBMethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName7.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalAABBMethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_is_finite")
	}
	methodName8 := NewStringNameWithLatin1Chars("intersects")
	defer methodName8.Destroy()
	log.Debug("globalAABBMethodBindings.method_intersects")
	globalAABBMethodBindings.method_intersects = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName8.AsGDExtensionConstStringNamePtr(), 299946684)
	if globalAABBMethodBindings.method_intersects == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_intersects")
	}
	methodName9 := NewStringNameWithLatin1Chars("encloses")
	defer methodName9.Destroy()
	log.Debug("globalAABBMethodBindings.method_encloses")
	globalAABBMethodBindings.method_encloses = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName9.AsGDExtensionConstStringNamePtr(), 299946684)
	if globalAABBMethodBindings.method_encloses == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_encloses")
	}
	methodName10 := NewStringNameWithLatin1Chars("intersects_plane")
	defer methodName10.Destroy()
	log.Debug("globalAABBMethodBindings.method_intersects_plane")
	globalAABBMethodBindings.method_intersects_plane = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName10.AsGDExtensionConstStringNamePtr(), 1150170233)
	if globalAABBMethodBindings.method_intersects_plane == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_intersects_plane")
	}
	methodName11 := NewStringNameWithLatin1Chars("intersection")
	defer methodName11.Destroy()
	log.Debug("globalAABBMethodBindings.method_intersection")
	globalAABBMethodBindings.method_intersection = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName11.AsGDExtensionConstStringNamePtr(), 1271470306)
	if globalAABBMethodBindings.method_intersection == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_intersection")
	}
	methodName12 := NewStringNameWithLatin1Chars("merge")
	defer methodName12.Destroy()
	log.Debug("globalAABBMethodBindings.method_merge")
	globalAABBMethodBindings.method_merge = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName12.AsGDExtensionConstStringNamePtr(), 1271470306)
	if globalAABBMethodBindings.method_merge == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_merge")
	}
	methodName13 := NewStringNameWithLatin1Chars("expand")
	defer methodName13.Destroy()
	log.Debug("globalAABBMethodBindings.method_expand")
	globalAABBMethodBindings.method_expand = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName13.AsGDExtensionConstStringNamePtr(), 2851643018)
	if globalAABBMethodBindings.method_expand == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_expand")
	}
	methodName14 := NewStringNameWithLatin1Chars("grow")
	defer methodName14.Destroy()
	log.Debug("globalAABBMethodBindings.method_grow")
	globalAABBMethodBindings.method_grow = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName14.AsGDExtensionConstStringNamePtr(), 239217291)
	if globalAABBMethodBindings.method_grow == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_grow")
	}
	methodName15 := NewStringNameWithLatin1Chars("get_support")
	defer methodName15.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_support")
	globalAABBMethodBindings.method_get_support = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName15.AsGDExtensionConstStringNamePtr(), 2923479887)
	if globalAABBMethodBindings.method_get_support == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_support")
	}
	methodName16 := NewStringNameWithLatin1Chars("get_longest_axis")
	defer methodName16.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_longest_axis")
	globalAABBMethodBindings.method_get_longest_axis = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName16.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalAABBMethodBindings.method_get_longest_axis == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_longest_axis")
	}
	methodName17 := NewStringNameWithLatin1Chars("get_longest_axis_index")
	defer methodName17.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_longest_axis_index")
	globalAABBMethodBindings.method_get_longest_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName17.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalAABBMethodBindings.method_get_longest_axis_index == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_longest_axis_index")
	}
	methodName18 := NewStringNameWithLatin1Chars("get_longest_axis_size")
	defer methodName18.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_longest_axis_size")
	globalAABBMethodBindings.method_get_longest_axis_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName18.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalAABBMethodBindings.method_get_longest_axis_size == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_longest_axis_size")
	}
	methodName19 := NewStringNameWithLatin1Chars("get_shortest_axis")
	defer methodName19.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_shortest_axis")
	globalAABBMethodBindings.method_get_shortest_axis = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName19.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalAABBMethodBindings.method_get_shortest_axis == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_shortest_axis")
	}
	methodName20 := NewStringNameWithLatin1Chars("get_shortest_axis_index")
	defer methodName20.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_shortest_axis_index")
	globalAABBMethodBindings.method_get_shortest_axis_index = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName20.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalAABBMethodBindings.method_get_shortest_axis_index == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_shortest_axis_index")
	}
	methodName21 := NewStringNameWithLatin1Chars("get_shortest_axis_size")
	defer methodName21.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_shortest_axis_size")
	globalAABBMethodBindings.method_get_shortest_axis_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName21.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalAABBMethodBindings.method_get_shortest_axis_size == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_shortest_axis_size")
	}
	methodName22 := NewStringNameWithLatin1Chars("get_endpoint")
	defer methodName22.Destroy()
	log.Debug("globalAABBMethodBindings.method_get_endpoint")
	globalAABBMethodBindings.method_get_endpoint = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName22.AsGDExtensionConstStringNamePtr(), 1394941017)
	if globalAABBMethodBindings.method_get_endpoint == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_get_endpoint")
	}
	methodName23 := NewStringNameWithLatin1Chars("intersects_segment")
	defer methodName23.Destroy()
	log.Debug("globalAABBMethodBindings.method_intersects_segment")
	globalAABBMethodBindings.method_intersects_segment = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName23.AsGDExtensionConstStringNamePtr(), 2048133369)
	if globalAABBMethodBindings.method_intersects_segment == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_intersects_segment")
	}
	methodName24 := NewStringNameWithLatin1Chars("intersects_ray")
	defer methodName24.Destroy()
	log.Debug("globalAABBMethodBindings.method_intersects_ray")
	globalAABBMethodBindings.method_intersects_ray = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_AABB, methodName24.AsGDExtensionConstStringNamePtr(), 2048133369)
	if globalAABBMethodBindings.method_intersects_ray == nil {
		missingMethods = append(missingMethods, "globalAABBMethodBindings.method_intersects_ray")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("position")
	defer memberName0.Destroy()
	log.Debug("globalAABBMethodBindings.member_position_setter")
	globalAABBMethodBindings.member_position_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_AABB, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalAABBMethodBindings.member_position_getter")
	globalAABBMethodBindings.member_position_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_AABB, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("size")
	defer memberName1.Destroy()
	log.Debug("globalAABBMethodBindings.member_size_setter")
	globalAABBMethodBindings.member_size_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_AABB, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalAABBMethodBindings.member_size_getter")
	globalAABBMethodBindings.member_size_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_AABB, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("end")
	defer memberName2.Destroy()
	log.Debug("globalAABBMethodBindings.member_end_setter")
	globalAABBMethodBindings.member_end_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_AABB, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalAABBMethodBindings.member_end_getter")
	globalAABBMethodBindings.member_end_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_AABB, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalAABBMethodBindings.operator: equal Variant")
	globalAABBMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalAABBMethodBindings.operator: not_equal Variant")
	globalAABBMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalAABBMethodBindings.operator: not ")
	globalAABBMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalAABBMethodBindings.operator: equal AABB")
	globalAABBMethodBindings.operator_equal_AABB = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_AABB)
	log.Debug("globalAABBMethodBindings.operator: not_equal AABB")
	globalAABBMethodBindings.operator_not_equal_AABB = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_AABB)
	log.Debug("globalAABBMethodBindings.operator: multiply Transform3D")
	globalAABBMethodBindings.operator_multiply_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalAABBMethodBindings.operator: in Dictionary")
	globalAABBMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalAABBMethodBindings.operator: in Array")
	globalAABBMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_AABB, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("aABBInitBindings end")
}

type basisMethodBindings struct {
	constructor_0                  GDExtensionPtrConstructor
	constructor_1                  GDExtensionPtrConstructor
	constructor_2                  GDExtensionPtrConstructor
	constructor_3                  GDExtensionPtrConstructor
	constructor_4                  GDExtensionPtrConstructor
	method_inverse                 GDExtensionPtrBuiltInMethod
	method_transposed              GDExtensionPtrBuiltInMethod
	method_orthonormalized         GDExtensionPtrBuiltInMethod
	method_determinant             GDExtensionPtrBuiltInMethod
	method_rotated                 GDExtensionPtrBuiltInMethod
	method_scaled                  GDExtensionPtrBuiltInMethod
	method_get_scale               GDExtensionPtrBuiltInMethod
	method_get_euler               GDExtensionPtrBuiltInMethod
	method_tdotx                   GDExtensionPtrBuiltInMethod
	method_tdoty                   GDExtensionPtrBuiltInMethod
	method_tdotz                   GDExtensionPtrBuiltInMethod
	method_slerp                   GDExtensionPtrBuiltInMethod
	method_is_conformal            GDExtensionPtrBuiltInMethod
	method_is_equal_approx         GDExtensionPtrBuiltInMethod
	method_is_finite               GDExtensionPtrBuiltInMethod
	method_get_rotation_quaternion GDExtensionPtrBuiltInMethod
	method_looking_at              GDExtensionPtrBuiltInMethod
	method_from_scale              GDExtensionPtrBuiltInMethod
	method_from_euler              GDExtensionPtrBuiltInMethod
	member_x_setter                GDExtensionPtrSetter
	member_x_getter                GDExtensionPtrGetter
	member_y_setter                GDExtensionPtrSetter
	member_y_getter                GDExtensionPtrGetter
	member_z_setter                GDExtensionPtrSetter
	member_z_getter                GDExtensionPtrGetter
	indexed_setter                 GDExtensionPtrIndexedSetter
	indexed_getter                 GDExtensionPtrIndexedGetter
	operator_equal_Variant         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant     GDExtensionPtrOperatorEvaluator
	operator_not                   GDExtensionPtrOperatorEvaluator
	operator_multiply_int          GDExtensionPtrOperatorEvaluator
	operator_divide_int            GDExtensionPtrOperatorEvaluator
	operator_multiply_float        GDExtensionPtrOperatorEvaluator
	operator_divide_float          GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector3      GDExtensionPtrOperatorEvaluator
	operator_equal_Basis           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Basis       GDExtensionPtrOperatorEvaluator
	operator_multiply_Basis        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary         GDExtensionPtrOperatorEvaluator
	operator_in_Array              GDExtensionPtrOperatorEvaluator
}

var globalBasisMethodBindings basisMethodBindings

func basisInitConstructorBindings() {
	log.Debug("basisInitConstructorBindings called")

	log.Debug("globalBasisMethodBindings.constructor_0")
	globalBasisMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_BASIS, 0)
	log.Debug("globalBasisMethodBindings.constructor_1")
	globalBasisMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_BASIS, 1)
	log.Debug("globalBasisMethodBindings.constructor_2")
	globalBasisMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_BASIS, 2)
	log.Debug("globalBasisMethodBindings.constructor_3")
	globalBasisMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_BASIS, 3)
	log.Debug("globalBasisMethodBindings.constructor_4")
	globalBasisMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_BASIS, 4)
}

func basisInitMethodBindings() {
	log.Debug("basisInitMethodBindings called")

	missingMethods := make([]string, 0, 19)

	methodName0 := NewStringNameWithLatin1Chars("inverse")
	defer methodName0.Destroy()
	log.Debug("globalBasisMethodBindings.method_inverse")
	globalBasisMethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName0.AsGDExtensionConstStringNamePtr(), 594669093)
	if globalBasisMethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_inverse")
	}
	methodName1 := NewStringNameWithLatin1Chars("transposed")
	defer methodName1.Destroy()
	log.Debug("globalBasisMethodBindings.method_transposed")
	globalBasisMethodBindings.method_transposed = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName1.AsGDExtensionConstStringNamePtr(), 594669093)
	if globalBasisMethodBindings.method_transposed == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_transposed")
	}
	methodName2 := NewStringNameWithLatin1Chars("orthonormalized")
	defer methodName2.Destroy()
	log.Debug("globalBasisMethodBindings.method_orthonormalized")
	globalBasisMethodBindings.method_orthonormalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName2.AsGDExtensionConstStringNamePtr(), 594669093)
	if globalBasisMethodBindings.method_orthonormalized == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_orthonormalized")
	}
	methodName3 := NewStringNameWithLatin1Chars("determinant")
	defer methodName3.Destroy()
	log.Debug("globalBasisMethodBindings.method_determinant")
	globalBasisMethodBindings.method_determinant = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName3.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalBasisMethodBindings.method_determinant == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_determinant")
	}
	methodName4 := NewStringNameWithLatin1Chars("rotated")
	defer methodName4.Destroy()
	log.Debug("globalBasisMethodBindings.method_rotated")
	globalBasisMethodBindings.method_rotated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName4.AsGDExtensionConstStringNamePtr(), 1998708965)
	if globalBasisMethodBindings.method_rotated == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_rotated")
	}
	methodName5 := NewStringNameWithLatin1Chars("scaled")
	defer methodName5.Destroy()
	log.Debug("globalBasisMethodBindings.method_scaled")
	globalBasisMethodBindings.method_scaled = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName5.AsGDExtensionConstStringNamePtr(), 3934786792)
	if globalBasisMethodBindings.method_scaled == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_scaled")
	}
	methodName6 := NewStringNameWithLatin1Chars("get_scale")
	defer methodName6.Destroy()
	log.Debug("globalBasisMethodBindings.method_get_scale")
	globalBasisMethodBindings.method_get_scale = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName6.AsGDExtensionConstStringNamePtr(), 1776574132)
	if globalBasisMethodBindings.method_get_scale == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_get_scale")
	}
	methodName7 := NewStringNameWithLatin1Chars("get_euler")
	defer methodName7.Destroy()
	log.Debug("globalBasisMethodBindings.method_get_euler")
	globalBasisMethodBindings.method_get_euler = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName7.AsGDExtensionConstStringNamePtr(), 1394941017)
	if globalBasisMethodBindings.method_get_euler == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_get_euler")
	}
	methodName8 := NewStringNameWithLatin1Chars("tdotx")
	defer methodName8.Destroy()
	log.Debug("globalBasisMethodBindings.method_tdotx")
	globalBasisMethodBindings.method_tdotx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName8.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalBasisMethodBindings.method_tdotx == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_tdotx")
	}
	methodName9 := NewStringNameWithLatin1Chars("tdoty")
	defer methodName9.Destroy()
	log.Debug("globalBasisMethodBindings.method_tdoty")
	globalBasisMethodBindings.method_tdoty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName9.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalBasisMethodBindings.method_tdoty == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_tdoty")
	}
	methodName10 := NewStringNameWithLatin1Chars("tdotz")
	defer methodName10.Destroy()
	log.Debug("globalBasisMethodBindings.method_tdotz")
	globalBasisMethodBindings.method_tdotz = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName10.AsGDExtensionConstStringNamePtr(), 1047977935)
	if globalBasisMethodBindings.method_tdotz == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_tdotz")
	}
	methodName11 := NewStringNameWithLatin1Chars("slerp")
	defer methodName11.Destroy()
	log.Debug("globalBasisMethodBindings.method_slerp")
	globalBasisMethodBindings.method_slerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName11.AsGDExtensionConstStringNamePtr(), 3118673011)
	if globalBasisMethodBindings.method_slerp == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_slerp")
	}
	methodName12 := NewStringNameWithLatin1Chars("is_conformal")
	defer methodName12.Destroy()
	log.Debug("globalBasisMethodBindings.method_is_conformal")
	globalBasisMethodBindings.method_is_conformal = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName12.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalBasisMethodBindings.method_is_conformal == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_is_conformal")
	}
	methodName13 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName13.Destroy()
	log.Debug("globalBasisMethodBindings.method_is_equal_approx")
	globalBasisMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName13.AsGDExtensionConstStringNamePtr(), 3165333982)
	if globalBasisMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_is_equal_approx")
	}
	methodName14 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName14.Destroy()
	log.Debug("globalBasisMethodBindings.method_is_finite")
	globalBasisMethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName14.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalBasisMethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_is_finite")
	}
	methodName15 := NewStringNameWithLatin1Chars("get_rotation_quaternion")
	defer methodName15.Destroy()
	log.Debug("globalBasisMethodBindings.method_get_rotation_quaternion")
	globalBasisMethodBindings.method_get_rotation_quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName15.AsGDExtensionConstStringNamePtr(), 4274879941)
	if globalBasisMethodBindings.method_get_rotation_quaternion == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_get_rotation_quaternion")
	}
	methodName16 := NewStringNameWithLatin1Chars("looking_at")
	defer methodName16.Destroy()
	log.Debug("globalBasisMethodBindings.method_looking_at")
	globalBasisMethodBindings.method_looking_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName16.AsGDExtensionConstStringNamePtr(), 3728732505)
	if globalBasisMethodBindings.method_looking_at == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_looking_at")
	}
	methodName17 := NewStringNameWithLatin1Chars("from_scale")
	defer methodName17.Destroy()
	log.Debug("globalBasisMethodBindings.method_from_scale")
	globalBasisMethodBindings.method_from_scale = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName17.AsGDExtensionConstStringNamePtr(), 3703240166)
	if globalBasisMethodBindings.method_from_scale == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_from_scale")
	}
	methodName18 := NewStringNameWithLatin1Chars("from_euler")
	defer methodName18.Destroy()
	log.Debug("globalBasisMethodBindings.method_from_euler")
	globalBasisMethodBindings.method_from_euler = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_BASIS, methodName18.AsGDExtensionConstStringNamePtr(), 2802321791)
	if globalBasisMethodBindings.method_from_euler == nil {
		missingMethods = append(missingMethods, "globalBasisMethodBindings.method_from_euler")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalBasisMethodBindings.member_x_setter")
	globalBasisMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_BASIS, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalBasisMethodBindings.member_x_getter")
	globalBasisMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_BASIS, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalBasisMethodBindings.member_y_setter")
	globalBasisMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_BASIS, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalBasisMethodBindings.member_y_getter")
	globalBasisMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_BASIS, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalBasisMethodBindings.member_z_setter")
	globalBasisMethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_BASIS, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalBasisMethodBindings.member_z_getter")
	globalBasisMethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_BASIS, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalBasisMethodBindings.indexed_setter")
	globalBasisMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalBasisMethodBindings.indexed_getter")
	globalBasisMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalBasisMethodBindings.operator: equal Variant")
	globalBasisMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalBasisMethodBindings.operator: not_equal Variant")
	globalBasisMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalBasisMethodBindings.operator: not ")
	globalBasisMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalBasisMethodBindings.operator: multiply int")
	globalBasisMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalBasisMethodBindings.operator: divide int")
	globalBasisMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalBasisMethodBindings.operator: multiply float")
	globalBasisMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalBasisMethodBindings.operator: divide float")
	globalBasisMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalBasisMethodBindings.operator: multiply Vector3")
	globalBasisMethodBindings.operator_multiply_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalBasisMethodBindings.operator: equal Basis")
	globalBasisMethodBindings.operator_equal_Basis = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalBasisMethodBindings.operator: not_equal Basis")
	globalBasisMethodBindings.operator_not_equal_Basis = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalBasisMethodBindings.operator: multiply Basis")
	globalBasisMethodBindings.operator_multiply_Basis = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalBasisMethodBindings.operator: in Dictionary")
	globalBasisMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalBasisMethodBindings.operator: in Array")
	globalBasisMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_BASIS, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("basisInitBindings end")
}

type transform3DMethodBindings struct {
	constructor_0                        GDExtensionPtrConstructor
	constructor_1                        GDExtensionPtrConstructor
	constructor_2                        GDExtensionPtrConstructor
	constructor_3                        GDExtensionPtrConstructor
	constructor_4                        GDExtensionPtrConstructor
	method_inverse                       GDExtensionPtrBuiltInMethod
	method_affine_inverse                GDExtensionPtrBuiltInMethod
	method_orthonormalized               GDExtensionPtrBuiltInMethod
	method_rotated                       GDExtensionPtrBuiltInMethod
	method_rotated_local                 GDExtensionPtrBuiltInMethod
	method_scaled                        GDExtensionPtrBuiltInMethod
	method_scaled_local                  GDExtensionPtrBuiltInMethod
	method_translated                    GDExtensionPtrBuiltInMethod
	method_translated_local              GDExtensionPtrBuiltInMethod
	method_looking_at                    GDExtensionPtrBuiltInMethod
	method_interpolate_with              GDExtensionPtrBuiltInMethod
	method_is_equal_approx               GDExtensionPtrBuiltInMethod
	method_is_finite                     GDExtensionPtrBuiltInMethod
	member_basis_setter                  GDExtensionPtrSetter
	member_basis_getter                  GDExtensionPtrGetter
	member_origin_setter                 GDExtensionPtrSetter
	member_origin_getter                 GDExtensionPtrGetter
	operator_equal_Variant               GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not                         GDExtensionPtrOperatorEvaluator
	operator_multiply_int                GDExtensionPtrOperatorEvaluator
	operator_divide_int                  GDExtensionPtrOperatorEvaluator
	operator_multiply_float              GDExtensionPtrOperatorEvaluator
	operator_divide_float                GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector3            GDExtensionPtrOperatorEvaluator
	operator_multiply_Plane              GDExtensionPtrOperatorEvaluator
	operator_multiply_AABB               GDExtensionPtrOperatorEvaluator
	operator_equal_Transform3D           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Transform3D       GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform3D        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary               GDExtensionPtrOperatorEvaluator
	operator_in_Array                    GDExtensionPtrOperatorEvaluator
	operator_multiply_PackedVector3Array GDExtensionPtrOperatorEvaluator
}

var globalTransform3DMethodBindings transform3DMethodBindings

func transform3DInitConstructorBindings() {
	log.Debug("transform3DInitConstructorBindings called")

	log.Debug("globalTransform3DMethodBindings.constructor_0")
	globalTransform3DMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, 0)
	log.Debug("globalTransform3DMethodBindings.constructor_1")
	globalTransform3DMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, 1)
	log.Debug("globalTransform3DMethodBindings.constructor_2")
	globalTransform3DMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, 2)
	log.Debug("globalTransform3DMethodBindings.constructor_3")
	globalTransform3DMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, 3)
	log.Debug("globalTransform3DMethodBindings.constructor_4")
	globalTransform3DMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, 4)
}

func transform3DInitMethodBindings() {
	log.Debug("transform3DInitMethodBindings called")

	missingMethods := make([]string, 0, 13)

	methodName0 := NewStringNameWithLatin1Chars("inverse")
	defer methodName0.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_inverse")
	globalTransform3DMethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName0.AsGDExtensionConstStringNamePtr(), 3816817146)
	if globalTransform3DMethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_inverse")
	}
	methodName1 := NewStringNameWithLatin1Chars("affine_inverse")
	defer methodName1.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_affine_inverse")
	globalTransform3DMethodBindings.method_affine_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName1.AsGDExtensionConstStringNamePtr(), 3816817146)
	if globalTransform3DMethodBindings.method_affine_inverse == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_affine_inverse")
	}
	methodName2 := NewStringNameWithLatin1Chars("orthonormalized")
	defer methodName2.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_orthonormalized")
	globalTransform3DMethodBindings.method_orthonormalized = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName2.AsGDExtensionConstStringNamePtr(), 3816817146)
	if globalTransform3DMethodBindings.method_orthonormalized == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_orthonormalized")
	}
	methodName3 := NewStringNameWithLatin1Chars("rotated")
	defer methodName3.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_rotated")
	globalTransform3DMethodBindings.method_rotated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName3.AsGDExtensionConstStringNamePtr(), 1563203923)
	if globalTransform3DMethodBindings.method_rotated == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_rotated")
	}
	methodName4 := NewStringNameWithLatin1Chars("rotated_local")
	defer methodName4.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_rotated_local")
	globalTransform3DMethodBindings.method_rotated_local = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName4.AsGDExtensionConstStringNamePtr(), 1563203923)
	if globalTransform3DMethodBindings.method_rotated_local == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_rotated_local")
	}
	methodName5 := NewStringNameWithLatin1Chars("scaled")
	defer methodName5.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_scaled")
	globalTransform3DMethodBindings.method_scaled = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName5.AsGDExtensionConstStringNamePtr(), 1405596198)
	if globalTransform3DMethodBindings.method_scaled == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_scaled")
	}
	methodName6 := NewStringNameWithLatin1Chars("scaled_local")
	defer methodName6.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_scaled_local")
	globalTransform3DMethodBindings.method_scaled_local = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName6.AsGDExtensionConstStringNamePtr(), 1405596198)
	if globalTransform3DMethodBindings.method_scaled_local == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_scaled_local")
	}
	methodName7 := NewStringNameWithLatin1Chars("translated")
	defer methodName7.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_translated")
	globalTransform3DMethodBindings.method_translated = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName7.AsGDExtensionConstStringNamePtr(), 1405596198)
	if globalTransform3DMethodBindings.method_translated == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_translated")
	}
	methodName8 := NewStringNameWithLatin1Chars("translated_local")
	defer methodName8.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_translated_local")
	globalTransform3DMethodBindings.method_translated_local = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName8.AsGDExtensionConstStringNamePtr(), 1405596198)
	if globalTransform3DMethodBindings.method_translated_local == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_translated_local")
	}
	methodName9 := NewStringNameWithLatin1Chars("looking_at")
	defer methodName9.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_looking_at")
	globalTransform3DMethodBindings.method_looking_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName9.AsGDExtensionConstStringNamePtr(), 90889270)
	if globalTransform3DMethodBindings.method_looking_at == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_looking_at")
	}
	methodName10 := NewStringNameWithLatin1Chars("interpolate_with")
	defer methodName10.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_interpolate_with")
	globalTransform3DMethodBindings.method_interpolate_with = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName10.AsGDExtensionConstStringNamePtr(), 1786453358)
	if globalTransform3DMethodBindings.method_interpolate_with == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_interpolate_with")
	}
	methodName11 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName11.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_is_equal_approx")
	globalTransform3DMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName11.AsGDExtensionConstStringNamePtr(), 696001652)
	if globalTransform3DMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_is_equal_approx")
	}
	methodName12 := NewStringNameWithLatin1Chars("is_finite")
	defer methodName12.Destroy()
	log.Debug("globalTransform3DMethodBindings.method_is_finite")
	globalTransform3DMethodBindings.method_is_finite = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, methodName12.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalTransform3DMethodBindings.method_is_finite == nil {
		missingMethods = append(missingMethods, "globalTransform3DMethodBindings.method_is_finite")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("basis")
	defer memberName0.Destroy()
	log.Debug("globalTransform3DMethodBindings.member_basis_setter")
	globalTransform3DMethodBindings.member_basis_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform3DMethodBindings.member_basis_getter")
	globalTransform3DMethodBindings.member_basis_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("origin")
	defer memberName1.Destroy()
	log.Debug("globalTransform3DMethodBindings.member_origin_setter")
	globalTransform3DMethodBindings.member_origin_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform3DMethodBindings.member_origin_getter")
	globalTransform3DMethodBindings.member_origin_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalTransform3DMethodBindings.operator: equal Variant")
	globalTransform3DMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalTransform3DMethodBindings.operator: not_equal Variant")
	globalTransform3DMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalTransform3DMethodBindings.operator: not ")
	globalTransform3DMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalTransform3DMethodBindings.operator: multiply int")
	globalTransform3DMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalTransform3DMethodBindings.operator: divide int")
	globalTransform3DMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalTransform3DMethodBindings.operator: multiply float")
	globalTransform3DMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalTransform3DMethodBindings.operator: divide float")
	globalTransform3DMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalTransform3DMethodBindings.operator: multiply Vector3")
	globalTransform3DMethodBindings.operator_multiply_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalTransform3DMethodBindings.operator: multiply Plane")
	globalTransform3DMethodBindings.operator_multiply_Plane = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_PLANE)
	log.Debug("globalTransform3DMethodBindings.operator: multiply AABB")
	globalTransform3DMethodBindings.operator_multiply_AABB = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_AABB)
	log.Debug("globalTransform3DMethodBindings.operator: equal Transform3D")
	globalTransform3DMethodBindings.operator_equal_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalTransform3DMethodBindings.operator: not_equal Transform3D")
	globalTransform3DMethodBindings.operator_not_equal_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalTransform3DMethodBindings.operator: multiply Transform3D")
	globalTransform3DMethodBindings.operator_multiply_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalTransform3DMethodBindings.operator: in Dictionary")
	globalTransform3DMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalTransform3DMethodBindings.operator: in Array")
	globalTransform3DMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalTransform3DMethodBindings.operator: multiply PackedVector3Array")
	globalTransform3DMethodBindings.operator_multiply_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("transform3DInitBindings end")
}

type projectionMethodBindings struct {
	constructor_0                     GDExtensionPtrConstructor
	constructor_1                     GDExtensionPtrConstructor
	constructor_2                     GDExtensionPtrConstructor
	constructor_3                     GDExtensionPtrConstructor
	method_create_depth_correction    GDExtensionPtrBuiltInMethod
	method_create_light_atlas_rect    GDExtensionPtrBuiltInMethod
	method_create_perspective         GDExtensionPtrBuiltInMethod
	method_create_perspective_hmd     GDExtensionPtrBuiltInMethod
	method_create_for_hmd             GDExtensionPtrBuiltInMethod
	method_create_orthogonal          GDExtensionPtrBuiltInMethod
	method_create_orthogonal_aspect   GDExtensionPtrBuiltInMethod
	method_create_frustum             GDExtensionPtrBuiltInMethod
	method_create_frustum_aspect      GDExtensionPtrBuiltInMethod
	method_create_fit_aabb            GDExtensionPtrBuiltInMethod
	method_determinant                GDExtensionPtrBuiltInMethod
	method_perspective_znear_adjusted GDExtensionPtrBuiltInMethod
	method_get_projection_plane       GDExtensionPtrBuiltInMethod
	method_flipped_y                  GDExtensionPtrBuiltInMethod
	method_jitter_offseted            GDExtensionPtrBuiltInMethod
	method_get_fovy                   GDExtensionPtrBuiltInMethod
	method_get_z_far                  GDExtensionPtrBuiltInMethod
	method_get_z_near                 GDExtensionPtrBuiltInMethod
	method_get_aspect                 GDExtensionPtrBuiltInMethod
	method_get_fov                    GDExtensionPtrBuiltInMethod
	method_is_orthogonal              GDExtensionPtrBuiltInMethod
	method_get_viewport_half_extents  GDExtensionPtrBuiltInMethod
	method_get_far_plane_half_extents GDExtensionPtrBuiltInMethod
	method_inverse                    GDExtensionPtrBuiltInMethod
	method_get_pixels_per_meter       GDExtensionPtrBuiltInMethod
	method_get_lod_multiplier         GDExtensionPtrBuiltInMethod
	member_x_setter                   GDExtensionPtrSetter
	member_x_getter                   GDExtensionPtrGetter
	member_y_setter                   GDExtensionPtrSetter
	member_y_getter                   GDExtensionPtrGetter
	member_z_setter                   GDExtensionPtrSetter
	member_z_getter                   GDExtensionPtrGetter
	member_w_setter                   GDExtensionPtrSetter
	member_w_getter                   GDExtensionPtrGetter
	indexed_setter                    GDExtensionPtrIndexedSetter
	indexed_getter                    GDExtensionPtrIndexedGetter
	operator_equal_Variant            GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant        GDExtensionPtrOperatorEvaluator
	operator_not                      GDExtensionPtrOperatorEvaluator
	operator_multiply_Vector4         GDExtensionPtrOperatorEvaluator
	operator_equal_Projection         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Projection     GDExtensionPtrOperatorEvaluator
	operator_multiply_Projection      GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary            GDExtensionPtrOperatorEvaluator
	operator_in_Array                 GDExtensionPtrOperatorEvaluator
}

var globalProjectionMethodBindings projectionMethodBindings

func projectionInitConstructorBindings() {
	log.Debug("projectionInitConstructorBindings called")

	log.Debug("globalProjectionMethodBindings.constructor_0")
	globalProjectionMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PROJECTION, 0)
	log.Debug("globalProjectionMethodBindings.constructor_1")
	globalProjectionMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PROJECTION, 1)
	log.Debug("globalProjectionMethodBindings.constructor_2")
	globalProjectionMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PROJECTION, 2)
	log.Debug("globalProjectionMethodBindings.constructor_3")
	globalProjectionMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PROJECTION, 3)
}

func projectionInitMethodBindings() {
	log.Debug("projectionInitMethodBindings called")

	missingMethods := make([]string, 0, 26)

	methodName0 := NewStringNameWithLatin1Chars("create_depth_correction")
	defer methodName0.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_depth_correction")
	globalProjectionMethodBindings.method_create_depth_correction = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName0.AsGDExtensionConstStringNamePtr(), 1228516048)
	if globalProjectionMethodBindings.method_create_depth_correction == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_depth_correction")
	}
	methodName1 := NewStringNameWithLatin1Chars("create_light_atlas_rect")
	defer methodName1.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_light_atlas_rect")
	globalProjectionMethodBindings.method_create_light_atlas_rect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName1.AsGDExtensionConstStringNamePtr(), 2654950662)
	if globalProjectionMethodBindings.method_create_light_atlas_rect == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_light_atlas_rect")
	}
	methodName2 := NewStringNameWithLatin1Chars("create_perspective")
	defer methodName2.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_perspective")
	globalProjectionMethodBindings.method_create_perspective = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName2.AsGDExtensionConstStringNamePtr(), 390915442)
	if globalProjectionMethodBindings.method_create_perspective == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_perspective")
	}
	methodName3 := NewStringNameWithLatin1Chars("create_perspective_hmd")
	defer methodName3.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_perspective_hmd")
	globalProjectionMethodBindings.method_create_perspective_hmd = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName3.AsGDExtensionConstStringNamePtr(), 2857674800)
	if globalProjectionMethodBindings.method_create_perspective_hmd == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_perspective_hmd")
	}
	methodName4 := NewStringNameWithLatin1Chars("create_for_hmd")
	defer methodName4.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_for_hmd")
	globalProjectionMethodBindings.method_create_for_hmd = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName4.AsGDExtensionConstStringNamePtr(), 4184144994)
	if globalProjectionMethodBindings.method_create_for_hmd == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_for_hmd")
	}
	methodName5 := NewStringNameWithLatin1Chars("create_orthogonal")
	defer methodName5.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_orthogonal")
	globalProjectionMethodBindings.method_create_orthogonal = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName5.AsGDExtensionConstStringNamePtr(), 3707929169)
	if globalProjectionMethodBindings.method_create_orthogonal == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_orthogonal")
	}
	methodName6 := NewStringNameWithLatin1Chars("create_orthogonal_aspect")
	defer methodName6.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_orthogonal_aspect")
	globalProjectionMethodBindings.method_create_orthogonal_aspect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName6.AsGDExtensionConstStringNamePtr(), 390915442)
	if globalProjectionMethodBindings.method_create_orthogonal_aspect == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_orthogonal_aspect")
	}
	methodName7 := NewStringNameWithLatin1Chars("create_frustum")
	defer methodName7.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_frustum")
	globalProjectionMethodBindings.method_create_frustum = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName7.AsGDExtensionConstStringNamePtr(), 3707929169)
	if globalProjectionMethodBindings.method_create_frustum == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_frustum")
	}
	methodName8 := NewStringNameWithLatin1Chars("create_frustum_aspect")
	defer methodName8.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_frustum_aspect")
	globalProjectionMethodBindings.method_create_frustum_aspect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName8.AsGDExtensionConstStringNamePtr(), 1535076251)
	if globalProjectionMethodBindings.method_create_frustum_aspect == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_frustum_aspect")
	}
	methodName9 := NewStringNameWithLatin1Chars("create_fit_aabb")
	defer methodName9.Destroy()
	log.Debug("globalProjectionMethodBindings.method_create_fit_aabb")
	globalProjectionMethodBindings.method_create_fit_aabb = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName9.AsGDExtensionConstStringNamePtr(), 2264694907)
	if globalProjectionMethodBindings.method_create_fit_aabb == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_create_fit_aabb")
	}
	methodName10 := NewStringNameWithLatin1Chars("determinant")
	defer methodName10.Destroy()
	log.Debug("globalProjectionMethodBindings.method_determinant")
	globalProjectionMethodBindings.method_determinant = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName10.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalProjectionMethodBindings.method_determinant == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_determinant")
	}
	methodName11 := NewStringNameWithLatin1Chars("perspective_znear_adjusted")
	defer methodName11.Destroy()
	log.Debug("globalProjectionMethodBindings.method_perspective_znear_adjusted")
	globalProjectionMethodBindings.method_perspective_znear_adjusted = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName11.AsGDExtensionConstStringNamePtr(), 3584785443)
	if globalProjectionMethodBindings.method_perspective_znear_adjusted == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_perspective_znear_adjusted")
	}
	methodName12 := NewStringNameWithLatin1Chars("get_projection_plane")
	defer methodName12.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_projection_plane")
	globalProjectionMethodBindings.method_get_projection_plane = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName12.AsGDExtensionConstStringNamePtr(), 1551184160)
	if globalProjectionMethodBindings.method_get_projection_plane == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_projection_plane")
	}
	methodName13 := NewStringNameWithLatin1Chars("flipped_y")
	defer methodName13.Destroy()
	log.Debug("globalProjectionMethodBindings.method_flipped_y")
	globalProjectionMethodBindings.method_flipped_y = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName13.AsGDExtensionConstStringNamePtr(), 4212530932)
	if globalProjectionMethodBindings.method_flipped_y == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_flipped_y")
	}
	methodName14 := NewStringNameWithLatin1Chars("jitter_offseted")
	defer methodName14.Destroy()
	log.Debug("globalProjectionMethodBindings.method_jitter_offseted")
	globalProjectionMethodBindings.method_jitter_offseted = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName14.AsGDExtensionConstStringNamePtr(), 2448438599)
	if globalProjectionMethodBindings.method_jitter_offseted == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_jitter_offseted")
	}
	methodName15 := NewStringNameWithLatin1Chars("get_fovy")
	defer methodName15.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_fovy")
	globalProjectionMethodBindings.method_get_fovy = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName15.AsGDExtensionConstStringNamePtr(), 3514207532)
	if globalProjectionMethodBindings.method_get_fovy == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_fovy")
	}
	methodName16 := NewStringNameWithLatin1Chars("get_z_far")
	defer methodName16.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_z_far")
	globalProjectionMethodBindings.method_get_z_far = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName16.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalProjectionMethodBindings.method_get_z_far == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_z_far")
	}
	methodName17 := NewStringNameWithLatin1Chars("get_z_near")
	defer methodName17.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_z_near")
	globalProjectionMethodBindings.method_get_z_near = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName17.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalProjectionMethodBindings.method_get_z_near == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_z_near")
	}
	methodName18 := NewStringNameWithLatin1Chars("get_aspect")
	defer methodName18.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_aspect")
	globalProjectionMethodBindings.method_get_aspect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName18.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalProjectionMethodBindings.method_get_aspect == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_aspect")
	}
	methodName19 := NewStringNameWithLatin1Chars("get_fov")
	defer methodName19.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_fov")
	globalProjectionMethodBindings.method_get_fov = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName19.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalProjectionMethodBindings.method_get_fov == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_fov")
	}
	methodName20 := NewStringNameWithLatin1Chars("is_orthogonal")
	defer methodName20.Destroy()
	log.Debug("globalProjectionMethodBindings.method_is_orthogonal")
	globalProjectionMethodBindings.method_is_orthogonal = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName20.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalProjectionMethodBindings.method_is_orthogonal == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_is_orthogonal")
	}
	methodName21 := NewStringNameWithLatin1Chars("get_viewport_half_extents")
	defer methodName21.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_viewport_half_extents")
	globalProjectionMethodBindings.method_get_viewport_half_extents = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName21.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalProjectionMethodBindings.method_get_viewport_half_extents == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_viewport_half_extents")
	}
	methodName22 := NewStringNameWithLatin1Chars("get_far_plane_half_extents")
	defer methodName22.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_far_plane_half_extents")
	globalProjectionMethodBindings.method_get_far_plane_half_extents = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName22.AsGDExtensionConstStringNamePtr(), 2428350749)
	if globalProjectionMethodBindings.method_get_far_plane_half_extents == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_far_plane_half_extents")
	}
	methodName23 := NewStringNameWithLatin1Chars("inverse")
	defer methodName23.Destroy()
	log.Debug("globalProjectionMethodBindings.method_inverse")
	globalProjectionMethodBindings.method_inverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName23.AsGDExtensionConstStringNamePtr(), 4212530932)
	if globalProjectionMethodBindings.method_inverse == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_inverse")
	}
	methodName24 := NewStringNameWithLatin1Chars("get_pixels_per_meter")
	defer methodName24.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_pixels_per_meter")
	globalProjectionMethodBindings.method_get_pixels_per_meter = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName24.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalProjectionMethodBindings.method_get_pixels_per_meter == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_pixels_per_meter")
	}
	methodName25 := NewStringNameWithLatin1Chars("get_lod_multiplier")
	defer methodName25.Destroy()
	log.Debug("globalProjectionMethodBindings.method_get_lod_multiplier")
	globalProjectionMethodBindings.method_get_lod_multiplier = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PROJECTION, methodName25.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalProjectionMethodBindings.method_get_lod_multiplier == nil {
		missingMethods = append(missingMethods, "globalProjectionMethodBindings.method_get_lod_multiplier")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("x")
	defer memberName0.Destroy()
	log.Debug("globalProjectionMethodBindings.member_x_setter")
	globalProjectionMethodBindings.member_x_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalProjectionMethodBindings.member_x_getter")
	globalProjectionMethodBindings.member_x_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("y")
	defer memberName1.Destroy()
	log.Debug("globalProjectionMethodBindings.member_y_setter")
	globalProjectionMethodBindings.member_y_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalProjectionMethodBindings.member_y_getter")
	globalProjectionMethodBindings.member_y_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("z")
	defer memberName2.Destroy()
	log.Debug("globalProjectionMethodBindings.member_z_setter")
	globalProjectionMethodBindings.member_z_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalProjectionMethodBindings.member_z_getter")
	globalProjectionMethodBindings.member_z_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName2.AsGDExtensionConstStringNamePtr())
	memberName3 := NewStringNameWithLatin1Chars("w")
	defer memberName3.Destroy()
	log.Debug("globalProjectionMethodBindings.member_w_setter")
	globalProjectionMethodBindings.member_w_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalProjectionMethodBindings.member_w_getter")
	globalProjectionMethodBindings.member_w_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_PROJECTION, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalProjectionMethodBindings.indexed_setter")
	globalProjectionMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalProjectionMethodBindings.indexed_getter")
	globalProjectionMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalProjectionMethodBindings.operator: equal Variant")
	globalProjectionMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalProjectionMethodBindings.operator: not_equal Variant")
	globalProjectionMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalProjectionMethodBindings.operator: not ")
	globalProjectionMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalProjectionMethodBindings.operator: multiply Vector4")
	globalProjectionMethodBindings.operator_multiply_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalProjectionMethodBindings.operator: equal Projection")
	globalProjectionMethodBindings.operator_equal_Projection = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalProjectionMethodBindings.operator: not_equal Projection")
	globalProjectionMethodBindings.operator_not_equal_Projection = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalProjectionMethodBindings.operator: multiply Projection")
	globalProjectionMethodBindings.operator_multiply_Projection = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalProjectionMethodBindings.operator: in Dictionary")
	globalProjectionMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalProjectionMethodBindings.operator: in Array")
	globalProjectionMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PROJECTION, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("projectionInitBindings end")
}

type colorMethodBindings struct {
	constructor_0                GDExtensionPtrConstructor
	constructor_1                GDExtensionPtrConstructor
	constructor_2                GDExtensionPtrConstructor
	constructor_3                GDExtensionPtrConstructor
	constructor_4                GDExtensionPtrConstructor
	constructor_5                GDExtensionPtrConstructor
	constructor_6                GDExtensionPtrConstructor
	method_to_argb32             GDExtensionPtrBuiltInMethod
	method_to_abgr32             GDExtensionPtrBuiltInMethod
	method_to_rgba32             GDExtensionPtrBuiltInMethod
	method_to_argb64             GDExtensionPtrBuiltInMethod
	method_to_abgr64             GDExtensionPtrBuiltInMethod
	method_to_rgba64             GDExtensionPtrBuiltInMethod
	method_to_html               GDExtensionPtrBuiltInMethod
	method_clamp                 GDExtensionPtrBuiltInMethod
	method_inverted              GDExtensionPtrBuiltInMethod
	method_lerp                  GDExtensionPtrBuiltInMethod
	method_lightened             GDExtensionPtrBuiltInMethod
	method_darkened              GDExtensionPtrBuiltInMethod
	method_blend                 GDExtensionPtrBuiltInMethod
	method_get_luminance         GDExtensionPtrBuiltInMethod
	method_srgb_to_linear        GDExtensionPtrBuiltInMethod
	method_linear_to_srgb        GDExtensionPtrBuiltInMethod
	method_is_equal_approx       GDExtensionPtrBuiltInMethod
	method_hex                   GDExtensionPtrBuiltInMethod
	method_hex64                 GDExtensionPtrBuiltInMethod
	method_html                  GDExtensionPtrBuiltInMethod
	method_html_is_valid         GDExtensionPtrBuiltInMethod
	method_from_string           GDExtensionPtrBuiltInMethod
	method_from_hsv              GDExtensionPtrBuiltInMethod
	method_from_ok_hsl           GDExtensionPtrBuiltInMethod
	method_from_rgbe9995         GDExtensionPtrBuiltInMethod
	member_r_setter              GDExtensionPtrSetter
	member_r_getter              GDExtensionPtrGetter
	member_g_setter              GDExtensionPtrSetter
	member_g_getter              GDExtensionPtrGetter
	member_b_setter              GDExtensionPtrSetter
	member_b_getter              GDExtensionPtrGetter
	member_a_setter              GDExtensionPtrSetter
	member_a_getter              GDExtensionPtrGetter
	member_r8_setter             GDExtensionPtrSetter
	member_r8_getter             GDExtensionPtrGetter
	member_g8_setter             GDExtensionPtrSetter
	member_g8_getter             GDExtensionPtrGetter
	member_b8_setter             GDExtensionPtrSetter
	member_b8_getter             GDExtensionPtrGetter
	member_a8_setter             GDExtensionPtrSetter
	member_a8_getter             GDExtensionPtrGetter
	member_h_setter              GDExtensionPtrSetter
	member_h_getter              GDExtensionPtrGetter
	member_s_setter              GDExtensionPtrSetter
	member_s_getter              GDExtensionPtrGetter
	member_v_setter              GDExtensionPtrSetter
	member_v_getter              GDExtensionPtrGetter
	indexed_setter               GDExtensionPtrIndexedSetter
	indexed_getter               GDExtensionPtrIndexedGetter
	operator_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant   GDExtensionPtrOperatorEvaluator
	operator_negate              GDExtensionPtrOperatorEvaluator
	operator_positive            GDExtensionPtrOperatorEvaluator
	operator_not                 GDExtensionPtrOperatorEvaluator
	operator_multiply_int        GDExtensionPtrOperatorEvaluator
	operator_divide_int          GDExtensionPtrOperatorEvaluator
	operator_multiply_float      GDExtensionPtrOperatorEvaluator
	operator_divide_float        GDExtensionPtrOperatorEvaluator
	operator_equal_Color         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Color     GDExtensionPtrOperatorEvaluator
	operator_add_Color           GDExtensionPtrOperatorEvaluator
	operator_subtract_Color      GDExtensionPtrOperatorEvaluator
	operator_multiply_Color      GDExtensionPtrOperatorEvaluator
	operator_divide_Color        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary       GDExtensionPtrOperatorEvaluator
	operator_in_Array            GDExtensionPtrOperatorEvaluator
	operator_in_PackedColorArray GDExtensionPtrOperatorEvaluator
}

var globalColorMethodBindings colorMethodBindings

func colorInitConstructorBindings() {
	log.Debug("colorInitConstructorBindings called")

	log.Debug("globalColorMethodBindings.constructor_0")
	globalColorMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 0)
	log.Debug("globalColorMethodBindings.constructor_1")
	globalColorMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 1)
	log.Debug("globalColorMethodBindings.constructor_2")
	globalColorMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 2)
	log.Debug("globalColorMethodBindings.constructor_3")
	globalColorMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 3)
	log.Debug("globalColorMethodBindings.constructor_4")
	globalColorMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 4)
	log.Debug("globalColorMethodBindings.constructor_5")
	globalColorMethodBindings.constructor_5 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 5)
	log.Debug("globalColorMethodBindings.constructor_6")
	globalColorMethodBindings.constructor_6 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_COLOR, 6)
}

func colorInitMethodBindings() {
	log.Debug("colorInitMethodBindings called")

	missingMethods := make([]string, 0, 25)

	methodName0 := NewStringNameWithLatin1Chars("to_argb32")
	defer methodName0.Destroy()
	log.Debug("globalColorMethodBindings.method_to_argb32")
	globalColorMethodBindings.method_to_argb32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalColorMethodBindings.method_to_argb32 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_argb32")
	}
	methodName1 := NewStringNameWithLatin1Chars("to_abgr32")
	defer methodName1.Destroy()
	log.Debug("globalColorMethodBindings.method_to_abgr32")
	globalColorMethodBindings.method_to_abgr32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalColorMethodBindings.method_to_abgr32 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_abgr32")
	}
	methodName2 := NewStringNameWithLatin1Chars("to_rgba32")
	defer methodName2.Destroy()
	log.Debug("globalColorMethodBindings.method_to_rgba32")
	globalColorMethodBindings.method_to_rgba32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName2.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalColorMethodBindings.method_to_rgba32 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_rgba32")
	}
	methodName3 := NewStringNameWithLatin1Chars("to_argb64")
	defer methodName3.Destroy()
	log.Debug("globalColorMethodBindings.method_to_argb64")
	globalColorMethodBindings.method_to_argb64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName3.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalColorMethodBindings.method_to_argb64 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_argb64")
	}
	methodName4 := NewStringNameWithLatin1Chars("to_abgr64")
	defer methodName4.Destroy()
	log.Debug("globalColorMethodBindings.method_to_abgr64")
	globalColorMethodBindings.method_to_abgr64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName4.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalColorMethodBindings.method_to_abgr64 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_abgr64")
	}
	methodName5 := NewStringNameWithLatin1Chars("to_rgba64")
	defer methodName5.Destroy()
	log.Debug("globalColorMethodBindings.method_to_rgba64")
	globalColorMethodBindings.method_to_rgba64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName5.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalColorMethodBindings.method_to_rgba64 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_rgba64")
	}
	methodName6 := NewStringNameWithLatin1Chars("to_html")
	defer methodName6.Destroy()
	log.Debug("globalColorMethodBindings.method_to_html")
	globalColorMethodBindings.method_to_html = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName6.AsGDExtensionConstStringNamePtr(), 3429816538)
	if globalColorMethodBindings.method_to_html == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_to_html")
	}
	methodName7 := NewStringNameWithLatin1Chars("clamp")
	defer methodName7.Destroy()
	log.Debug("globalColorMethodBindings.method_clamp")
	globalColorMethodBindings.method_clamp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName7.AsGDExtensionConstStringNamePtr(), 105651410)
	if globalColorMethodBindings.method_clamp == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_clamp")
	}
	methodName8 := NewStringNameWithLatin1Chars("inverted")
	defer methodName8.Destroy()
	log.Debug("globalColorMethodBindings.method_inverted")
	globalColorMethodBindings.method_inverted = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName8.AsGDExtensionConstStringNamePtr(), 3334027602)
	if globalColorMethodBindings.method_inverted == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_inverted")
	}
	methodName9 := NewStringNameWithLatin1Chars("lerp")
	defer methodName9.Destroy()
	log.Debug("globalColorMethodBindings.method_lerp")
	globalColorMethodBindings.method_lerp = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName9.AsGDExtensionConstStringNamePtr(), 402949615)
	if globalColorMethodBindings.method_lerp == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_lerp")
	}
	methodName10 := NewStringNameWithLatin1Chars("lightened")
	defer methodName10.Destroy()
	log.Debug("globalColorMethodBindings.method_lightened")
	globalColorMethodBindings.method_lightened = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName10.AsGDExtensionConstStringNamePtr(), 1466039168)
	if globalColorMethodBindings.method_lightened == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_lightened")
	}
	methodName11 := NewStringNameWithLatin1Chars("darkened")
	defer methodName11.Destroy()
	log.Debug("globalColorMethodBindings.method_darkened")
	globalColorMethodBindings.method_darkened = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName11.AsGDExtensionConstStringNamePtr(), 1466039168)
	if globalColorMethodBindings.method_darkened == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_darkened")
	}
	methodName12 := NewStringNameWithLatin1Chars("blend")
	defer methodName12.Destroy()
	log.Debug("globalColorMethodBindings.method_blend")
	globalColorMethodBindings.method_blend = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName12.AsGDExtensionConstStringNamePtr(), 3803690977)
	if globalColorMethodBindings.method_blend == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_blend")
	}
	methodName13 := NewStringNameWithLatin1Chars("get_luminance")
	defer methodName13.Destroy()
	log.Debug("globalColorMethodBindings.method_get_luminance")
	globalColorMethodBindings.method_get_luminance = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName13.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalColorMethodBindings.method_get_luminance == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_get_luminance")
	}
	methodName14 := NewStringNameWithLatin1Chars("srgb_to_linear")
	defer methodName14.Destroy()
	log.Debug("globalColorMethodBindings.method_srgb_to_linear")
	globalColorMethodBindings.method_srgb_to_linear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName14.AsGDExtensionConstStringNamePtr(), 3334027602)
	if globalColorMethodBindings.method_srgb_to_linear == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_srgb_to_linear")
	}
	methodName15 := NewStringNameWithLatin1Chars("linear_to_srgb")
	defer methodName15.Destroy()
	log.Debug("globalColorMethodBindings.method_linear_to_srgb")
	globalColorMethodBindings.method_linear_to_srgb = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName15.AsGDExtensionConstStringNamePtr(), 3334027602)
	if globalColorMethodBindings.method_linear_to_srgb == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_linear_to_srgb")
	}
	methodName16 := NewStringNameWithLatin1Chars("is_equal_approx")
	defer methodName16.Destroy()
	log.Debug("globalColorMethodBindings.method_is_equal_approx")
	globalColorMethodBindings.method_is_equal_approx = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName16.AsGDExtensionConstStringNamePtr(), 3167426256)
	if globalColorMethodBindings.method_is_equal_approx == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_is_equal_approx")
	}
	methodName17 := NewStringNameWithLatin1Chars("hex")
	defer methodName17.Destroy()
	log.Debug("globalColorMethodBindings.method_hex")
	globalColorMethodBindings.method_hex = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName17.AsGDExtensionConstStringNamePtr(), 351421375)
	if globalColorMethodBindings.method_hex == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_hex")
	}
	methodName18 := NewStringNameWithLatin1Chars("hex64")
	defer methodName18.Destroy()
	log.Debug("globalColorMethodBindings.method_hex64")
	globalColorMethodBindings.method_hex64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName18.AsGDExtensionConstStringNamePtr(), 351421375)
	if globalColorMethodBindings.method_hex64 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_hex64")
	}
	methodName19 := NewStringNameWithLatin1Chars("html")
	defer methodName19.Destroy()
	log.Debug("globalColorMethodBindings.method_html")
	globalColorMethodBindings.method_html = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName19.AsGDExtensionConstStringNamePtr(), 2500054655)
	if globalColorMethodBindings.method_html == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_html")
	}
	methodName20 := NewStringNameWithLatin1Chars("html_is_valid")
	defer methodName20.Destroy()
	log.Debug("globalColorMethodBindings.method_html_is_valid")
	globalColorMethodBindings.method_html_is_valid = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName20.AsGDExtensionConstStringNamePtr(), 2942997125)
	if globalColorMethodBindings.method_html_is_valid == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_html_is_valid")
	}
	methodName21 := NewStringNameWithLatin1Chars("from_string")
	defer methodName21.Destroy()
	log.Debug("globalColorMethodBindings.method_from_string")
	globalColorMethodBindings.method_from_string = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName21.AsGDExtensionConstStringNamePtr(), 3755044230)
	if globalColorMethodBindings.method_from_string == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_from_string")
	}
	methodName22 := NewStringNameWithLatin1Chars("from_hsv")
	defer methodName22.Destroy()
	log.Debug("globalColorMethodBindings.method_from_hsv")
	globalColorMethodBindings.method_from_hsv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName22.AsGDExtensionConstStringNamePtr(), 1573799446)
	if globalColorMethodBindings.method_from_hsv == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_from_hsv")
	}
	methodName23 := NewStringNameWithLatin1Chars("from_ok_hsl")
	defer methodName23.Destroy()
	log.Debug("globalColorMethodBindings.method_from_ok_hsl")
	globalColorMethodBindings.method_from_ok_hsl = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName23.AsGDExtensionConstStringNamePtr(), 1573799446)
	if globalColorMethodBindings.method_from_ok_hsl == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_from_ok_hsl")
	}
	methodName24 := NewStringNameWithLatin1Chars("from_rgbe9995")
	defer methodName24.Destroy()
	log.Debug("globalColorMethodBindings.method_from_rgbe9995")
	globalColorMethodBindings.method_from_rgbe9995 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_COLOR, methodName24.AsGDExtensionConstStringNamePtr(), 351421375)
	if globalColorMethodBindings.method_from_rgbe9995 == nil {
		missingMethods = append(missingMethods, "globalColorMethodBindings.method_from_rgbe9995")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	memberName0 := NewStringNameWithLatin1Chars("r")
	defer memberName0.Destroy()
	log.Debug("globalColorMethodBindings.member_r_setter")
	globalColorMethodBindings.member_r_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName0.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_r_getter")
	globalColorMethodBindings.member_r_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName0.AsGDExtensionConstStringNamePtr())
	memberName1 := NewStringNameWithLatin1Chars("g")
	defer memberName1.Destroy()
	log.Debug("globalColorMethodBindings.member_g_setter")
	globalColorMethodBindings.member_g_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName1.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_g_getter")
	globalColorMethodBindings.member_g_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName1.AsGDExtensionConstStringNamePtr())
	memberName2 := NewStringNameWithLatin1Chars("b")
	defer memberName2.Destroy()
	log.Debug("globalColorMethodBindings.member_b_setter")
	globalColorMethodBindings.member_b_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName2.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_b_getter")
	globalColorMethodBindings.member_b_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName2.AsGDExtensionConstStringNamePtr())
	memberName3 := NewStringNameWithLatin1Chars("a")
	defer memberName3.Destroy()
	log.Debug("globalColorMethodBindings.member_a_setter")
	globalColorMethodBindings.member_a_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName3.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_a_getter")
	globalColorMethodBindings.member_a_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName3.AsGDExtensionConstStringNamePtr())
	memberName4 := NewStringNameWithLatin1Chars("r8")
	defer memberName4.Destroy()
	log.Debug("globalColorMethodBindings.member_r8_setter")
	globalColorMethodBindings.member_r8_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName4.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_r8_getter")
	globalColorMethodBindings.member_r8_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName4.AsGDExtensionConstStringNamePtr())
	memberName5 := NewStringNameWithLatin1Chars("g8")
	defer memberName5.Destroy()
	log.Debug("globalColorMethodBindings.member_g8_setter")
	globalColorMethodBindings.member_g8_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName5.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_g8_getter")
	globalColorMethodBindings.member_g8_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName5.AsGDExtensionConstStringNamePtr())
	memberName6 := NewStringNameWithLatin1Chars("b8")
	defer memberName6.Destroy()
	log.Debug("globalColorMethodBindings.member_b8_setter")
	globalColorMethodBindings.member_b8_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName6.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_b8_getter")
	globalColorMethodBindings.member_b8_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName6.AsGDExtensionConstStringNamePtr())
	memberName7 := NewStringNameWithLatin1Chars("a8")
	defer memberName7.Destroy()
	log.Debug("globalColorMethodBindings.member_a8_setter")
	globalColorMethodBindings.member_a8_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName7.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_a8_getter")
	globalColorMethodBindings.member_a8_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName7.AsGDExtensionConstStringNamePtr())
	memberName8 := NewStringNameWithLatin1Chars("h")
	defer memberName8.Destroy()
	log.Debug("globalColorMethodBindings.member_h_setter")
	globalColorMethodBindings.member_h_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName8.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_h_getter")
	globalColorMethodBindings.member_h_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName8.AsGDExtensionConstStringNamePtr())
	memberName9 := NewStringNameWithLatin1Chars("s")
	defer memberName9.Destroy()
	log.Debug("globalColorMethodBindings.member_s_setter")
	globalColorMethodBindings.member_s_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName9.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_s_getter")
	globalColorMethodBindings.member_s_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName9.AsGDExtensionConstStringNamePtr())
	memberName10 := NewStringNameWithLatin1Chars("v")
	defer memberName10.Destroy()
	log.Debug("globalColorMethodBindings.member_v_setter")
	globalColorMethodBindings.member_v_setter = CallFunc_GDExtensionInterfaceVariantGetPtrSetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName10.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.member_v_getter")
	globalColorMethodBindings.member_v_getter = CallFunc_GDExtensionInterfaceVariantGetPtrGetter(GDEXTENSION_VARIANT_TYPE_COLOR, memberName10.AsGDExtensionConstStringNamePtr())
	log.Debug("globalColorMethodBindings.indexed_setter")
	globalColorMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.indexed_getter")
	globalColorMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: equal Variant")
	globalColorMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalColorMethodBindings.operator: not_equal Variant")
	globalColorMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalColorMethodBindings.operator: negate ")
	globalColorMethodBindings.operator_negate = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NEGATE, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalColorMethodBindings.operator: positive ")
	globalColorMethodBindings.operator_positive = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_POSITIVE, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalColorMethodBindings.operator: not ")
	globalColorMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalColorMethodBindings.operator: multiply int")
	globalColorMethodBindings.operator_multiply_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalColorMethodBindings.operator: divide int")
	globalColorMethodBindings.operator_divide_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalColorMethodBindings.operator: multiply float")
	globalColorMethodBindings.operator_multiply_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalColorMethodBindings.operator: divide float")
	globalColorMethodBindings.operator_divide_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalColorMethodBindings.operator: equal Color")
	globalColorMethodBindings.operator_equal_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: not_equal Color")
	globalColorMethodBindings.operator_not_equal_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: add Color")
	globalColorMethodBindings.operator_add_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: subtract Color")
	globalColorMethodBindings.operator_subtract_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_SUBTRACT, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: multiply Color")
	globalColorMethodBindings.operator_multiply_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: divide Color")
	globalColorMethodBindings.operator_divide_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_DIVIDE, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalColorMethodBindings.operator: in Dictionary")
	globalColorMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalColorMethodBindings.operator: in Array")
	globalColorMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalColorMethodBindings.operator: in PackedColorArray")
	globalColorMethodBindings.operator_in_PackedColorArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_COLOR, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("colorInitBindings end")
}

type stringNameMethodBindings struct {
	constructor_0                      GDExtensionPtrConstructor
	constructor_1                      GDExtensionPtrConstructor
	constructor_2                      GDExtensionPtrConstructor
	destructor                         GDExtensionPtrDestructor
	method_casecmp_to                  GDExtensionPtrBuiltInMethod
	method_nocasecmp_to                GDExtensionPtrBuiltInMethod
	method_naturalcasecmp_to           GDExtensionPtrBuiltInMethod
	method_naturalnocasecmp_to         GDExtensionPtrBuiltInMethod
	method_filecasecmp_to              GDExtensionPtrBuiltInMethod
	method_filenocasecmp_to            GDExtensionPtrBuiltInMethod
	method_length                      GDExtensionPtrBuiltInMethod
	method_substr                      GDExtensionPtrBuiltInMethod
	method_get_slice                   GDExtensionPtrBuiltInMethod
	method_get_slicec                  GDExtensionPtrBuiltInMethod
	method_get_slice_count             GDExtensionPtrBuiltInMethod
	method_find                        GDExtensionPtrBuiltInMethod
	method_findn                       GDExtensionPtrBuiltInMethod
	method_count                       GDExtensionPtrBuiltInMethod
	method_countn                      GDExtensionPtrBuiltInMethod
	method_rfind                       GDExtensionPtrBuiltInMethod
	method_rfindn                      GDExtensionPtrBuiltInMethod
	method_match                       GDExtensionPtrBuiltInMethod
	method_matchn                      GDExtensionPtrBuiltInMethod
	method_begins_with                 GDExtensionPtrBuiltInMethod
	method_ends_with                   GDExtensionPtrBuiltInMethod
	method_is_subsequence_of           GDExtensionPtrBuiltInMethod
	method_is_subsequence_ofn          GDExtensionPtrBuiltInMethod
	method_bigrams                     GDExtensionPtrBuiltInMethod
	method_similarity                  GDExtensionPtrBuiltInMethod
	method_format                      GDExtensionPtrBuiltInMethod
	method_replace                     GDExtensionPtrBuiltInMethod
	method_replacen                    GDExtensionPtrBuiltInMethod
	method_repeat                      GDExtensionPtrBuiltInMethod
	method_reverse                     GDExtensionPtrBuiltInMethod
	method_insert                      GDExtensionPtrBuiltInMethod
	method_erase                       GDExtensionPtrBuiltInMethod
	method_capitalize                  GDExtensionPtrBuiltInMethod
	method_to_camel_case               GDExtensionPtrBuiltInMethod
	method_to_pascal_case              GDExtensionPtrBuiltInMethod
	method_to_snake_case               GDExtensionPtrBuiltInMethod
	method_split                       GDExtensionPtrBuiltInMethod
	method_rsplit                      GDExtensionPtrBuiltInMethod
	method_split_floats                GDExtensionPtrBuiltInMethod
	method_join                        GDExtensionPtrBuiltInMethod
	method_to_upper                    GDExtensionPtrBuiltInMethod
	method_to_lower                    GDExtensionPtrBuiltInMethod
	method_left                        GDExtensionPtrBuiltInMethod
	method_right                       GDExtensionPtrBuiltInMethod
	method_strip_edges                 GDExtensionPtrBuiltInMethod
	method_strip_escapes               GDExtensionPtrBuiltInMethod
	method_lstrip                      GDExtensionPtrBuiltInMethod
	method_rstrip                      GDExtensionPtrBuiltInMethod
	method_get_extension               GDExtensionPtrBuiltInMethod
	method_get_basename                GDExtensionPtrBuiltInMethod
	method_path_join                   GDExtensionPtrBuiltInMethod
	method_unicode_at                  GDExtensionPtrBuiltInMethod
	method_indent                      GDExtensionPtrBuiltInMethod
	method_dedent                      GDExtensionPtrBuiltInMethod
	method_md5_text                    GDExtensionPtrBuiltInMethod
	method_sha1_text                   GDExtensionPtrBuiltInMethod
	method_sha256_text                 GDExtensionPtrBuiltInMethod
	method_md5_buffer                  GDExtensionPtrBuiltInMethod
	method_sha1_buffer                 GDExtensionPtrBuiltInMethod
	method_sha256_buffer               GDExtensionPtrBuiltInMethod
	method_is_empty                    GDExtensionPtrBuiltInMethod
	method_contains                    GDExtensionPtrBuiltInMethod
	method_containsn                   GDExtensionPtrBuiltInMethod
	method_is_absolute_path            GDExtensionPtrBuiltInMethod
	method_is_relative_path            GDExtensionPtrBuiltInMethod
	method_simplify_path               GDExtensionPtrBuiltInMethod
	method_get_base_dir                GDExtensionPtrBuiltInMethod
	method_get_file                    GDExtensionPtrBuiltInMethod
	method_xml_escape                  GDExtensionPtrBuiltInMethod
	method_xml_unescape                GDExtensionPtrBuiltInMethod
	method_uri_encode                  GDExtensionPtrBuiltInMethod
	method_uri_decode                  GDExtensionPtrBuiltInMethod
	method_c_escape                    GDExtensionPtrBuiltInMethod
	method_c_unescape                  GDExtensionPtrBuiltInMethod
	method_json_escape                 GDExtensionPtrBuiltInMethod
	method_validate_node_name          GDExtensionPtrBuiltInMethod
	method_validate_filename           GDExtensionPtrBuiltInMethod
	method_is_valid_identifier         GDExtensionPtrBuiltInMethod
	method_is_valid_int                GDExtensionPtrBuiltInMethod
	method_is_valid_float              GDExtensionPtrBuiltInMethod
	method_is_valid_hex_number         GDExtensionPtrBuiltInMethod
	method_is_valid_html_color         GDExtensionPtrBuiltInMethod
	method_is_valid_ip_address         GDExtensionPtrBuiltInMethod
	method_is_valid_filename           GDExtensionPtrBuiltInMethod
	method_to_int                      GDExtensionPtrBuiltInMethod
	method_to_float                    GDExtensionPtrBuiltInMethod
	method_hex_to_int                  GDExtensionPtrBuiltInMethod
	method_bin_to_int                  GDExtensionPtrBuiltInMethod
	method_lpad                        GDExtensionPtrBuiltInMethod
	method_rpad                        GDExtensionPtrBuiltInMethod
	method_pad_decimals                GDExtensionPtrBuiltInMethod
	method_pad_zeros                   GDExtensionPtrBuiltInMethod
	method_trim_prefix                 GDExtensionPtrBuiltInMethod
	method_trim_suffix                 GDExtensionPtrBuiltInMethod
	method_to_ascii_buffer             GDExtensionPtrBuiltInMethod
	method_to_utf8_buffer              GDExtensionPtrBuiltInMethod
	method_to_utf16_buffer             GDExtensionPtrBuiltInMethod
	method_to_utf32_buffer             GDExtensionPtrBuiltInMethod
	method_hex_decode                  GDExtensionPtrBuiltInMethod
	method_to_wchar_buffer             GDExtensionPtrBuiltInMethod
	method_hash                        GDExtensionPtrBuiltInMethod
	operator_equal_Variant             GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant         GDExtensionPtrOperatorEvaluator
	operator_module_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                       GDExtensionPtrOperatorEvaluator
	operator_module_bool               GDExtensionPtrOperatorEvaluator
	operator_module_int                GDExtensionPtrOperatorEvaluator
	operator_module_float              GDExtensionPtrOperatorEvaluator
	operator_equal_String              GDExtensionPtrOperatorEvaluator
	operator_not_equal_String          GDExtensionPtrOperatorEvaluator
	operator_add_String                GDExtensionPtrOperatorEvaluator
	operator_module_String             GDExtensionPtrOperatorEvaluator
	operator_in_String                 GDExtensionPtrOperatorEvaluator
	operator_module_Vector2            GDExtensionPtrOperatorEvaluator
	operator_module_Vector2i           GDExtensionPtrOperatorEvaluator
	operator_module_Rect2              GDExtensionPtrOperatorEvaluator
	operator_module_Rect2i             GDExtensionPtrOperatorEvaluator
	operator_module_Vector3            GDExtensionPtrOperatorEvaluator
	operator_module_Vector3i           GDExtensionPtrOperatorEvaluator
	operator_module_Transform2D        GDExtensionPtrOperatorEvaluator
	operator_module_Vector4            GDExtensionPtrOperatorEvaluator
	operator_module_Vector4i           GDExtensionPtrOperatorEvaluator
	operator_module_Plane              GDExtensionPtrOperatorEvaluator
	operator_module_Quaternion         GDExtensionPtrOperatorEvaluator
	operator_module_AABB               GDExtensionPtrOperatorEvaluator
	operator_module_Basis              GDExtensionPtrOperatorEvaluator
	operator_module_Transform3D        GDExtensionPtrOperatorEvaluator
	operator_module_Projection         GDExtensionPtrOperatorEvaluator
	operator_module_Color              GDExtensionPtrOperatorEvaluator
	operator_equal_StringName          GDExtensionPtrOperatorEvaluator
	operator_not_equal_StringName      GDExtensionPtrOperatorEvaluator
	operator_less_StringName           GDExtensionPtrOperatorEvaluator
	operator_less_equal_StringName     GDExtensionPtrOperatorEvaluator
	operator_greater_StringName        GDExtensionPtrOperatorEvaluator
	operator_greater_equal_StringName  GDExtensionPtrOperatorEvaluator
	operator_add_StringName            GDExtensionPtrOperatorEvaluator
	operator_module_StringName         GDExtensionPtrOperatorEvaluator
	operator_in_StringName             GDExtensionPtrOperatorEvaluator
	operator_module_NodePath           GDExtensionPtrOperatorEvaluator
	operator_module_Object             GDExtensionPtrOperatorEvaluator
	operator_in_Object                 GDExtensionPtrOperatorEvaluator
	operator_module_Callable           GDExtensionPtrOperatorEvaluator
	operator_module_Signal             GDExtensionPtrOperatorEvaluator
	operator_module_Dictionary         GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary             GDExtensionPtrOperatorEvaluator
	operator_module_Array              GDExtensionPtrOperatorEvaluator
	operator_in_Array                  GDExtensionPtrOperatorEvaluator
	operator_module_PackedByteArray    GDExtensionPtrOperatorEvaluator
	operator_module_PackedInt32Array   GDExtensionPtrOperatorEvaluator
	operator_module_PackedInt64Array   GDExtensionPtrOperatorEvaluator
	operator_module_PackedFloat32Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedFloat64Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedStringArray  GDExtensionPtrOperatorEvaluator
	operator_in_PackedStringArray      GDExtensionPtrOperatorEvaluator
	operator_module_PackedVector2Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedVector3Array GDExtensionPtrOperatorEvaluator
	operator_module_PackedColorArray   GDExtensionPtrOperatorEvaluator
	operator_module_PackedVector4Array GDExtensionPtrOperatorEvaluator
}

var globalStringNameMethodBindings stringNameMethodBindings

func stringNameInitConstructorBindings() {
	log.Debug("stringNameInitConstructorBindings called")

	log.Debug("globalStringNameMethodBindings.constructor_0")
	globalStringNameMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING_NAME, 0)
	log.Debug("globalStringNameMethodBindings.constructor_1")
	globalStringNameMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING_NAME, 1)
	log.Debug("globalStringNameMethodBindings.constructor_2")
	globalStringNameMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_STRING_NAME, 2)
	log.Debug("globalStringNameMethodBindings.destructor")
	globalStringNameMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_STRING_NAME)
}

func stringNameInitMethodBindings() {
	log.Debug("stringNameInitMethodBindings called")

	missingMethods := make([]string, 0, 101)

	methodName0 := NewStringNameWithLatin1Chars("casecmp_to")
	defer methodName0.Destroy()
	log.Debug("globalStringNameMethodBindings.method_casecmp_to")
	globalStringNameMethodBindings.method_casecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName0.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_casecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_casecmp_to")
	}
	methodName1 := NewStringNameWithLatin1Chars("nocasecmp_to")
	defer methodName1.Destroy()
	log.Debug("globalStringNameMethodBindings.method_nocasecmp_to")
	globalStringNameMethodBindings.method_nocasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName1.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_nocasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_nocasecmp_to")
	}
	methodName2 := NewStringNameWithLatin1Chars("naturalcasecmp_to")
	defer methodName2.Destroy()
	log.Debug("globalStringNameMethodBindings.method_naturalcasecmp_to")
	globalStringNameMethodBindings.method_naturalcasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName2.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_naturalcasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_naturalcasecmp_to")
	}
	methodName3 := NewStringNameWithLatin1Chars("naturalnocasecmp_to")
	defer methodName3.Destroy()
	log.Debug("globalStringNameMethodBindings.method_naturalnocasecmp_to")
	globalStringNameMethodBindings.method_naturalnocasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName3.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_naturalnocasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_naturalnocasecmp_to")
	}
	methodName4 := NewStringNameWithLatin1Chars("filecasecmp_to")
	defer methodName4.Destroy()
	log.Debug("globalStringNameMethodBindings.method_filecasecmp_to")
	globalStringNameMethodBindings.method_filecasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName4.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_filecasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_filecasecmp_to")
	}
	methodName5 := NewStringNameWithLatin1Chars("filenocasecmp_to")
	defer methodName5.Destroy()
	log.Debug("globalStringNameMethodBindings.method_filenocasecmp_to")
	globalStringNameMethodBindings.method_filenocasecmp_to = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName5.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_filenocasecmp_to == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_filenocasecmp_to")
	}
	methodName6 := NewStringNameWithLatin1Chars("length")
	defer methodName6.Destroy()
	log.Debug("globalStringNameMethodBindings.method_length")
	globalStringNameMethodBindings.method_length = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName6.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringNameMethodBindings.method_length == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_length")
	}
	methodName7 := NewStringNameWithLatin1Chars("substr")
	defer methodName7.Destroy()
	log.Debug("globalStringNameMethodBindings.method_substr")
	globalStringNameMethodBindings.method_substr = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName7.AsGDExtensionConstStringNamePtr(), 787537301)
	if globalStringNameMethodBindings.method_substr == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_substr")
	}
	methodName8 := NewStringNameWithLatin1Chars("get_slice")
	defer methodName8.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_slice")
	globalStringNameMethodBindings.method_get_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName8.AsGDExtensionConstStringNamePtr(), 3535100402)
	if globalStringNameMethodBindings.method_get_slice == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_slice")
	}
	methodName9 := NewStringNameWithLatin1Chars("get_slicec")
	defer methodName9.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_slicec")
	globalStringNameMethodBindings.method_get_slicec = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName9.AsGDExtensionConstStringNamePtr(), 787537301)
	if globalStringNameMethodBindings.method_get_slicec == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_slicec")
	}
	methodName10 := NewStringNameWithLatin1Chars("get_slice_count")
	defer methodName10.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_slice_count")
	globalStringNameMethodBindings.method_get_slice_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName10.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalStringNameMethodBindings.method_get_slice_count == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_slice_count")
	}
	methodName11 := NewStringNameWithLatin1Chars("find")
	defer methodName11.Destroy()
	log.Debug("globalStringNameMethodBindings.method_find")
	globalStringNameMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName11.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringNameMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_find")
	}
	methodName12 := NewStringNameWithLatin1Chars("findn")
	defer methodName12.Destroy()
	log.Debug("globalStringNameMethodBindings.method_findn")
	globalStringNameMethodBindings.method_findn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName12.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringNameMethodBindings.method_findn == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_findn")
	}
	methodName13 := NewStringNameWithLatin1Chars("count")
	defer methodName13.Destroy()
	log.Debug("globalStringNameMethodBindings.method_count")
	globalStringNameMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName13.AsGDExtensionConstStringNamePtr(), 2343087891)
	if globalStringNameMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_count")
	}
	methodName14 := NewStringNameWithLatin1Chars("countn")
	defer methodName14.Destroy()
	log.Debug("globalStringNameMethodBindings.method_countn")
	globalStringNameMethodBindings.method_countn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName14.AsGDExtensionConstStringNamePtr(), 2343087891)
	if globalStringNameMethodBindings.method_countn == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_countn")
	}
	methodName15 := NewStringNameWithLatin1Chars("rfind")
	defer methodName15.Destroy()
	log.Debug("globalStringNameMethodBindings.method_rfind")
	globalStringNameMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName15.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringNameMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_rfind")
	}
	methodName16 := NewStringNameWithLatin1Chars("rfindn")
	defer methodName16.Destroy()
	log.Debug("globalStringNameMethodBindings.method_rfindn")
	globalStringNameMethodBindings.method_rfindn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName16.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalStringNameMethodBindings.method_rfindn == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_rfindn")
	}
	methodName17 := NewStringNameWithLatin1Chars("match")
	defer methodName17.Destroy()
	log.Debug("globalStringNameMethodBindings.method_match")
	globalStringNameMethodBindings.method_match = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName17.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_match == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_match")
	}
	methodName18 := NewStringNameWithLatin1Chars("matchn")
	defer methodName18.Destroy()
	log.Debug("globalStringNameMethodBindings.method_matchn")
	globalStringNameMethodBindings.method_matchn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName18.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_matchn == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_matchn")
	}
	methodName19 := NewStringNameWithLatin1Chars("begins_with")
	defer methodName19.Destroy()
	log.Debug("globalStringNameMethodBindings.method_begins_with")
	globalStringNameMethodBindings.method_begins_with = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName19.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_begins_with == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_begins_with")
	}
	methodName20 := NewStringNameWithLatin1Chars("ends_with")
	defer methodName20.Destroy()
	log.Debug("globalStringNameMethodBindings.method_ends_with")
	globalStringNameMethodBindings.method_ends_with = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName20.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_ends_with == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_ends_with")
	}
	methodName21 := NewStringNameWithLatin1Chars("is_subsequence_of")
	defer methodName21.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_subsequence_of")
	globalStringNameMethodBindings.method_is_subsequence_of = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName21.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_is_subsequence_of == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_subsequence_of")
	}
	methodName22 := NewStringNameWithLatin1Chars("is_subsequence_ofn")
	defer methodName22.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_subsequence_ofn")
	globalStringNameMethodBindings.method_is_subsequence_ofn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName22.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_is_subsequence_ofn == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_subsequence_ofn")
	}
	methodName23 := NewStringNameWithLatin1Chars("bigrams")
	defer methodName23.Destroy()
	log.Debug("globalStringNameMethodBindings.method_bigrams")
	globalStringNameMethodBindings.method_bigrams = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName23.AsGDExtensionConstStringNamePtr(), 747180633)
	if globalStringNameMethodBindings.method_bigrams == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_bigrams")
	}
	methodName24 := NewStringNameWithLatin1Chars("similarity")
	defer methodName24.Destroy()
	log.Debug("globalStringNameMethodBindings.method_similarity")
	globalStringNameMethodBindings.method_similarity = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName24.AsGDExtensionConstStringNamePtr(), 2697460964)
	if globalStringNameMethodBindings.method_similarity == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_similarity")
	}
	methodName25 := NewStringNameWithLatin1Chars("format")
	defer methodName25.Destroy()
	log.Debug("globalStringNameMethodBindings.method_format")
	globalStringNameMethodBindings.method_format = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName25.AsGDExtensionConstStringNamePtr(), 3212199029)
	if globalStringNameMethodBindings.method_format == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_format")
	}
	methodName26 := NewStringNameWithLatin1Chars("replace")
	defer methodName26.Destroy()
	log.Debug("globalStringNameMethodBindings.method_replace")
	globalStringNameMethodBindings.method_replace = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName26.AsGDExtensionConstStringNamePtr(), 1340436205)
	if globalStringNameMethodBindings.method_replace == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_replace")
	}
	methodName27 := NewStringNameWithLatin1Chars("replacen")
	defer methodName27.Destroy()
	log.Debug("globalStringNameMethodBindings.method_replacen")
	globalStringNameMethodBindings.method_replacen = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName27.AsGDExtensionConstStringNamePtr(), 1340436205)
	if globalStringNameMethodBindings.method_replacen == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_replacen")
	}
	methodName28 := NewStringNameWithLatin1Chars("repeat")
	defer methodName28.Destroy()
	log.Debug("globalStringNameMethodBindings.method_repeat")
	globalStringNameMethodBindings.method_repeat = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName28.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringNameMethodBindings.method_repeat == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_repeat")
	}
	methodName29 := NewStringNameWithLatin1Chars("reverse")
	defer methodName29.Destroy()
	log.Debug("globalStringNameMethodBindings.method_reverse")
	globalStringNameMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName29.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_reverse")
	}
	methodName30 := NewStringNameWithLatin1Chars("insert")
	defer methodName30.Destroy()
	log.Debug("globalStringNameMethodBindings.method_insert")
	globalStringNameMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName30.AsGDExtensionConstStringNamePtr(), 248737229)
	if globalStringNameMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_insert")
	}
	methodName31 := NewStringNameWithLatin1Chars("erase")
	defer methodName31.Destroy()
	log.Debug("globalStringNameMethodBindings.method_erase")
	globalStringNameMethodBindings.method_erase = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName31.AsGDExtensionConstStringNamePtr(), 787537301)
	if globalStringNameMethodBindings.method_erase == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_erase")
	}
	methodName32 := NewStringNameWithLatin1Chars("capitalize")
	defer methodName32.Destroy()
	log.Debug("globalStringNameMethodBindings.method_capitalize")
	globalStringNameMethodBindings.method_capitalize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName32.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_capitalize == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_capitalize")
	}
	methodName33 := NewStringNameWithLatin1Chars("to_camel_case")
	defer methodName33.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_camel_case")
	globalStringNameMethodBindings.method_to_camel_case = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName33.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_to_camel_case == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_camel_case")
	}
	methodName34 := NewStringNameWithLatin1Chars("to_pascal_case")
	defer methodName34.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_pascal_case")
	globalStringNameMethodBindings.method_to_pascal_case = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName34.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_to_pascal_case == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_pascal_case")
	}
	methodName35 := NewStringNameWithLatin1Chars("to_snake_case")
	defer methodName35.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_snake_case")
	globalStringNameMethodBindings.method_to_snake_case = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName35.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_to_snake_case == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_snake_case")
	}
	methodName36 := NewStringNameWithLatin1Chars("split")
	defer methodName36.Destroy()
	log.Debug("globalStringNameMethodBindings.method_split")
	globalStringNameMethodBindings.method_split = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName36.AsGDExtensionConstStringNamePtr(), 1252735785)
	if globalStringNameMethodBindings.method_split == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_split")
	}
	methodName37 := NewStringNameWithLatin1Chars("rsplit")
	defer methodName37.Destroy()
	log.Debug("globalStringNameMethodBindings.method_rsplit")
	globalStringNameMethodBindings.method_rsplit = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName37.AsGDExtensionConstStringNamePtr(), 1252735785)
	if globalStringNameMethodBindings.method_rsplit == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_rsplit")
	}
	methodName38 := NewStringNameWithLatin1Chars("split_floats")
	defer methodName38.Destroy()
	log.Debug("globalStringNameMethodBindings.method_split_floats")
	globalStringNameMethodBindings.method_split_floats = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName38.AsGDExtensionConstStringNamePtr(), 2092079095)
	if globalStringNameMethodBindings.method_split_floats == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_split_floats")
	}
	methodName39 := NewStringNameWithLatin1Chars("join")
	defer methodName39.Destroy()
	log.Debug("globalStringNameMethodBindings.method_join")
	globalStringNameMethodBindings.method_join = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName39.AsGDExtensionConstStringNamePtr(), 3595973238)
	if globalStringNameMethodBindings.method_join == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_join")
	}
	methodName40 := NewStringNameWithLatin1Chars("to_upper")
	defer methodName40.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_upper")
	globalStringNameMethodBindings.method_to_upper = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName40.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_to_upper == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_upper")
	}
	methodName41 := NewStringNameWithLatin1Chars("to_lower")
	defer methodName41.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_lower")
	globalStringNameMethodBindings.method_to_lower = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName41.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_to_lower == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_lower")
	}
	methodName42 := NewStringNameWithLatin1Chars("left")
	defer methodName42.Destroy()
	log.Debug("globalStringNameMethodBindings.method_left")
	globalStringNameMethodBindings.method_left = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName42.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringNameMethodBindings.method_left == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_left")
	}
	methodName43 := NewStringNameWithLatin1Chars("right")
	defer methodName43.Destroy()
	log.Debug("globalStringNameMethodBindings.method_right")
	globalStringNameMethodBindings.method_right = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName43.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringNameMethodBindings.method_right == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_right")
	}
	methodName44 := NewStringNameWithLatin1Chars("strip_edges")
	defer methodName44.Destroy()
	log.Debug("globalStringNameMethodBindings.method_strip_edges")
	globalStringNameMethodBindings.method_strip_edges = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName44.AsGDExtensionConstStringNamePtr(), 907855311)
	if globalStringNameMethodBindings.method_strip_edges == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_strip_edges")
	}
	methodName45 := NewStringNameWithLatin1Chars("strip_escapes")
	defer methodName45.Destroy()
	log.Debug("globalStringNameMethodBindings.method_strip_escapes")
	globalStringNameMethodBindings.method_strip_escapes = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName45.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_strip_escapes == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_strip_escapes")
	}
	methodName46 := NewStringNameWithLatin1Chars("lstrip")
	defer methodName46.Destroy()
	log.Debug("globalStringNameMethodBindings.method_lstrip")
	globalStringNameMethodBindings.method_lstrip = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName46.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringNameMethodBindings.method_lstrip == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_lstrip")
	}
	methodName47 := NewStringNameWithLatin1Chars("rstrip")
	defer methodName47.Destroy()
	log.Debug("globalStringNameMethodBindings.method_rstrip")
	globalStringNameMethodBindings.method_rstrip = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName47.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringNameMethodBindings.method_rstrip == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_rstrip")
	}
	methodName48 := NewStringNameWithLatin1Chars("get_extension")
	defer methodName48.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_extension")
	globalStringNameMethodBindings.method_get_extension = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName48.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_get_extension == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_extension")
	}
	methodName49 := NewStringNameWithLatin1Chars("get_basename")
	defer methodName49.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_basename")
	globalStringNameMethodBindings.method_get_basename = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName49.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_get_basename == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_basename")
	}
	methodName50 := NewStringNameWithLatin1Chars("path_join")
	defer methodName50.Destroy()
	log.Debug("globalStringNameMethodBindings.method_path_join")
	globalStringNameMethodBindings.method_path_join = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName50.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringNameMethodBindings.method_path_join == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_path_join")
	}
	methodName51 := NewStringNameWithLatin1Chars("unicode_at")
	defer methodName51.Destroy()
	log.Debug("globalStringNameMethodBindings.method_unicode_at")
	globalStringNameMethodBindings.method_unicode_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName51.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalStringNameMethodBindings.method_unicode_at == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_unicode_at")
	}
	methodName52 := NewStringNameWithLatin1Chars("indent")
	defer methodName52.Destroy()
	log.Debug("globalStringNameMethodBindings.method_indent")
	globalStringNameMethodBindings.method_indent = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName52.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringNameMethodBindings.method_indent == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_indent")
	}
	methodName53 := NewStringNameWithLatin1Chars("dedent")
	defer methodName53.Destroy()
	log.Debug("globalStringNameMethodBindings.method_dedent")
	globalStringNameMethodBindings.method_dedent = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName53.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_dedent == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_dedent")
	}
	methodName54 := NewStringNameWithLatin1Chars("md5_text")
	defer methodName54.Destroy()
	log.Debug("globalStringNameMethodBindings.method_md5_text")
	globalStringNameMethodBindings.method_md5_text = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName54.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_md5_text == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_md5_text")
	}
	methodName55 := NewStringNameWithLatin1Chars("sha1_text")
	defer methodName55.Destroy()
	log.Debug("globalStringNameMethodBindings.method_sha1_text")
	globalStringNameMethodBindings.method_sha1_text = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName55.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_sha1_text == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_sha1_text")
	}
	methodName56 := NewStringNameWithLatin1Chars("sha256_text")
	defer methodName56.Destroy()
	log.Debug("globalStringNameMethodBindings.method_sha256_text")
	globalStringNameMethodBindings.method_sha256_text = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName56.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_sha256_text == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_sha256_text")
	}
	methodName57 := NewStringNameWithLatin1Chars("md5_buffer")
	defer methodName57.Destroy()
	log.Debug("globalStringNameMethodBindings.method_md5_buffer")
	globalStringNameMethodBindings.method_md5_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName57.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_md5_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_md5_buffer")
	}
	methodName58 := NewStringNameWithLatin1Chars("sha1_buffer")
	defer methodName58.Destroy()
	log.Debug("globalStringNameMethodBindings.method_sha1_buffer")
	globalStringNameMethodBindings.method_sha1_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName58.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_sha1_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_sha1_buffer")
	}
	methodName59 := NewStringNameWithLatin1Chars("sha256_buffer")
	defer methodName59.Destroy()
	log.Debug("globalStringNameMethodBindings.method_sha256_buffer")
	globalStringNameMethodBindings.method_sha256_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName59.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_sha256_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_sha256_buffer")
	}
	methodName60 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName60.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_empty")
	globalStringNameMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName60.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_empty")
	}
	methodName61 := NewStringNameWithLatin1Chars("contains")
	defer methodName61.Destroy()
	log.Debug("globalStringNameMethodBindings.method_contains")
	globalStringNameMethodBindings.method_contains = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName61.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_contains == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_contains")
	}
	methodName62 := NewStringNameWithLatin1Chars("containsn")
	defer methodName62.Destroy()
	log.Debug("globalStringNameMethodBindings.method_containsn")
	globalStringNameMethodBindings.method_containsn = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName62.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalStringNameMethodBindings.method_containsn == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_containsn")
	}
	methodName63 := NewStringNameWithLatin1Chars("is_absolute_path")
	defer methodName63.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_absolute_path")
	globalStringNameMethodBindings.method_is_absolute_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName63.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_absolute_path == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_absolute_path")
	}
	methodName64 := NewStringNameWithLatin1Chars("is_relative_path")
	defer methodName64.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_relative_path")
	globalStringNameMethodBindings.method_is_relative_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName64.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_relative_path == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_relative_path")
	}
	methodName65 := NewStringNameWithLatin1Chars("simplify_path")
	defer methodName65.Destroy()
	log.Debug("globalStringNameMethodBindings.method_simplify_path")
	globalStringNameMethodBindings.method_simplify_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName65.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_simplify_path == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_simplify_path")
	}
	methodName66 := NewStringNameWithLatin1Chars("get_base_dir")
	defer methodName66.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_base_dir")
	globalStringNameMethodBindings.method_get_base_dir = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName66.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_get_base_dir == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_base_dir")
	}
	methodName67 := NewStringNameWithLatin1Chars("get_file")
	defer methodName67.Destroy()
	log.Debug("globalStringNameMethodBindings.method_get_file")
	globalStringNameMethodBindings.method_get_file = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName67.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_get_file == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_get_file")
	}
	methodName68 := NewStringNameWithLatin1Chars("xml_escape")
	defer methodName68.Destroy()
	log.Debug("globalStringNameMethodBindings.method_xml_escape")
	globalStringNameMethodBindings.method_xml_escape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName68.AsGDExtensionConstStringNamePtr(), 3429816538)
	if globalStringNameMethodBindings.method_xml_escape == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_xml_escape")
	}
	methodName69 := NewStringNameWithLatin1Chars("xml_unescape")
	defer methodName69.Destroy()
	log.Debug("globalStringNameMethodBindings.method_xml_unescape")
	globalStringNameMethodBindings.method_xml_unescape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName69.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_xml_unescape == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_xml_unescape")
	}
	methodName70 := NewStringNameWithLatin1Chars("uri_encode")
	defer methodName70.Destroy()
	log.Debug("globalStringNameMethodBindings.method_uri_encode")
	globalStringNameMethodBindings.method_uri_encode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName70.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_uri_encode == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_uri_encode")
	}
	methodName71 := NewStringNameWithLatin1Chars("uri_decode")
	defer methodName71.Destroy()
	log.Debug("globalStringNameMethodBindings.method_uri_decode")
	globalStringNameMethodBindings.method_uri_decode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName71.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_uri_decode == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_uri_decode")
	}
	methodName72 := NewStringNameWithLatin1Chars("c_escape")
	defer methodName72.Destroy()
	log.Debug("globalStringNameMethodBindings.method_c_escape")
	globalStringNameMethodBindings.method_c_escape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName72.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_c_escape == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_c_escape")
	}
	methodName73 := NewStringNameWithLatin1Chars("c_unescape")
	defer methodName73.Destroy()
	log.Debug("globalStringNameMethodBindings.method_c_unescape")
	globalStringNameMethodBindings.method_c_unescape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName73.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_c_unescape == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_c_unescape")
	}
	methodName74 := NewStringNameWithLatin1Chars("json_escape")
	defer methodName74.Destroy()
	log.Debug("globalStringNameMethodBindings.method_json_escape")
	globalStringNameMethodBindings.method_json_escape = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName74.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_json_escape == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_json_escape")
	}
	methodName75 := NewStringNameWithLatin1Chars("validate_node_name")
	defer methodName75.Destroy()
	log.Debug("globalStringNameMethodBindings.method_validate_node_name")
	globalStringNameMethodBindings.method_validate_node_name = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName75.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_validate_node_name == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_validate_node_name")
	}
	methodName76 := NewStringNameWithLatin1Chars("validate_filename")
	defer methodName76.Destroy()
	log.Debug("globalStringNameMethodBindings.method_validate_filename")
	globalStringNameMethodBindings.method_validate_filename = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName76.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalStringNameMethodBindings.method_validate_filename == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_validate_filename")
	}
	methodName77 := NewStringNameWithLatin1Chars("is_valid_identifier")
	defer methodName77.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_identifier")
	globalStringNameMethodBindings.method_is_valid_identifier = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName77.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_valid_identifier == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_identifier")
	}
	methodName78 := NewStringNameWithLatin1Chars("is_valid_int")
	defer methodName78.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_int")
	globalStringNameMethodBindings.method_is_valid_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName78.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_valid_int == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_int")
	}
	methodName79 := NewStringNameWithLatin1Chars("is_valid_float")
	defer methodName79.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_float")
	globalStringNameMethodBindings.method_is_valid_float = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName79.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_valid_float == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_float")
	}
	methodName80 := NewStringNameWithLatin1Chars("is_valid_hex_number")
	defer methodName80.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_hex_number")
	globalStringNameMethodBindings.method_is_valid_hex_number = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName80.AsGDExtensionConstStringNamePtr(), 593672999)
	if globalStringNameMethodBindings.method_is_valid_hex_number == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_hex_number")
	}
	methodName81 := NewStringNameWithLatin1Chars("is_valid_html_color")
	defer methodName81.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_html_color")
	globalStringNameMethodBindings.method_is_valid_html_color = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName81.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_valid_html_color == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_html_color")
	}
	methodName82 := NewStringNameWithLatin1Chars("is_valid_ip_address")
	defer methodName82.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_ip_address")
	globalStringNameMethodBindings.method_is_valid_ip_address = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName82.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_valid_ip_address == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_ip_address")
	}
	methodName83 := NewStringNameWithLatin1Chars("is_valid_filename")
	defer methodName83.Destroy()
	log.Debug("globalStringNameMethodBindings.method_is_valid_filename")
	globalStringNameMethodBindings.method_is_valid_filename = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName83.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalStringNameMethodBindings.method_is_valid_filename == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_is_valid_filename")
	}
	methodName84 := NewStringNameWithLatin1Chars("to_int")
	defer methodName84.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_int")
	globalStringNameMethodBindings.method_to_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName84.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringNameMethodBindings.method_to_int == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_int")
	}
	methodName85 := NewStringNameWithLatin1Chars("to_float")
	defer methodName85.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_float")
	globalStringNameMethodBindings.method_to_float = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName85.AsGDExtensionConstStringNamePtr(), 466405837)
	if globalStringNameMethodBindings.method_to_float == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_float")
	}
	methodName86 := NewStringNameWithLatin1Chars("hex_to_int")
	defer methodName86.Destroy()
	log.Debug("globalStringNameMethodBindings.method_hex_to_int")
	globalStringNameMethodBindings.method_hex_to_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName86.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringNameMethodBindings.method_hex_to_int == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_hex_to_int")
	}
	methodName87 := NewStringNameWithLatin1Chars("bin_to_int")
	defer methodName87.Destroy()
	log.Debug("globalStringNameMethodBindings.method_bin_to_int")
	globalStringNameMethodBindings.method_bin_to_int = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName87.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringNameMethodBindings.method_bin_to_int == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_bin_to_int")
	}
	methodName88 := NewStringNameWithLatin1Chars("lpad")
	defer methodName88.Destroy()
	log.Debug("globalStringNameMethodBindings.method_lpad")
	globalStringNameMethodBindings.method_lpad = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName88.AsGDExtensionConstStringNamePtr(), 248737229)
	if globalStringNameMethodBindings.method_lpad == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_lpad")
	}
	methodName89 := NewStringNameWithLatin1Chars("rpad")
	defer methodName89.Destroy()
	log.Debug("globalStringNameMethodBindings.method_rpad")
	globalStringNameMethodBindings.method_rpad = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName89.AsGDExtensionConstStringNamePtr(), 248737229)
	if globalStringNameMethodBindings.method_rpad == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_rpad")
	}
	methodName90 := NewStringNameWithLatin1Chars("pad_decimals")
	defer methodName90.Destroy()
	log.Debug("globalStringNameMethodBindings.method_pad_decimals")
	globalStringNameMethodBindings.method_pad_decimals = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName90.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringNameMethodBindings.method_pad_decimals == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_pad_decimals")
	}
	methodName91 := NewStringNameWithLatin1Chars("pad_zeros")
	defer methodName91.Destroy()
	log.Debug("globalStringNameMethodBindings.method_pad_zeros")
	globalStringNameMethodBindings.method_pad_zeros = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName91.AsGDExtensionConstStringNamePtr(), 2162347432)
	if globalStringNameMethodBindings.method_pad_zeros == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_pad_zeros")
	}
	methodName92 := NewStringNameWithLatin1Chars("trim_prefix")
	defer methodName92.Destroy()
	log.Debug("globalStringNameMethodBindings.method_trim_prefix")
	globalStringNameMethodBindings.method_trim_prefix = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName92.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringNameMethodBindings.method_trim_prefix == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_trim_prefix")
	}
	methodName93 := NewStringNameWithLatin1Chars("trim_suffix")
	defer methodName93.Destroy()
	log.Debug("globalStringNameMethodBindings.method_trim_suffix")
	globalStringNameMethodBindings.method_trim_suffix = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName93.AsGDExtensionConstStringNamePtr(), 3134094431)
	if globalStringNameMethodBindings.method_trim_suffix == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_trim_suffix")
	}
	methodName94 := NewStringNameWithLatin1Chars("to_ascii_buffer")
	defer methodName94.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_ascii_buffer")
	globalStringNameMethodBindings.method_to_ascii_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName94.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_to_ascii_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_ascii_buffer")
	}
	methodName95 := NewStringNameWithLatin1Chars("to_utf8_buffer")
	defer methodName95.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_utf8_buffer")
	globalStringNameMethodBindings.method_to_utf8_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName95.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_to_utf8_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_utf8_buffer")
	}
	methodName96 := NewStringNameWithLatin1Chars("to_utf16_buffer")
	defer methodName96.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_utf16_buffer")
	globalStringNameMethodBindings.method_to_utf16_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName96.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_to_utf16_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_utf16_buffer")
	}
	methodName97 := NewStringNameWithLatin1Chars("to_utf32_buffer")
	defer methodName97.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_utf32_buffer")
	globalStringNameMethodBindings.method_to_utf32_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName97.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_to_utf32_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_utf32_buffer")
	}
	methodName98 := NewStringNameWithLatin1Chars("hex_decode")
	defer methodName98.Destroy()
	log.Debug("globalStringNameMethodBindings.method_hex_decode")
	globalStringNameMethodBindings.method_hex_decode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName98.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_hex_decode == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_hex_decode")
	}
	methodName99 := NewStringNameWithLatin1Chars("to_wchar_buffer")
	defer methodName99.Destroy()
	log.Debug("globalStringNameMethodBindings.method_to_wchar_buffer")
	globalStringNameMethodBindings.method_to_wchar_buffer = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName99.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalStringNameMethodBindings.method_to_wchar_buffer == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_to_wchar_buffer")
	}
	methodName100 := NewStringNameWithLatin1Chars("hash")
	defer methodName100.Destroy()
	log.Debug("globalStringNameMethodBindings.method_hash")
	globalStringNameMethodBindings.method_hash = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_STRING_NAME, methodName100.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalStringNameMethodBindings.method_hash == nil {
		missingMethods = append(missingMethods, "globalStringNameMethodBindings.method_hash")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalStringNameMethodBindings.operator: equal Variant")
	globalStringNameMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringNameMethodBindings.operator: not_equal Variant")
	globalStringNameMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringNameMethodBindings.operator: module Variant")
	globalStringNameMethodBindings.operator_module_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringNameMethodBindings.operator: not ")
	globalStringNameMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalStringNameMethodBindings.operator: module bool")
	globalStringNameMethodBindings.operator_module_bool = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_BOOL)
	log.Debug("globalStringNameMethodBindings.operator: module int")
	globalStringNameMethodBindings.operator_module_int = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_INT)
	log.Debug("globalStringNameMethodBindings.operator: module float")
	globalStringNameMethodBindings.operator_module_float = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_FLOAT)
	log.Debug("globalStringNameMethodBindings.operator: equal String")
	globalStringNameMethodBindings.operator_equal_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringNameMethodBindings.operator: not_equal String")
	globalStringNameMethodBindings.operator_not_equal_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringNameMethodBindings.operator: add String")
	globalStringNameMethodBindings.operator_add_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringNameMethodBindings.operator: module String")
	globalStringNameMethodBindings.operator_module_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringNameMethodBindings.operator: in String")
	globalStringNameMethodBindings.operator_in_String = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING)
	log.Debug("globalStringNameMethodBindings.operator: module Vector2")
	globalStringNameMethodBindings.operator_module_Vector2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_VECTOR2)
	log.Debug("globalStringNameMethodBindings.operator: module Vector2i")
	globalStringNameMethodBindings.operator_module_Vector2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_VECTOR2I)
	log.Debug("globalStringNameMethodBindings.operator: module Rect2")
	globalStringNameMethodBindings.operator_module_Rect2 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_RECT2)
	log.Debug("globalStringNameMethodBindings.operator: module Rect2i")
	globalStringNameMethodBindings.operator_module_Rect2i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_RECT2I)
	log.Debug("globalStringNameMethodBindings.operator: module Vector3")
	globalStringNameMethodBindings.operator_module_Vector3 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_VECTOR3)
	log.Debug("globalStringNameMethodBindings.operator: module Vector3i")
	globalStringNameMethodBindings.operator_module_Vector3i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_VECTOR3I)
	log.Debug("globalStringNameMethodBindings.operator: module Transform2D")
	globalStringNameMethodBindings.operator_module_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalStringNameMethodBindings.operator: module Vector4")
	globalStringNameMethodBindings.operator_module_Vector4 = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_VECTOR4)
	log.Debug("globalStringNameMethodBindings.operator: module Vector4i")
	globalStringNameMethodBindings.operator_module_Vector4i = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_VECTOR4I)
	log.Debug("globalStringNameMethodBindings.operator: module Plane")
	globalStringNameMethodBindings.operator_module_Plane = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PLANE)
	log.Debug("globalStringNameMethodBindings.operator: module Quaternion")
	globalStringNameMethodBindings.operator_module_Quaternion = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_QUATERNION)
	log.Debug("globalStringNameMethodBindings.operator: module AABB")
	globalStringNameMethodBindings.operator_module_AABB = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_AABB)
	log.Debug("globalStringNameMethodBindings.operator: module Basis")
	globalStringNameMethodBindings.operator_module_Basis = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_BASIS)
	log.Debug("globalStringNameMethodBindings.operator: module Transform3D")
	globalStringNameMethodBindings.operator_module_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalStringNameMethodBindings.operator: module Projection")
	globalStringNameMethodBindings.operator_module_Projection = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PROJECTION)
	log.Debug("globalStringNameMethodBindings.operator: module Color")
	globalStringNameMethodBindings.operator_module_Color = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_COLOR)
	log.Debug("globalStringNameMethodBindings.operator: equal StringName")
	globalStringNameMethodBindings.operator_equal_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: not_equal StringName")
	globalStringNameMethodBindings.operator_not_equal_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: less StringName")
	globalStringNameMethodBindings.operator_less_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: less_equal StringName")
	globalStringNameMethodBindings.operator_less_equal_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: greater StringName")
	globalStringNameMethodBindings.operator_greater_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: greater_equal StringName")
	globalStringNameMethodBindings.operator_greater_equal_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: add StringName")
	globalStringNameMethodBindings.operator_add_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: module StringName")
	globalStringNameMethodBindings.operator_module_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: in StringName")
	globalStringNameMethodBindings.operator_in_StringName = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_STRING_NAME)
	log.Debug("globalStringNameMethodBindings.operator: module NodePath")
	globalStringNameMethodBindings.operator_module_NodePath = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_NODE_PATH)
	log.Debug("globalStringNameMethodBindings.operator: module Object")
	globalStringNameMethodBindings.operator_module_Object = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_OBJECT)
	log.Debug("globalStringNameMethodBindings.operator: in Object")
	globalStringNameMethodBindings.operator_in_Object = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_OBJECT)
	log.Debug("globalStringNameMethodBindings.operator: module Callable")
	globalStringNameMethodBindings.operator_module_Callable = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_CALLABLE)
	log.Debug("globalStringNameMethodBindings.operator: module Signal")
	globalStringNameMethodBindings.operator_module_Signal = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_SIGNAL)
	log.Debug("globalStringNameMethodBindings.operator: module Dictionary")
	globalStringNameMethodBindings.operator_module_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalStringNameMethodBindings.operator: in Dictionary")
	globalStringNameMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalStringNameMethodBindings.operator: module Array")
	globalStringNameMethodBindings.operator_module_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: in Array")
	globalStringNameMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedByteArray")
	globalStringNameMethodBindings.operator_module_PackedByteArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedInt32Array")
	globalStringNameMethodBindings.operator_module_PackedInt32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedInt64Array")
	globalStringNameMethodBindings.operator_module_PackedInt64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedFloat32Array")
	globalStringNameMethodBindings.operator_module_PackedFloat32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedFloat64Array")
	globalStringNameMethodBindings.operator_module_PackedFloat64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedStringArray")
	globalStringNameMethodBindings.operator_module_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: in PackedStringArray")
	globalStringNameMethodBindings.operator_in_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedVector2Array")
	globalStringNameMethodBindings.operator_module_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedVector3Array")
	globalStringNameMethodBindings.operator_module_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedColorArray")
	globalStringNameMethodBindings.operator_module_PackedColorArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("globalStringNameMethodBindings.operator: module PackedVector4Array")
	globalStringNameMethodBindings.operator_module_PackedVector4Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MODULE, GDEXTENSION_VARIANT_TYPE_STRING_NAME, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("stringNameInitBindings end")
}

type nodePathMethodBindings struct {
	constructor_0                    GDExtensionPtrConstructor
	constructor_1                    GDExtensionPtrConstructor
	constructor_2                    GDExtensionPtrConstructor
	destructor                       GDExtensionPtrDestructor
	method_is_absolute               GDExtensionPtrBuiltInMethod
	method_get_name_count            GDExtensionPtrBuiltInMethod
	method_get_name                  GDExtensionPtrBuiltInMethod
	method_get_subname_count         GDExtensionPtrBuiltInMethod
	method_hash                      GDExtensionPtrBuiltInMethod
	method_get_subname               GDExtensionPtrBuiltInMethod
	method_get_concatenated_names    GDExtensionPtrBuiltInMethod
	method_get_concatenated_subnames GDExtensionPtrBuiltInMethod
	method_slice                     GDExtensionPtrBuiltInMethod
	method_get_as_property_path      GDExtensionPtrBuiltInMethod
	method_is_empty                  GDExtensionPtrBuiltInMethod
	operator_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_not                     GDExtensionPtrOperatorEvaluator
	operator_equal_NodePath          GDExtensionPtrOperatorEvaluator
	operator_not_equal_NodePath      GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary           GDExtensionPtrOperatorEvaluator
	operator_in_Array                GDExtensionPtrOperatorEvaluator
}

var globalNodePathMethodBindings nodePathMethodBindings

func nodePathInitConstructorBindings() {
	log.Debug("nodePathInitConstructorBindings called")

	log.Debug("globalNodePathMethodBindings.constructor_0")
	globalNodePathMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_NODE_PATH, 0)
	log.Debug("globalNodePathMethodBindings.constructor_1")
	globalNodePathMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_NODE_PATH, 1)
	log.Debug("globalNodePathMethodBindings.constructor_2")
	globalNodePathMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_NODE_PATH, 2)
	log.Debug("globalNodePathMethodBindings.destructor")
	globalNodePathMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_NODE_PATH)
}

func nodePathInitMethodBindings() {
	log.Debug("nodePathInitMethodBindings called")

	missingMethods := make([]string, 0, 11)

	methodName0 := NewStringNameWithLatin1Chars("is_absolute")
	defer methodName0.Destroy()
	log.Debug("globalNodePathMethodBindings.method_is_absolute")
	globalNodePathMethodBindings.method_is_absolute = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName0.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalNodePathMethodBindings.method_is_absolute == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_is_absolute")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_name_count")
	defer methodName1.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_name_count")
	globalNodePathMethodBindings.method_get_name_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalNodePathMethodBindings.method_get_name_count == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_name_count")
	}
	methodName2 := NewStringNameWithLatin1Chars("get_name")
	defer methodName2.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_name")
	globalNodePathMethodBindings.method_get_name = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName2.AsGDExtensionConstStringNamePtr(), 2948586938)
	if globalNodePathMethodBindings.method_get_name == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_name")
	}
	methodName3 := NewStringNameWithLatin1Chars("get_subname_count")
	defer methodName3.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_subname_count")
	globalNodePathMethodBindings.method_get_subname_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName3.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalNodePathMethodBindings.method_get_subname_count == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_subname_count")
	}
	methodName4 := NewStringNameWithLatin1Chars("hash")
	defer methodName4.Destroy()
	log.Debug("globalNodePathMethodBindings.method_hash")
	globalNodePathMethodBindings.method_hash = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName4.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalNodePathMethodBindings.method_hash == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_hash")
	}
	methodName5 := NewStringNameWithLatin1Chars("get_subname")
	defer methodName5.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_subname")
	globalNodePathMethodBindings.method_get_subname = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName5.AsGDExtensionConstStringNamePtr(), 2948586938)
	if globalNodePathMethodBindings.method_get_subname == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_subname")
	}
	methodName6 := NewStringNameWithLatin1Chars("get_concatenated_names")
	defer methodName6.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_concatenated_names")
	globalNodePathMethodBindings.method_get_concatenated_names = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName6.AsGDExtensionConstStringNamePtr(), 1825232092)
	if globalNodePathMethodBindings.method_get_concatenated_names == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_concatenated_names")
	}
	methodName7 := NewStringNameWithLatin1Chars("get_concatenated_subnames")
	defer methodName7.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_concatenated_subnames")
	globalNodePathMethodBindings.method_get_concatenated_subnames = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName7.AsGDExtensionConstStringNamePtr(), 1825232092)
	if globalNodePathMethodBindings.method_get_concatenated_subnames == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_concatenated_subnames")
	}
	methodName8 := NewStringNameWithLatin1Chars("slice")
	defer methodName8.Destroy()
	log.Debug("globalNodePathMethodBindings.method_slice")
	globalNodePathMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName8.AsGDExtensionConstStringNamePtr(), 421628484)
	if globalNodePathMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_slice")
	}
	methodName9 := NewStringNameWithLatin1Chars("get_as_property_path")
	defer methodName9.Destroy()
	log.Debug("globalNodePathMethodBindings.method_get_as_property_path")
	globalNodePathMethodBindings.method_get_as_property_path = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName9.AsGDExtensionConstStringNamePtr(), 1598598043)
	if globalNodePathMethodBindings.method_get_as_property_path == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_get_as_property_path")
	}
	methodName10 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName10.Destroy()
	log.Debug("globalNodePathMethodBindings.method_is_empty")
	globalNodePathMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_NODE_PATH, methodName10.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalNodePathMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalNodePathMethodBindings.method_is_empty")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalNodePathMethodBindings.operator: equal Variant")
	globalNodePathMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalNodePathMethodBindings.operator: not_equal Variant")
	globalNodePathMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalNodePathMethodBindings.operator: not ")
	globalNodePathMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalNodePathMethodBindings.operator: equal NodePath")
	globalNodePathMethodBindings.operator_equal_NodePath = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_NODE_PATH)
	log.Debug("globalNodePathMethodBindings.operator: not_equal NodePath")
	globalNodePathMethodBindings.operator_not_equal_NodePath = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_NODE_PATH)
	log.Debug("globalNodePathMethodBindings.operator: in Dictionary")
	globalNodePathMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalNodePathMethodBindings.operator: in Array")
	globalNodePathMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_NODE_PATH, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("nodePathInitBindings end")
}

type rIDMethodBindings struct {
	constructor_0              GDExtensionPtrConstructor
	constructor_1              GDExtensionPtrConstructor
	method_is_valid            GDExtensionPtrBuiltInMethod
	method_get_id              GDExtensionPtrBuiltInMethod
	operator_equal_Variant     GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant GDExtensionPtrOperatorEvaluator
	operator_not               GDExtensionPtrOperatorEvaluator
	operator_equal_RID         GDExtensionPtrOperatorEvaluator
	operator_not_equal_RID     GDExtensionPtrOperatorEvaluator
	operator_less_RID          GDExtensionPtrOperatorEvaluator
	operator_less_equal_RID    GDExtensionPtrOperatorEvaluator
	operator_greater_RID       GDExtensionPtrOperatorEvaluator
	operator_greater_equal_RID GDExtensionPtrOperatorEvaluator
}

var globalRIDMethodBindings rIDMethodBindings

func rIDInitConstructorBindings() {
	log.Debug("rIDInitConstructorBindings called")

	log.Debug("globalRIDMethodBindings.constructor_0")
	globalRIDMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RID, 0)
	log.Debug("globalRIDMethodBindings.constructor_1")
	globalRIDMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_RID, 1)
}

func rIDInitMethodBindings() {
	log.Debug("rIDInitMethodBindings called")

	missingMethods := make([]string, 0, 2)

	methodName0 := NewStringNameWithLatin1Chars("is_valid")
	defer methodName0.Destroy()
	log.Debug("globalRIDMethodBindings.method_is_valid")
	globalRIDMethodBindings.method_is_valid = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RID, methodName0.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalRIDMethodBindings.method_is_valid == nil {
		missingMethods = append(missingMethods, "globalRIDMethodBindings.method_is_valid")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_id")
	defer methodName1.Destroy()
	log.Debug("globalRIDMethodBindings.method_get_id")
	globalRIDMethodBindings.method_get_id = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_RID, methodName1.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalRIDMethodBindings.method_get_id == nil {
		missingMethods = append(missingMethods, "globalRIDMethodBindings.method_get_id")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalRIDMethodBindings.operator: equal Variant")
	globalRIDMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRIDMethodBindings.operator: not_equal Variant")
	globalRIDMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRIDMethodBindings.operator: not ")
	globalRIDMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalRIDMethodBindings.operator: equal RID")
	globalRIDMethodBindings.operator_equal_RID = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_RID)
	log.Debug("globalRIDMethodBindings.operator: not_equal RID")
	globalRIDMethodBindings.operator_not_equal_RID = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_RID)
	log.Debug("globalRIDMethodBindings.operator: less RID")
	globalRIDMethodBindings.operator_less_RID = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_RID)
	log.Debug("globalRIDMethodBindings.operator: less_equal RID")
	globalRIDMethodBindings.operator_less_equal_RID = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_RID)
	log.Debug("globalRIDMethodBindings.operator: greater RID")
	globalRIDMethodBindings.operator_greater_RID = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_RID)
	log.Debug("globalRIDMethodBindings.operator: greater_equal RID")
	globalRIDMethodBindings.operator_greater_equal_RID = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_RID, GDEXTENSION_VARIANT_TYPE_RID)
	log.Debug("rIDInitBindings end")
}

type callableMethodBindings struct {
	constructor_0                    GDExtensionPtrConstructor
	constructor_1                    GDExtensionPtrConstructor
	constructor_2                    GDExtensionPtrConstructor
	destructor                       GDExtensionPtrDestructor
	method_create                    GDExtensionPtrBuiltInMethod
	method_callv                     GDExtensionPtrBuiltInMethod
	method_is_null                   GDExtensionPtrBuiltInMethod
	method_is_custom                 GDExtensionPtrBuiltInMethod
	method_is_standard               GDExtensionPtrBuiltInMethod
	method_is_valid                  GDExtensionPtrBuiltInMethod
	method_get_object                GDExtensionPtrBuiltInMethod
	method_get_object_id             GDExtensionPtrBuiltInMethod
	method_get_method                GDExtensionPtrBuiltInMethod
	method_get_argument_count        GDExtensionPtrBuiltInMethod
	method_get_bound_arguments_count GDExtensionPtrBuiltInMethod
	method_get_bound_arguments       GDExtensionPtrBuiltInMethod
	method_hash                      GDExtensionPtrBuiltInMethod
	method_bindv                     GDExtensionPtrBuiltInMethod
	method_unbind                    GDExtensionPtrBuiltInMethod
	operator_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_not                     GDExtensionPtrOperatorEvaluator
	operator_equal_Callable          GDExtensionPtrOperatorEvaluator
	operator_not_equal_Callable      GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary           GDExtensionPtrOperatorEvaluator
	operator_in_Array                GDExtensionPtrOperatorEvaluator
}

var globalCallableMethodBindings callableMethodBindings

func callableInitConstructorBindings() {
	log.Debug("callableInitConstructorBindings called")

	log.Debug("globalCallableMethodBindings.constructor_0")
	globalCallableMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_CALLABLE, 0)
	log.Debug("globalCallableMethodBindings.constructor_1")
	globalCallableMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_CALLABLE, 1)
	log.Debug("globalCallableMethodBindings.constructor_2")
	globalCallableMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_CALLABLE, 2)
	log.Debug("globalCallableMethodBindings.destructor")
	globalCallableMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_CALLABLE)
}

func callableInitMethodBindings() {
	log.Debug("callableInitMethodBindings called")

	missingMethods := make([]string, 0, 15)

	methodName0 := NewStringNameWithLatin1Chars("create")
	defer methodName0.Destroy()
	log.Debug("globalCallableMethodBindings.method_create")
	globalCallableMethodBindings.method_create = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName0.AsGDExtensionConstStringNamePtr(), 1709381114)
	if globalCallableMethodBindings.method_create == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_create")
	}
	methodName1 := NewStringNameWithLatin1Chars("callv")
	defer methodName1.Destroy()
	log.Debug("globalCallableMethodBindings.method_callv")
	globalCallableMethodBindings.method_callv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName1.AsGDExtensionConstStringNamePtr(), 413578926)
	if globalCallableMethodBindings.method_callv == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_callv")
	}
	methodName2 := NewStringNameWithLatin1Chars("is_null")
	defer methodName2.Destroy()
	log.Debug("globalCallableMethodBindings.method_is_null")
	globalCallableMethodBindings.method_is_null = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName2.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalCallableMethodBindings.method_is_null == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_is_null")
	}
	methodName3 := NewStringNameWithLatin1Chars("is_custom")
	defer methodName3.Destroy()
	log.Debug("globalCallableMethodBindings.method_is_custom")
	globalCallableMethodBindings.method_is_custom = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName3.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalCallableMethodBindings.method_is_custom == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_is_custom")
	}
	methodName4 := NewStringNameWithLatin1Chars("is_standard")
	defer methodName4.Destroy()
	log.Debug("globalCallableMethodBindings.method_is_standard")
	globalCallableMethodBindings.method_is_standard = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName4.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalCallableMethodBindings.method_is_standard == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_is_standard")
	}
	methodName5 := NewStringNameWithLatin1Chars("is_valid")
	defer methodName5.Destroy()
	log.Debug("globalCallableMethodBindings.method_is_valid")
	globalCallableMethodBindings.method_is_valid = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName5.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalCallableMethodBindings.method_is_valid == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_is_valid")
	}
	methodName6 := NewStringNameWithLatin1Chars("get_object")
	defer methodName6.Destroy()
	log.Debug("globalCallableMethodBindings.method_get_object")
	globalCallableMethodBindings.method_get_object = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName6.AsGDExtensionConstStringNamePtr(), 4008621732)
	if globalCallableMethodBindings.method_get_object == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_get_object")
	}
	methodName7 := NewStringNameWithLatin1Chars("get_object_id")
	defer methodName7.Destroy()
	log.Debug("globalCallableMethodBindings.method_get_object_id")
	globalCallableMethodBindings.method_get_object_id = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName7.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalCallableMethodBindings.method_get_object_id == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_get_object_id")
	}
	methodName8 := NewStringNameWithLatin1Chars("get_method")
	defer methodName8.Destroy()
	log.Debug("globalCallableMethodBindings.method_get_method")
	globalCallableMethodBindings.method_get_method = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName8.AsGDExtensionConstStringNamePtr(), 1825232092)
	if globalCallableMethodBindings.method_get_method == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_get_method")
	}
	methodName9 := NewStringNameWithLatin1Chars("get_argument_count")
	defer methodName9.Destroy()
	log.Debug("globalCallableMethodBindings.method_get_argument_count")
	globalCallableMethodBindings.method_get_argument_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName9.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalCallableMethodBindings.method_get_argument_count == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_get_argument_count")
	}
	methodName10 := NewStringNameWithLatin1Chars("get_bound_arguments_count")
	defer methodName10.Destroy()
	log.Debug("globalCallableMethodBindings.method_get_bound_arguments_count")
	globalCallableMethodBindings.method_get_bound_arguments_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName10.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalCallableMethodBindings.method_get_bound_arguments_count == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_get_bound_arguments_count")
	}
	methodName11 := NewStringNameWithLatin1Chars("get_bound_arguments")
	defer methodName11.Destroy()
	log.Debug("globalCallableMethodBindings.method_get_bound_arguments")
	globalCallableMethodBindings.method_get_bound_arguments = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName11.AsGDExtensionConstStringNamePtr(), 4144163970)
	if globalCallableMethodBindings.method_get_bound_arguments == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_get_bound_arguments")
	}
	methodName12 := NewStringNameWithLatin1Chars("hash")
	defer methodName12.Destroy()
	log.Debug("globalCallableMethodBindings.method_hash")
	globalCallableMethodBindings.method_hash = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName12.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalCallableMethodBindings.method_hash == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_hash")
	}
	methodName13 := NewStringNameWithLatin1Chars("bindv")
	defer methodName13.Destroy()
	log.Debug("globalCallableMethodBindings.method_bindv")
	globalCallableMethodBindings.method_bindv = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName13.AsGDExtensionConstStringNamePtr(), 3564560322)
	if globalCallableMethodBindings.method_bindv == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_bindv")
	}
	methodName14 := NewStringNameWithLatin1Chars("unbind")
	defer methodName14.Destroy()
	log.Debug("globalCallableMethodBindings.method_unbind")
	globalCallableMethodBindings.method_unbind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_CALLABLE, methodName14.AsGDExtensionConstStringNamePtr(), 755001590)
	if globalCallableMethodBindings.method_unbind == nil {
		missingMethods = append(missingMethods, "globalCallableMethodBindings.method_unbind")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalCallableMethodBindings.operator: equal Variant")
	globalCallableMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalCallableMethodBindings.operator: not_equal Variant")
	globalCallableMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalCallableMethodBindings.operator: not ")
	globalCallableMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalCallableMethodBindings.operator: equal Callable")
	globalCallableMethodBindings.operator_equal_Callable = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_CALLABLE)
	log.Debug("globalCallableMethodBindings.operator: not_equal Callable")
	globalCallableMethodBindings.operator_not_equal_Callable = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_CALLABLE)
	log.Debug("globalCallableMethodBindings.operator: in Dictionary")
	globalCallableMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalCallableMethodBindings.operator: in Array")
	globalCallableMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_CALLABLE, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("callableInitBindings end")
}

type signalMethodBindings struct {
	constructor_0              GDExtensionPtrConstructor
	constructor_1              GDExtensionPtrConstructor
	constructor_2              GDExtensionPtrConstructor
	destructor                 GDExtensionPtrDestructor
	method_is_null             GDExtensionPtrBuiltInMethod
	method_get_object          GDExtensionPtrBuiltInMethod
	method_get_object_id       GDExtensionPtrBuiltInMethod
	method_get_name            GDExtensionPtrBuiltInMethod
	method_connect             GDExtensionPtrBuiltInMethod
	method_disconnect          GDExtensionPtrBuiltInMethod
	method_is_connected        GDExtensionPtrBuiltInMethod
	method_get_connections     GDExtensionPtrBuiltInMethod
	operator_equal_Variant     GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant GDExtensionPtrOperatorEvaluator
	operator_not               GDExtensionPtrOperatorEvaluator
	operator_equal_Signal      GDExtensionPtrOperatorEvaluator
	operator_not_equal_Signal  GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary     GDExtensionPtrOperatorEvaluator
	operator_in_Array          GDExtensionPtrOperatorEvaluator
}

var globalSignalMethodBindings signalMethodBindings

func signalInitConstructorBindings() {
	log.Debug("signalInitConstructorBindings called")

	log.Debug("globalSignalMethodBindings.constructor_0")
	globalSignalMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_SIGNAL, 0)
	log.Debug("globalSignalMethodBindings.constructor_1")
	globalSignalMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_SIGNAL, 1)
	log.Debug("globalSignalMethodBindings.constructor_2")
	globalSignalMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_SIGNAL, 2)
	log.Debug("globalSignalMethodBindings.destructor")
	globalSignalMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_SIGNAL)
}

func signalInitMethodBindings() {
	log.Debug("signalInitMethodBindings called")

	missingMethods := make([]string, 0, 8)

	methodName0 := NewStringNameWithLatin1Chars("is_null")
	defer methodName0.Destroy()
	log.Debug("globalSignalMethodBindings.method_is_null")
	globalSignalMethodBindings.method_is_null = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName0.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalSignalMethodBindings.method_is_null == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_is_null")
	}
	methodName1 := NewStringNameWithLatin1Chars("get_object")
	defer methodName1.Destroy()
	log.Debug("globalSignalMethodBindings.method_get_object")
	globalSignalMethodBindings.method_get_object = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName1.AsGDExtensionConstStringNamePtr(), 4008621732)
	if globalSignalMethodBindings.method_get_object == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_get_object")
	}
	methodName2 := NewStringNameWithLatin1Chars("get_object_id")
	defer methodName2.Destroy()
	log.Debug("globalSignalMethodBindings.method_get_object_id")
	globalSignalMethodBindings.method_get_object_id = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName2.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalSignalMethodBindings.method_get_object_id == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_get_object_id")
	}
	methodName3 := NewStringNameWithLatin1Chars("get_name")
	defer methodName3.Destroy()
	log.Debug("globalSignalMethodBindings.method_get_name")
	globalSignalMethodBindings.method_get_name = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName3.AsGDExtensionConstStringNamePtr(), 1825232092)
	if globalSignalMethodBindings.method_get_name == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_get_name")
	}
	methodName4 := NewStringNameWithLatin1Chars("connect")
	defer methodName4.Destroy()
	log.Debug("globalSignalMethodBindings.method_connect")
	globalSignalMethodBindings.method_connect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName4.AsGDExtensionConstStringNamePtr(), 979702392)
	if globalSignalMethodBindings.method_connect == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_connect")
	}
	methodName5 := NewStringNameWithLatin1Chars("disconnect")
	defer methodName5.Destroy()
	log.Debug("globalSignalMethodBindings.method_disconnect")
	globalSignalMethodBindings.method_disconnect = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName5.AsGDExtensionConstStringNamePtr(), 3470848906)
	if globalSignalMethodBindings.method_disconnect == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_disconnect")
	}
	methodName6 := NewStringNameWithLatin1Chars("is_connected")
	defer methodName6.Destroy()
	log.Debug("globalSignalMethodBindings.method_is_connected")
	globalSignalMethodBindings.method_is_connected = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName6.AsGDExtensionConstStringNamePtr(), 4129521963)
	if globalSignalMethodBindings.method_is_connected == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_is_connected")
	}
	methodName7 := NewStringNameWithLatin1Chars("get_connections")
	defer methodName7.Destroy()
	log.Debug("globalSignalMethodBindings.method_get_connections")
	globalSignalMethodBindings.method_get_connections = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_SIGNAL, methodName7.AsGDExtensionConstStringNamePtr(), 4144163970)
	if globalSignalMethodBindings.method_get_connections == nil {
		missingMethods = append(missingMethods, "globalSignalMethodBindings.method_get_connections")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalSignalMethodBindings.operator: equal Variant")
	globalSignalMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalSignalMethodBindings.operator: not_equal Variant")
	globalSignalMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalSignalMethodBindings.operator: not ")
	globalSignalMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalSignalMethodBindings.operator: equal Signal")
	globalSignalMethodBindings.operator_equal_Signal = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_SIGNAL)
	log.Debug("globalSignalMethodBindings.operator: not_equal Signal")
	globalSignalMethodBindings.operator_not_equal_Signal = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_SIGNAL)
	log.Debug("globalSignalMethodBindings.operator: in Dictionary")
	globalSignalMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalSignalMethodBindings.operator: in Array")
	globalSignalMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_SIGNAL, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("signalInitBindings end")
}

type dictionaryMethodBindings struct {
	constructor_0                 GDExtensionPtrConstructor
	constructor_1                 GDExtensionPtrConstructor
	destructor                    GDExtensionPtrDestructor
	method_size                   GDExtensionPtrBuiltInMethod
	method_is_empty               GDExtensionPtrBuiltInMethod
	method_clear                  GDExtensionPtrBuiltInMethod
	method_merge                  GDExtensionPtrBuiltInMethod
	method_merged                 GDExtensionPtrBuiltInMethod
	method_has                    GDExtensionPtrBuiltInMethod
	method_has_all                GDExtensionPtrBuiltInMethod
	method_find_key               GDExtensionPtrBuiltInMethod
	method_erase                  GDExtensionPtrBuiltInMethod
	method_hash                   GDExtensionPtrBuiltInMethod
	method_keys                   GDExtensionPtrBuiltInMethod
	method_values                 GDExtensionPtrBuiltInMethod
	method_duplicate              GDExtensionPtrBuiltInMethod
	method_get                    GDExtensionPtrBuiltInMethod
	method_get_or_add             GDExtensionPtrBuiltInMethod
	method_make_read_only         GDExtensionPtrBuiltInMethod
	method_is_read_only           GDExtensionPtrBuiltInMethod
	method_recursive_equal        GDExtensionPtrBuiltInMethod
	indexed_setter                GDExtensionPtrIndexedSetter
	indexed_getter                GDExtensionPtrIndexedGetter
	keyed_setter                  GDExtensionPtrKeyedSetter
	keyed_getter                  GDExtensionPtrKeyedGetter
	keyed_checker                 GDExtensionPtrKeyedChecker
	operator_equal_Variant        GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant    GDExtensionPtrOperatorEvaluator
	operator_not                  GDExtensionPtrOperatorEvaluator
	operator_equal_Dictionary     GDExtensionPtrOperatorEvaluator
	operator_not_equal_Dictionary GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary        GDExtensionPtrOperatorEvaluator
	operator_in_Array             GDExtensionPtrOperatorEvaluator
}

var globalDictionaryMethodBindings dictionaryMethodBindings

func dictionaryInitConstructorBindings() {
	log.Debug("dictionaryInitConstructorBindings called")

	log.Debug("globalDictionaryMethodBindings.constructor_0")
	globalDictionaryMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_DICTIONARY, 0)
	log.Debug("globalDictionaryMethodBindings.constructor_1")
	globalDictionaryMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_DICTIONARY, 1)
	log.Debug("globalDictionaryMethodBindings.destructor")
	globalDictionaryMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_DICTIONARY)
}

func dictionaryInitMethodBindings() {
	log.Debug("dictionaryInitMethodBindings called")

	missingMethods := make([]string, 0, 18)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_size")
	globalDictionaryMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalDictionaryMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_is_empty")
	globalDictionaryMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalDictionaryMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("clear")
	defer methodName2.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_clear")
	globalDictionaryMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName2.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalDictionaryMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_clear")
	}
	methodName3 := NewStringNameWithLatin1Chars("merge")
	defer methodName3.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_merge")
	globalDictionaryMethodBindings.method_merge = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName3.AsGDExtensionConstStringNamePtr(), 2079548978)
	if globalDictionaryMethodBindings.method_merge == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_merge")
	}
	methodName4 := NewStringNameWithLatin1Chars("merged")
	defer methodName4.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_merged")
	globalDictionaryMethodBindings.method_merged = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName4.AsGDExtensionConstStringNamePtr(), 2271165639)
	if globalDictionaryMethodBindings.method_merged == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_merged")
	}
	methodName5 := NewStringNameWithLatin1Chars("has")
	defer methodName5.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_has")
	globalDictionaryMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName5.AsGDExtensionConstStringNamePtr(), 3680194679)
	if globalDictionaryMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_has")
	}
	methodName6 := NewStringNameWithLatin1Chars("has_all")
	defer methodName6.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_has_all")
	globalDictionaryMethodBindings.method_has_all = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName6.AsGDExtensionConstStringNamePtr(), 2988181878)
	if globalDictionaryMethodBindings.method_has_all == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_has_all")
	}
	methodName7 := NewStringNameWithLatin1Chars("find_key")
	defer methodName7.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_find_key")
	globalDictionaryMethodBindings.method_find_key = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName7.AsGDExtensionConstStringNamePtr(), 1988825835)
	if globalDictionaryMethodBindings.method_find_key == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_find_key")
	}
	methodName8 := NewStringNameWithLatin1Chars("erase")
	defer methodName8.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_erase")
	globalDictionaryMethodBindings.method_erase = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName8.AsGDExtensionConstStringNamePtr(), 1776646889)
	if globalDictionaryMethodBindings.method_erase == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_erase")
	}
	methodName9 := NewStringNameWithLatin1Chars("hash")
	defer methodName9.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_hash")
	globalDictionaryMethodBindings.method_hash = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName9.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalDictionaryMethodBindings.method_hash == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_hash")
	}
	methodName10 := NewStringNameWithLatin1Chars("keys")
	defer methodName10.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_keys")
	globalDictionaryMethodBindings.method_keys = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName10.AsGDExtensionConstStringNamePtr(), 4144163970)
	if globalDictionaryMethodBindings.method_keys == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_keys")
	}
	methodName11 := NewStringNameWithLatin1Chars("values")
	defer methodName11.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_values")
	globalDictionaryMethodBindings.method_values = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName11.AsGDExtensionConstStringNamePtr(), 4144163970)
	if globalDictionaryMethodBindings.method_values == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_values")
	}
	methodName12 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName12.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_duplicate")
	globalDictionaryMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName12.AsGDExtensionConstStringNamePtr(), 830099069)
	if globalDictionaryMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_duplicate")
	}
	methodName13 := NewStringNameWithLatin1Chars("get")
	defer methodName13.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_get")
	globalDictionaryMethodBindings.method_get = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName13.AsGDExtensionConstStringNamePtr(), 2205440559)
	if globalDictionaryMethodBindings.method_get == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_get")
	}
	methodName14 := NewStringNameWithLatin1Chars("get_or_add")
	defer methodName14.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_get_or_add")
	globalDictionaryMethodBindings.method_get_or_add = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName14.AsGDExtensionConstStringNamePtr(), 1052551076)
	if globalDictionaryMethodBindings.method_get_or_add == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_get_or_add")
	}
	methodName15 := NewStringNameWithLatin1Chars("make_read_only")
	defer methodName15.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_make_read_only")
	globalDictionaryMethodBindings.method_make_read_only = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalDictionaryMethodBindings.method_make_read_only == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_make_read_only")
	}
	methodName16 := NewStringNameWithLatin1Chars("is_read_only")
	defer methodName16.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_is_read_only")
	globalDictionaryMethodBindings.method_is_read_only = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName16.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalDictionaryMethodBindings.method_is_read_only == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_is_read_only")
	}
	methodName17 := NewStringNameWithLatin1Chars("recursive_equal")
	defer methodName17.Destroy()
	log.Debug("globalDictionaryMethodBindings.method_recursive_equal")
	globalDictionaryMethodBindings.method_recursive_equal = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_DICTIONARY, methodName17.AsGDExtensionConstStringNamePtr(), 1404404751)
	if globalDictionaryMethodBindings.method_recursive_equal == nil {
		missingMethods = append(missingMethods, "globalDictionaryMethodBindings.method_recursive_equal")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalDictionaryMethodBindings.indexed_setter")
	globalDictionaryMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.indexed_getter")
	globalDictionaryMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.keyed_setter")
	globalDictionaryMethodBindings.keyed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrKeyedSetter(GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.keyed_getter")
	globalDictionaryMethodBindings.keyed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrKeyedGetter(GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.keyed_checked")
	globalDictionaryMethodBindings.keyed_checker = CallFunc_GDExtensionInterfaceVariantGetPtrKeyedChecker(GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.operator: equal Variant")
	globalDictionaryMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalDictionaryMethodBindings.operator: not_equal Variant")
	globalDictionaryMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalDictionaryMethodBindings.operator: not ")
	globalDictionaryMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalDictionaryMethodBindings.operator: equal Dictionary")
	globalDictionaryMethodBindings.operator_equal_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.operator: not_equal Dictionary")
	globalDictionaryMethodBindings.operator_not_equal_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.operator: in Dictionary")
	globalDictionaryMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalDictionaryMethodBindings.operator: in Array")
	globalDictionaryMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_DICTIONARY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("dictionaryInitBindings end")
}

type arrayMethodBindings struct {
	constructor_0                GDExtensionPtrConstructor
	constructor_1                GDExtensionPtrConstructor
	constructor_2                GDExtensionPtrConstructor
	constructor_3                GDExtensionPtrConstructor
	constructor_4                GDExtensionPtrConstructor
	constructor_5                GDExtensionPtrConstructor
	constructor_6                GDExtensionPtrConstructor
	constructor_7                GDExtensionPtrConstructor
	constructor_8                GDExtensionPtrConstructor
	constructor_9                GDExtensionPtrConstructor
	constructor_10               GDExtensionPtrConstructor
	constructor_11               GDExtensionPtrConstructor
	constructor_12               GDExtensionPtrConstructor
	destructor                   GDExtensionPtrDestructor
	method_size                  GDExtensionPtrBuiltInMethod
	method_is_empty              GDExtensionPtrBuiltInMethod
	method_clear                 GDExtensionPtrBuiltInMethod
	method_hash                  GDExtensionPtrBuiltInMethod
	method_assign                GDExtensionPtrBuiltInMethod
	method_push_back             GDExtensionPtrBuiltInMethod
	method_push_front            GDExtensionPtrBuiltInMethod
	method_append                GDExtensionPtrBuiltInMethod
	method_append_array          GDExtensionPtrBuiltInMethod
	method_resize                GDExtensionPtrBuiltInMethod
	method_insert                GDExtensionPtrBuiltInMethod
	method_remove_at             GDExtensionPtrBuiltInMethod
	method_fill                  GDExtensionPtrBuiltInMethod
	method_erase                 GDExtensionPtrBuiltInMethod
	method_front                 GDExtensionPtrBuiltInMethod
	method_back                  GDExtensionPtrBuiltInMethod
	method_pick_random           GDExtensionPtrBuiltInMethod
	method_find                  GDExtensionPtrBuiltInMethod
	method_rfind                 GDExtensionPtrBuiltInMethod
	method_count                 GDExtensionPtrBuiltInMethod
	method_has                   GDExtensionPtrBuiltInMethod
	method_pop_back              GDExtensionPtrBuiltInMethod
	method_pop_front             GDExtensionPtrBuiltInMethod
	method_pop_at                GDExtensionPtrBuiltInMethod
	method_sort                  GDExtensionPtrBuiltInMethod
	method_sort_custom           GDExtensionPtrBuiltInMethod
	method_shuffle               GDExtensionPtrBuiltInMethod
	method_bsearch               GDExtensionPtrBuiltInMethod
	method_bsearch_custom        GDExtensionPtrBuiltInMethod
	method_reverse               GDExtensionPtrBuiltInMethod
	method_duplicate             GDExtensionPtrBuiltInMethod
	method_slice                 GDExtensionPtrBuiltInMethod
	method_filter                GDExtensionPtrBuiltInMethod
	method_map                   GDExtensionPtrBuiltInMethod
	method_reduce                GDExtensionPtrBuiltInMethod
	method_any                   GDExtensionPtrBuiltInMethod
	method_all                   GDExtensionPtrBuiltInMethod
	method_max                   GDExtensionPtrBuiltInMethod
	method_min                   GDExtensionPtrBuiltInMethod
	method_is_typed              GDExtensionPtrBuiltInMethod
	method_is_same_typed         GDExtensionPtrBuiltInMethod
	method_get_typed_builtin     GDExtensionPtrBuiltInMethod
	method_get_typed_class_name  GDExtensionPtrBuiltInMethod
	method_get_typed_script      GDExtensionPtrBuiltInMethod
	method_make_read_only        GDExtensionPtrBuiltInMethod
	method_is_read_only          GDExtensionPtrBuiltInMethod
	indexed_setter               GDExtensionPtrIndexedSetter
	indexed_getter               GDExtensionPtrIndexedGetter
	operator_equal_Variant       GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant   GDExtensionPtrOperatorEvaluator
	operator_not                 GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary       GDExtensionPtrOperatorEvaluator
	operator_equal_Array         GDExtensionPtrOperatorEvaluator
	operator_not_equal_Array     GDExtensionPtrOperatorEvaluator
	operator_less_Array          GDExtensionPtrOperatorEvaluator
	operator_less_equal_Array    GDExtensionPtrOperatorEvaluator
	operator_greater_Array       GDExtensionPtrOperatorEvaluator
	operator_greater_equal_Array GDExtensionPtrOperatorEvaluator
	operator_add_Array           GDExtensionPtrOperatorEvaluator
	operator_in_Array            GDExtensionPtrOperatorEvaluator
}

var globalArrayMethodBindings arrayMethodBindings

func arrayInitConstructorBindings() {
	log.Debug("arrayInitConstructorBindings called")

	log.Debug("globalArrayMethodBindings.constructor_0")
	globalArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 0)
	log.Debug("globalArrayMethodBindings.constructor_1")
	globalArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 1)
	log.Debug("globalArrayMethodBindings.constructor_2")
	globalArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 2)
	log.Debug("globalArrayMethodBindings.constructor_3")
	globalArrayMethodBindings.constructor_3 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 3)
	log.Debug("globalArrayMethodBindings.constructor_4")
	globalArrayMethodBindings.constructor_4 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 4)
	log.Debug("globalArrayMethodBindings.constructor_5")
	globalArrayMethodBindings.constructor_5 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 5)
	log.Debug("globalArrayMethodBindings.constructor_6")
	globalArrayMethodBindings.constructor_6 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 6)
	log.Debug("globalArrayMethodBindings.constructor_7")
	globalArrayMethodBindings.constructor_7 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 7)
	log.Debug("globalArrayMethodBindings.constructor_8")
	globalArrayMethodBindings.constructor_8 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 8)
	log.Debug("globalArrayMethodBindings.constructor_9")
	globalArrayMethodBindings.constructor_9 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 9)
	log.Debug("globalArrayMethodBindings.constructor_10")
	globalArrayMethodBindings.constructor_10 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 10)
	log.Debug("globalArrayMethodBindings.constructor_11")
	globalArrayMethodBindings.constructor_11 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 11)
	log.Debug("globalArrayMethodBindings.constructor_12")
	globalArrayMethodBindings.constructor_12 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_ARRAY, 12)
	log.Debug("globalArrayMethodBindings.destructor")
	globalArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_ARRAY)
}

func arrayInitMethodBindings() {
	log.Debug("arrayInitMethodBindings called")

	missingMethods := make([]string, 0, 46)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalArrayMethodBindings.method_size")
	globalArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalArrayMethodBindings.method_is_empty")
	globalArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("clear")
	defer methodName2.Destroy()
	log.Debug("globalArrayMethodBindings.method_clear")
	globalArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_clear")
	}
	methodName3 := NewStringNameWithLatin1Chars("hash")
	defer methodName3.Destroy()
	log.Debug("globalArrayMethodBindings.method_hash")
	globalArrayMethodBindings.method_hash = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalArrayMethodBindings.method_hash == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_hash")
	}
	methodName4 := NewStringNameWithLatin1Chars("assign")
	defer methodName4.Destroy()
	log.Debug("globalArrayMethodBindings.method_assign")
	globalArrayMethodBindings.method_assign = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 2307260970)
	if globalArrayMethodBindings.method_assign == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_assign")
	}
	methodName5 := NewStringNameWithLatin1Chars("push_back")
	defer methodName5.Destroy()
	log.Debug("globalArrayMethodBindings.method_push_back")
	globalArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 3316032543)
	if globalArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_push_back")
	}
	methodName6 := NewStringNameWithLatin1Chars("push_front")
	defer methodName6.Destroy()
	log.Debug("globalArrayMethodBindings.method_push_front")
	globalArrayMethodBindings.method_push_front = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 3316032543)
	if globalArrayMethodBindings.method_push_front == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_push_front")
	}
	methodName7 := NewStringNameWithLatin1Chars("append")
	defer methodName7.Destroy()
	log.Debug("globalArrayMethodBindings.method_append")
	globalArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 3316032543)
	if globalArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_append")
	}
	methodName8 := NewStringNameWithLatin1Chars("append_array")
	defer methodName8.Destroy()
	log.Debug("globalArrayMethodBindings.method_append_array")
	globalArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 2307260970)
	if globalArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_append_array")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalArrayMethodBindings.method_resize")
	globalArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("insert")
	defer methodName10.Destroy()
	log.Debug("globalArrayMethodBindings.method_insert")
	globalArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3176316662)
	if globalArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_insert")
	}
	methodName11 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName11.Destroy()
	log.Debug("globalArrayMethodBindings.method_remove_at")
	globalArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_remove_at")
	}
	methodName12 := NewStringNameWithLatin1Chars("fill")
	defer methodName12.Destroy()
	log.Debug("globalArrayMethodBindings.method_fill")
	globalArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3316032543)
	if globalArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_fill")
	}
	methodName13 := NewStringNameWithLatin1Chars("erase")
	defer methodName13.Destroy()
	log.Debug("globalArrayMethodBindings.method_erase")
	globalArrayMethodBindings.method_erase = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 3316032543)
	if globalArrayMethodBindings.method_erase == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_erase")
	}
	methodName14 := NewStringNameWithLatin1Chars("front")
	defer methodName14.Destroy()
	log.Debug("globalArrayMethodBindings.method_front")
	globalArrayMethodBindings.method_front = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 1460142086)
	if globalArrayMethodBindings.method_front == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_front")
	}
	methodName15 := NewStringNameWithLatin1Chars("back")
	defer methodName15.Destroy()
	log.Debug("globalArrayMethodBindings.method_back")
	globalArrayMethodBindings.method_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 1460142086)
	if globalArrayMethodBindings.method_back == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_back")
	}
	methodName16 := NewStringNameWithLatin1Chars("pick_random")
	defer methodName16.Destroy()
	log.Debug("globalArrayMethodBindings.method_pick_random")
	globalArrayMethodBindings.method_pick_random = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 1460142086)
	if globalArrayMethodBindings.method_pick_random == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_pick_random")
	}
	methodName17 := NewStringNameWithLatin1Chars("find")
	defer methodName17.Destroy()
	log.Debug("globalArrayMethodBindings.method_find")
	globalArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 2336346817)
	if globalArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_find")
	}
	methodName18 := NewStringNameWithLatin1Chars("rfind")
	defer methodName18.Destroy()
	log.Debug("globalArrayMethodBindings.method_rfind")
	globalArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 2336346817)
	if globalArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_rfind")
	}
	methodName19 := NewStringNameWithLatin1Chars("count")
	defer methodName19.Destroy()
	log.Debug("globalArrayMethodBindings.method_count")
	globalArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 1481661226)
	if globalArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_count")
	}
	methodName20 := NewStringNameWithLatin1Chars("has")
	defer methodName20.Destroy()
	log.Debug("globalArrayMethodBindings.method_has")
	globalArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 3680194679)
	if globalArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_has")
	}
	methodName21 := NewStringNameWithLatin1Chars("pop_back")
	defer methodName21.Destroy()
	log.Debug("globalArrayMethodBindings.method_pop_back")
	globalArrayMethodBindings.method_pop_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName21.AsGDExtensionConstStringNamePtr(), 1321915136)
	if globalArrayMethodBindings.method_pop_back == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_pop_back")
	}
	methodName22 := NewStringNameWithLatin1Chars("pop_front")
	defer methodName22.Destroy()
	log.Debug("globalArrayMethodBindings.method_pop_front")
	globalArrayMethodBindings.method_pop_front = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName22.AsGDExtensionConstStringNamePtr(), 1321915136)
	if globalArrayMethodBindings.method_pop_front == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_pop_front")
	}
	methodName23 := NewStringNameWithLatin1Chars("pop_at")
	defer methodName23.Destroy()
	log.Debug("globalArrayMethodBindings.method_pop_at")
	globalArrayMethodBindings.method_pop_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName23.AsGDExtensionConstStringNamePtr(), 3518259424)
	if globalArrayMethodBindings.method_pop_at == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_pop_at")
	}
	methodName24 := NewStringNameWithLatin1Chars("sort")
	defer methodName24.Destroy()
	log.Debug("globalArrayMethodBindings.method_sort")
	globalArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName24.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_sort")
	}
	methodName25 := NewStringNameWithLatin1Chars("sort_custom")
	defer methodName25.Destroy()
	log.Debug("globalArrayMethodBindings.method_sort_custom")
	globalArrayMethodBindings.method_sort_custom = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName25.AsGDExtensionConstStringNamePtr(), 3470848906)
	if globalArrayMethodBindings.method_sort_custom == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_sort_custom")
	}
	methodName26 := NewStringNameWithLatin1Chars("shuffle")
	defer methodName26.Destroy()
	log.Debug("globalArrayMethodBindings.method_shuffle")
	globalArrayMethodBindings.method_shuffle = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName26.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalArrayMethodBindings.method_shuffle == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_shuffle")
	}
	methodName27 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName27.Destroy()
	log.Debug("globalArrayMethodBindings.method_bsearch")
	globalArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName27.AsGDExtensionConstStringNamePtr(), 3372222236)
	if globalArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_bsearch")
	}
	methodName28 := NewStringNameWithLatin1Chars("bsearch_custom")
	defer methodName28.Destroy()
	log.Debug("globalArrayMethodBindings.method_bsearch_custom")
	globalArrayMethodBindings.method_bsearch_custom = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName28.AsGDExtensionConstStringNamePtr(), 161317131)
	if globalArrayMethodBindings.method_bsearch_custom == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_bsearch_custom")
	}
	methodName29 := NewStringNameWithLatin1Chars("reverse")
	defer methodName29.Destroy()
	log.Debug("globalArrayMethodBindings.method_reverse")
	globalArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName29.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_reverse")
	}
	methodName30 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName30.Destroy()
	log.Debug("globalArrayMethodBindings.method_duplicate")
	globalArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName30.AsGDExtensionConstStringNamePtr(), 636440122)
	if globalArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_duplicate")
	}
	methodName31 := NewStringNameWithLatin1Chars("slice")
	defer methodName31.Destroy()
	log.Debug("globalArrayMethodBindings.method_slice")
	globalArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName31.AsGDExtensionConstStringNamePtr(), 1393718243)
	if globalArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_slice")
	}
	methodName32 := NewStringNameWithLatin1Chars("filter")
	defer methodName32.Destroy()
	log.Debug("globalArrayMethodBindings.method_filter")
	globalArrayMethodBindings.method_filter = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName32.AsGDExtensionConstStringNamePtr(), 4075186556)
	if globalArrayMethodBindings.method_filter == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_filter")
	}
	methodName33 := NewStringNameWithLatin1Chars("map")
	defer methodName33.Destroy()
	log.Debug("globalArrayMethodBindings.method_map")
	globalArrayMethodBindings.method_map = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName33.AsGDExtensionConstStringNamePtr(), 4075186556)
	if globalArrayMethodBindings.method_map == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_map")
	}
	methodName34 := NewStringNameWithLatin1Chars("reduce")
	defer methodName34.Destroy()
	log.Debug("globalArrayMethodBindings.method_reduce")
	globalArrayMethodBindings.method_reduce = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName34.AsGDExtensionConstStringNamePtr(), 4272450342)
	if globalArrayMethodBindings.method_reduce == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_reduce")
	}
	methodName35 := NewStringNameWithLatin1Chars("any")
	defer methodName35.Destroy()
	log.Debug("globalArrayMethodBindings.method_any")
	globalArrayMethodBindings.method_any = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName35.AsGDExtensionConstStringNamePtr(), 4129521963)
	if globalArrayMethodBindings.method_any == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_any")
	}
	methodName36 := NewStringNameWithLatin1Chars("all")
	defer methodName36.Destroy()
	log.Debug("globalArrayMethodBindings.method_all")
	globalArrayMethodBindings.method_all = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName36.AsGDExtensionConstStringNamePtr(), 4129521963)
	if globalArrayMethodBindings.method_all == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_all")
	}
	methodName37 := NewStringNameWithLatin1Chars("max")
	defer methodName37.Destroy()
	log.Debug("globalArrayMethodBindings.method_max")
	globalArrayMethodBindings.method_max = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName37.AsGDExtensionConstStringNamePtr(), 1460142086)
	if globalArrayMethodBindings.method_max == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_max")
	}
	methodName38 := NewStringNameWithLatin1Chars("min")
	defer methodName38.Destroy()
	log.Debug("globalArrayMethodBindings.method_min")
	globalArrayMethodBindings.method_min = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName38.AsGDExtensionConstStringNamePtr(), 1460142086)
	if globalArrayMethodBindings.method_min == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_min")
	}
	methodName39 := NewStringNameWithLatin1Chars("is_typed")
	defer methodName39.Destroy()
	log.Debug("globalArrayMethodBindings.method_is_typed")
	globalArrayMethodBindings.method_is_typed = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName39.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalArrayMethodBindings.method_is_typed == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_is_typed")
	}
	methodName40 := NewStringNameWithLatin1Chars("is_same_typed")
	defer methodName40.Destroy()
	log.Debug("globalArrayMethodBindings.method_is_same_typed")
	globalArrayMethodBindings.method_is_same_typed = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName40.AsGDExtensionConstStringNamePtr(), 2988181878)
	if globalArrayMethodBindings.method_is_same_typed == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_is_same_typed")
	}
	methodName41 := NewStringNameWithLatin1Chars("get_typed_builtin")
	defer methodName41.Destroy()
	log.Debug("globalArrayMethodBindings.method_get_typed_builtin")
	globalArrayMethodBindings.method_get_typed_builtin = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName41.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalArrayMethodBindings.method_get_typed_builtin == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_get_typed_builtin")
	}
	methodName42 := NewStringNameWithLatin1Chars("get_typed_class_name")
	defer methodName42.Destroy()
	log.Debug("globalArrayMethodBindings.method_get_typed_class_name")
	globalArrayMethodBindings.method_get_typed_class_name = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName42.AsGDExtensionConstStringNamePtr(), 1825232092)
	if globalArrayMethodBindings.method_get_typed_class_name == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_get_typed_class_name")
	}
	methodName43 := NewStringNameWithLatin1Chars("get_typed_script")
	defer methodName43.Destroy()
	log.Debug("globalArrayMethodBindings.method_get_typed_script")
	globalArrayMethodBindings.method_get_typed_script = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName43.AsGDExtensionConstStringNamePtr(), 1460142086)
	if globalArrayMethodBindings.method_get_typed_script == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_get_typed_script")
	}
	methodName44 := NewStringNameWithLatin1Chars("make_read_only")
	defer methodName44.Destroy()
	log.Debug("globalArrayMethodBindings.method_make_read_only")
	globalArrayMethodBindings.method_make_read_only = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName44.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalArrayMethodBindings.method_make_read_only == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_make_read_only")
	}
	methodName45 := NewStringNameWithLatin1Chars("is_read_only")
	defer methodName45.Destroy()
	log.Debug("globalArrayMethodBindings.method_is_read_only")
	globalArrayMethodBindings.method_is_read_only = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_ARRAY, methodName45.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalArrayMethodBindings.method_is_read_only == nil {
		missingMethods = append(missingMethods, "globalArrayMethodBindings.method_is_read_only")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalArrayMethodBindings.indexed_setter")
	globalArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.indexed_getter")
	globalArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: equal Variant")
	globalArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalArrayMethodBindings.operator: not_equal Variant")
	globalArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalArrayMethodBindings.operator: not ")
	globalArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalArrayMethodBindings.operator: in Dictionary")
	globalArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalArrayMethodBindings.operator: equal Array")
	globalArrayMethodBindings.operator_equal_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: not_equal Array")
	globalArrayMethodBindings.operator_not_equal_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: less Array")
	globalArrayMethodBindings.operator_less_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: less_equal Array")
	globalArrayMethodBindings.operator_less_equal_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_LESS_EQUAL, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: greater Array")
	globalArrayMethodBindings.operator_greater_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: greater_equal Array")
	globalArrayMethodBindings.operator_greater_equal_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_GREATER_EQUAL, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: add Array")
	globalArrayMethodBindings.operator_add_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalArrayMethodBindings.operator: in Array")
	globalArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("arrayInitBindings end")
}

type packedByteArrayMethodBindings struct {
	constructor_0                      GDExtensionPtrConstructor
	constructor_1                      GDExtensionPtrConstructor
	constructor_2                      GDExtensionPtrConstructor
	destructor                         GDExtensionPtrDestructor
	method_size                        GDExtensionPtrBuiltInMethod
	method_is_empty                    GDExtensionPtrBuiltInMethod
	method_set                         GDExtensionPtrBuiltInMethod
	method_push_back                   GDExtensionPtrBuiltInMethod
	method_append                      GDExtensionPtrBuiltInMethod
	method_append_array                GDExtensionPtrBuiltInMethod
	method_remove_at                   GDExtensionPtrBuiltInMethod
	method_insert                      GDExtensionPtrBuiltInMethod
	method_fill                        GDExtensionPtrBuiltInMethod
	method_resize                      GDExtensionPtrBuiltInMethod
	method_clear                       GDExtensionPtrBuiltInMethod
	method_has                         GDExtensionPtrBuiltInMethod
	method_reverse                     GDExtensionPtrBuiltInMethod
	method_slice                       GDExtensionPtrBuiltInMethod
	method_sort                        GDExtensionPtrBuiltInMethod
	method_bsearch                     GDExtensionPtrBuiltInMethod
	method_duplicate                   GDExtensionPtrBuiltInMethod
	method_find                        GDExtensionPtrBuiltInMethod
	method_rfind                       GDExtensionPtrBuiltInMethod
	method_count                       GDExtensionPtrBuiltInMethod
	method_get_string_from_ascii       GDExtensionPtrBuiltInMethod
	method_get_string_from_utf8        GDExtensionPtrBuiltInMethod
	method_get_string_from_utf16       GDExtensionPtrBuiltInMethod
	method_get_string_from_utf32       GDExtensionPtrBuiltInMethod
	method_get_string_from_wchar       GDExtensionPtrBuiltInMethod
	method_hex_encode                  GDExtensionPtrBuiltInMethod
	method_compress                    GDExtensionPtrBuiltInMethod
	method_decompress                  GDExtensionPtrBuiltInMethod
	method_decompress_dynamic          GDExtensionPtrBuiltInMethod
	method_decode_u8                   GDExtensionPtrBuiltInMethod
	method_decode_s8                   GDExtensionPtrBuiltInMethod
	method_decode_u16                  GDExtensionPtrBuiltInMethod
	method_decode_s16                  GDExtensionPtrBuiltInMethod
	method_decode_u32                  GDExtensionPtrBuiltInMethod
	method_decode_s32                  GDExtensionPtrBuiltInMethod
	method_decode_u64                  GDExtensionPtrBuiltInMethod
	method_decode_s64                  GDExtensionPtrBuiltInMethod
	method_decode_half                 GDExtensionPtrBuiltInMethod
	method_decode_float                GDExtensionPtrBuiltInMethod
	method_decode_double               GDExtensionPtrBuiltInMethod
	method_has_encoded_var             GDExtensionPtrBuiltInMethod
	method_decode_var                  GDExtensionPtrBuiltInMethod
	method_decode_var_size             GDExtensionPtrBuiltInMethod
	method_to_int32_array              GDExtensionPtrBuiltInMethod
	method_to_int64_array              GDExtensionPtrBuiltInMethod
	method_to_float32_array            GDExtensionPtrBuiltInMethod
	method_to_float64_array            GDExtensionPtrBuiltInMethod
	method_encode_u8                   GDExtensionPtrBuiltInMethod
	method_encode_s8                   GDExtensionPtrBuiltInMethod
	method_encode_u16                  GDExtensionPtrBuiltInMethod
	method_encode_s16                  GDExtensionPtrBuiltInMethod
	method_encode_u32                  GDExtensionPtrBuiltInMethod
	method_encode_s32                  GDExtensionPtrBuiltInMethod
	method_encode_u64                  GDExtensionPtrBuiltInMethod
	method_encode_s64                  GDExtensionPtrBuiltInMethod
	method_encode_half                 GDExtensionPtrBuiltInMethod
	method_encode_float                GDExtensionPtrBuiltInMethod
	method_encode_double               GDExtensionPtrBuiltInMethod
	method_encode_var                  GDExtensionPtrBuiltInMethod
	indexed_setter                     GDExtensionPtrIndexedSetter
	indexed_getter                     GDExtensionPtrIndexedGetter
	operator_equal_Variant             GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant         GDExtensionPtrOperatorEvaluator
	operator_not                       GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary             GDExtensionPtrOperatorEvaluator
	operator_in_Array                  GDExtensionPtrOperatorEvaluator
	operator_equal_PackedByteArray     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedByteArray GDExtensionPtrOperatorEvaluator
	operator_add_PackedByteArray       GDExtensionPtrOperatorEvaluator
}

var globalPackedByteArrayMethodBindings packedByteArrayMethodBindings

func packedByteArrayInitConstructorBindings() {
	log.Debug("packedByteArrayInitConstructorBindings called")

	log.Debug("globalPackedByteArrayMethodBindings.constructor_0")
	globalPackedByteArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, 0)
	log.Debug("globalPackedByteArrayMethodBindings.constructor_1")
	globalPackedByteArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, 1)
	log.Debug("globalPackedByteArrayMethodBindings.constructor_2")
	globalPackedByteArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, 2)
	log.Debug("globalPackedByteArrayMethodBindings.destructor")
	globalPackedByteArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
}

func packedByteArrayInitMethodBindings() {
	log.Debug("packedByteArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 59)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_size")
	globalPackedByteArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedByteArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_is_empty")
	globalPackedByteArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedByteArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_set")
	globalPackedByteArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_push_back")
	globalPackedByteArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 694024632)
	if globalPackedByteArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_append")
	globalPackedByteArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 694024632)
	if globalPackedByteArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_append_array")
	globalPackedByteArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 791097111)
	if globalPackedByteArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_remove_at")
	globalPackedByteArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedByteArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_insert")
	globalPackedByteArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 1487112728)
	if globalPackedByteArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_fill")
	globalPackedByteArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedByteArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_resize")
	globalPackedByteArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedByteArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_clear")
	globalPackedByteArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedByteArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_has")
	globalPackedByteArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 931488181)
	if globalPackedByteArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_reverse")
	globalPackedByteArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedByteArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_slice")
	globalPackedByteArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 2278869132)
	if globalPackedByteArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("sort")
	defer methodName14.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_sort")
	globalPackedByteArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedByteArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_sort")
	}
	methodName15 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName15.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_bsearch")
	globalPackedByteArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3380005890)
	if globalPackedByteArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_bsearch")
	}
	methodName16 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName16.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_duplicate")
	globalPackedByteArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 851781288)
	if globalPackedByteArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_duplicate")
	}
	methodName17 := NewStringNameWithLatin1Chars("find")
	defer methodName17.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_find")
	globalPackedByteArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 2984303840)
	if globalPackedByteArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_find")
	}
	methodName18 := NewStringNameWithLatin1Chars("rfind")
	defer methodName18.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_rfind")
	globalPackedByteArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 2984303840)
	if globalPackedByteArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_rfind")
	}
	methodName19 := NewStringNameWithLatin1Chars("count")
	defer methodName19.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_count")
	globalPackedByteArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_count")
	}
	methodName20 := NewStringNameWithLatin1Chars("get_string_from_ascii")
	defer methodName20.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_get_string_from_ascii")
	globalPackedByteArrayMethodBindings.method_get_string_from_ascii = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalPackedByteArrayMethodBindings.method_get_string_from_ascii == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_get_string_from_ascii")
	}
	methodName21 := NewStringNameWithLatin1Chars("get_string_from_utf8")
	defer methodName21.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_get_string_from_utf8")
	globalPackedByteArrayMethodBindings.method_get_string_from_utf8 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName21.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalPackedByteArrayMethodBindings.method_get_string_from_utf8 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_get_string_from_utf8")
	}
	methodName22 := NewStringNameWithLatin1Chars("get_string_from_utf16")
	defer methodName22.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_get_string_from_utf16")
	globalPackedByteArrayMethodBindings.method_get_string_from_utf16 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName22.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalPackedByteArrayMethodBindings.method_get_string_from_utf16 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_get_string_from_utf16")
	}
	methodName23 := NewStringNameWithLatin1Chars("get_string_from_utf32")
	defer methodName23.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_get_string_from_utf32")
	globalPackedByteArrayMethodBindings.method_get_string_from_utf32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName23.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalPackedByteArrayMethodBindings.method_get_string_from_utf32 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_get_string_from_utf32")
	}
	methodName24 := NewStringNameWithLatin1Chars("get_string_from_wchar")
	defer methodName24.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_get_string_from_wchar")
	globalPackedByteArrayMethodBindings.method_get_string_from_wchar = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName24.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalPackedByteArrayMethodBindings.method_get_string_from_wchar == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_get_string_from_wchar")
	}
	methodName25 := NewStringNameWithLatin1Chars("hex_encode")
	defer methodName25.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_hex_encode")
	globalPackedByteArrayMethodBindings.method_hex_encode = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName25.AsGDExtensionConstStringNamePtr(), 3942272618)
	if globalPackedByteArrayMethodBindings.method_hex_encode == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_hex_encode")
	}
	methodName26 := NewStringNameWithLatin1Chars("compress")
	defer methodName26.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_compress")
	globalPackedByteArrayMethodBindings.method_compress = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName26.AsGDExtensionConstStringNamePtr(), 1845905913)
	if globalPackedByteArrayMethodBindings.method_compress == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_compress")
	}
	methodName27 := NewStringNameWithLatin1Chars("decompress")
	defer methodName27.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decompress")
	globalPackedByteArrayMethodBindings.method_decompress = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName27.AsGDExtensionConstStringNamePtr(), 2278869132)
	if globalPackedByteArrayMethodBindings.method_decompress == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decompress")
	}
	methodName28 := NewStringNameWithLatin1Chars("decompress_dynamic")
	defer methodName28.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decompress_dynamic")
	globalPackedByteArrayMethodBindings.method_decompress_dynamic = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName28.AsGDExtensionConstStringNamePtr(), 2278869132)
	if globalPackedByteArrayMethodBindings.method_decompress_dynamic == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decompress_dynamic")
	}
	methodName29 := NewStringNameWithLatin1Chars("decode_u8")
	defer methodName29.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_u8")
	globalPackedByteArrayMethodBindings.method_decode_u8 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName29.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_u8 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_u8")
	}
	methodName30 := NewStringNameWithLatin1Chars("decode_s8")
	defer methodName30.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_s8")
	globalPackedByteArrayMethodBindings.method_decode_s8 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName30.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_s8 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_s8")
	}
	methodName31 := NewStringNameWithLatin1Chars("decode_u16")
	defer methodName31.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_u16")
	globalPackedByteArrayMethodBindings.method_decode_u16 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName31.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_u16 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_u16")
	}
	methodName32 := NewStringNameWithLatin1Chars("decode_s16")
	defer methodName32.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_s16")
	globalPackedByteArrayMethodBindings.method_decode_s16 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName32.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_s16 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_s16")
	}
	methodName33 := NewStringNameWithLatin1Chars("decode_u32")
	defer methodName33.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_u32")
	globalPackedByteArrayMethodBindings.method_decode_u32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName33.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_u32 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_u32")
	}
	methodName34 := NewStringNameWithLatin1Chars("decode_s32")
	defer methodName34.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_s32")
	globalPackedByteArrayMethodBindings.method_decode_s32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName34.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_s32 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_s32")
	}
	methodName35 := NewStringNameWithLatin1Chars("decode_u64")
	defer methodName35.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_u64")
	globalPackedByteArrayMethodBindings.method_decode_u64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName35.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_u64 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_u64")
	}
	methodName36 := NewStringNameWithLatin1Chars("decode_s64")
	defer methodName36.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_s64")
	globalPackedByteArrayMethodBindings.method_decode_s64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName36.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedByteArrayMethodBindings.method_decode_s64 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_s64")
	}
	methodName37 := NewStringNameWithLatin1Chars("decode_half")
	defer methodName37.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_half")
	globalPackedByteArrayMethodBindings.method_decode_half = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName37.AsGDExtensionConstStringNamePtr(), 1401583798)
	if globalPackedByteArrayMethodBindings.method_decode_half == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_half")
	}
	methodName38 := NewStringNameWithLatin1Chars("decode_float")
	defer methodName38.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_float")
	globalPackedByteArrayMethodBindings.method_decode_float = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName38.AsGDExtensionConstStringNamePtr(), 1401583798)
	if globalPackedByteArrayMethodBindings.method_decode_float == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_float")
	}
	methodName39 := NewStringNameWithLatin1Chars("decode_double")
	defer methodName39.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_double")
	globalPackedByteArrayMethodBindings.method_decode_double = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName39.AsGDExtensionConstStringNamePtr(), 1401583798)
	if globalPackedByteArrayMethodBindings.method_decode_double == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_double")
	}
	methodName40 := NewStringNameWithLatin1Chars("has_encoded_var")
	defer methodName40.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_has_encoded_var")
	globalPackedByteArrayMethodBindings.method_has_encoded_var = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName40.AsGDExtensionConstStringNamePtr(), 2914632957)
	if globalPackedByteArrayMethodBindings.method_has_encoded_var == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_has_encoded_var")
	}
	methodName41 := NewStringNameWithLatin1Chars("decode_var")
	defer methodName41.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_var")
	globalPackedByteArrayMethodBindings.method_decode_var = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName41.AsGDExtensionConstStringNamePtr(), 1740420038)
	if globalPackedByteArrayMethodBindings.method_decode_var == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_var")
	}
	methodName42 := NewStringNameWithLatin1Chars("decode_var_size")
	defer methodName42.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_decode_var_size")
	globalPackedByteArrayMethodBindings.method_decode_var_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName42.AsGDExtensionConstStringNamePtr(), 954237325)
	if globalPackedByteArrayMethodBindings.method_decode_var_size == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_decode_var_size")
	}
	methodName43 := NewStringNameWithLatin1Chars("to_int32_array")
	defer methodName43.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_to_int32_array")
	globalPackedByteArrayMethodBindings.method_to_int32_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName43.AsGDExtensionConstStringNamePtr(), 3158844420)
	if globalPackedByteArrayMethodBindings.method_to_int32_array == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_to_int32_array")
	}
	methodName44 := NewStringNameWithLatin1Chars("to_int64_array")
	defer methodName44.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_to_int64_array")
	globalPackedByteArrayMethodBindings.method_to_int64_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName44.AsGDExtensionConstStringNamePtr(), 1961294120)
	if globalPackedByteArrayMethodBindings.method_to_int64_array == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_to_int64_array")
	}
	methodName45 := NewStringNameWithLatin1Chars("to_float32_array")
	defer methodName45.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_to_float32_array")
	globalPackedByteArrayMethodBindings.method_to_float32_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName45.AsGDExtensionConstStringNamePtr(), 3575107827)
	if globalPackedByteArrayMethodBindings.method_to_float32_array == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_to_float32_array")
	}
	methodName46 := NewStringNameWithLatin1Chars("to_float64_array")
	defer methodName46.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_to_float64_array")
	globalPackedByteArrayMethodBindings.method_to_float64_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName46.AsGDExtensionConstStringNamePtr(), 1627308337)
	if globalPackedByteArrayMethodBindings.method_to_float64_array == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_to_float64_array")
	}
	methodName47 := NewStringNameWithLatin1Chars("encode_u8")
	defer methodName47.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_u8")
	globalPackedByteArrayMethodBindings.method_encode_u8 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName47.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_u8 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_u8")
	}
	methodName48 := NewStringNameWithLatin1Chars("encode_s8")
	defer methodName48.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_s8")
	globalPackedByteArrayMethodBindings.method_encode_s8 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName48.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_s8 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_s8")
	}
	methodName49 := NewStringNameWithLatin1Chars("encode_u16")
	defer methodName49.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_u16")
	globalPackedByteArrayMethodBindings.method_encode_u16 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName49.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_u16 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_u16")
	}
	methodName50 := NewStringNameWithLatin1Chars("encode_s16")
	defer methodName50.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_s16")
	globalPackedByteArrayMethodBindings.method_encode_s16 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName50.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_s16 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_s16")
	}
	methodName51 := NewStringNameWithLatin1Chars("encode_u32")
	defer methodName51.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_u32")
	globalPackedByteArrayMethodBindings.method_encode_u32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName51.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_u32 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_u32")
	}
	methodName52 := NewStringNameWithLatin1Chars("encode_s32")
	defer methodName52.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_s32")
	globalPackedByteArrayMethodBindings.method_encode_s32 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName52.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_s32 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_s32")
	}
	methodName53 := NewStringNameWithLatin1Chars("encode_u64")
	defer methodName53.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_u64")
	globalPackedByteArrayMethodBindings.method_encode_u64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName53.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_u64 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_u64")
	}
	methodName54 := NewStringNameWithLatin1Chars("encode_s64")
	defer methodName54.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_s64")
	globalPackedByteArrayMethodBindings.method_encode_s64 = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName54.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedByteArrayMethodBindings.method_encode_s64 == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_s64")
	}
	methodName55 := NewStringNameWithLatin1Chars("encode_half")
	defer methodName55.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_half")
	globalPackedByteArrayMethodBindings.method_encode_half = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName55.AsGDExtensionConstStringNamePtr(), 1113000516)
	if globalPackedByteArrayMethodBindings.method_encode_half == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_half")
	}
	methodName56 := NewStringNameWithLatin1Chars("encode_float")
	defer methodName56.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_float")
	globalPackedByteArrayMethodBindings.method_encode_float = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName56.AsGDExtensionConstStringNamePtr(), 1113000516)
	if globalPackedByteArrayMethodBindings.method_encode_float == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_float")
	}
	methodName57 := NewStringNameWithLatin1Chars("encode_double")
	defer methodName57.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_double")
	globalPackedByteArrayMethodBindings.method_encode_double = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName57.AsGDExtensionConstStringNamePtr(), 1113000516)
	if globalPackedByteArrayMethodBindings.method_encode_double == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_double")
	}
	methodName58 := NewStringNameWithLatin1Chars("encode_var")
	defer methodName58.Destroy()
	log.Debug("globalPackedByteArrayMethodBindings.method_encode_var")
	globalPackedByteArrayMethodBindings.method_encode_var = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, methodName58.AsGDExtensionConstStringNamePtr(), 2604460497)
	if globalPackedByteArrayMethodBindings.method_encode_var == nil {
		missingMethods = append(missingMethods, "globalPackedByteArrayMethodBindings.method_encode_var")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedByteArrayMethodBindings.indexed_setter")
	globalPackedByteArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("globalPackedByteArrayMethodBindings.indexed_getter")
	globalPackedByteArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("globalPackedByteArrayMethodBindings.operator: equal Variant")
	globalPackedByteArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedByteArrayMethodBindings.operator: not_equal Variant")
	globalPackedByteArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedByteArrayMethodBindings.operator: not ")
	globalPackedByteArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedByteArrayMethodBindings.operator: in Dictionary")
	globalPackedByteArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedByteArrayMethodBindings.operator: in Array")
	globalPackedByteArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedByteArrayMethodBindings.operator: equal PackedByteArray")
	globalPackedByteArrayMethodBindings.operator_equal_PackedByteArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("globalPackedByteArrayMethodBindings.operator: not_equal PackedByteArray")
	globalPackedByteArrayMethodBindings.operator_not_equal_PackedByteArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("globalPackedByteArrayMethodBindings.operator: add PackedByteArray")
	globalPackedByteArrayMethodBindings.operator_add_PackedByteArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY)
	log.Debug("packedByteArrayInitBindings end")
}

type packedInt32ArrayMethodBindings struct {
	constructor_0                       GDExtensionPtrConstructor
	constructor_1                       GDExtensionPtrConstructor
	constructor_2                       GDExtensionPtrConstructor
	destructor                          GDExtensionPtrDestructor
	method_size                         GDExtensionPtrBuiltInMethod
	method_is_empty                     GDExtensionPtrBuiltInMethod
	method_set                          GDExtensionPtrBuiltInMethod
	method_push_back                    GDExtensionPtrBuiltInMethod
	method_append                       GDExtensionPtrBuiltInMethod
	method_append_array                 GDExtensionPtrBuiltInMethod
	method_remove_at                    GDExtensionPtrBuiltInMethod
	method_insert                       GDExtensionPtrBuiltInMethod
	method_fill                         GDExtensionPtrBuiltInMethod
	method_resize                       GDExtensionPtrBuiltInMethod
	method_clear                        GDExtensionPtrBuiltInMethod
	method_has                          GDExtensionPtrBuiltInMethod
	method_reverse                      GDExtensionPtrBuiltInMethod
	method_slice                        GDExtensionPtrBuiltInMethod
	method_to_byte_array                GDExtensionPtrBuiltInMethod
	method_sort                         GDExtensionPtrBuiltInMethod
	method_bsearch                      GDExtensionPtrBuiltInMethod
	method_duplicate                    GDExtensionPtrBuiltInMethod
	method_find                         GDExtensionPtrBuiltInMethod
	method_rfind                        GDExtensionPtrBuiltInMethod
	method_count                        GDExtensionPtrBuiltInMethod
	indexed_setter                      GDExtensionPtrIndexedSetter
	indexed_getter                      GDExtensionPtrIndexedGetter
	operator_equal_Variant              GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant          GDExtensionPtrOperatorEvaluator
	operator_not                        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary              GDExtensionPtrOperatorEvaluator
	operator_in_Array                   GDExtensionPtrOperatorEvaluator
	operator_equal_PackedInt32Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedInt32Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedInt32Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedInt32ArrayMethodBindings packedInt32ArrayMethodBindings

func packedInt32ArrayInitConstructorBindings() {
	log.Debug("packedInt32ArrayInitConstructorBindings called")

	log.Debug("globalPackedInt32ArrayMethodBindings.constructor_0")
	globalPackedInt32ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, 0)
	log.Debug("globalPackedInt32ArrayMethodBindings.constructor_1")
	globalPackedInt32ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, 1)
	log.Debug("globalPackedInt32ArrayMethodBindings.constructor_2")
	globalPackedInt32ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, 2)
	log.Debug("globalPackedInt32ArrayMethodBindings.destructor")
	globalPackedInt32ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
}

func packedInt32ArrayInitMethodBindings() {
	log.Debug("packedInt32ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_size")
	globalPackedInt32ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedInt32ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_is_empty")
	globalPackedInt32ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedInt32ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_set")
	globalPackedInt32ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedInt32ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_push_back")
	globalPackedInt32ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 694024632)
	if globalPackedInt32ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_append")
	globalPackedInt32ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 694024632)
	if globalPackedInt32ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_append_array")
	globalPackedInt32ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 1087733270)
	if globalPackedInt32ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_remove_at")
	globalPackedInt32ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedInt32ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_insert")
	globalPackedInt32ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 1487112728)
	if globalPackedInt32ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_fill")
	globalPackedInt32ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedInt32ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_resize")
	globalPackedInt32ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedInt32ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_clear")
	globalPackedInt32ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedInt32ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_has")
	globalPackedInt32ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 931488181)
	if globalPackedInt32ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_reverse")
	globalPackedInt32ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedInt32ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_slice")
	globalPackedInt32ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 1216021098)
	if globalPackedInt32ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_to_byte_array")
	globalPackedInt32ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedInt32ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_sort")
	globalPackedInt32ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedInt32ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_bsearch")
	globalPackedInt32ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 3380005890)
	if globalPackedInt32ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_duplicate")
	globalPackedInt32ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 1997843129)
	if globalPackedInt32ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_find")
	globalPackedInt32ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 2984303840)
	if globalPackedInt32ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_rfind")
	globalPackedInt32ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 2984303840)
	if globalPackedInt32ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedInt32ArrayMethodBindings.method_count")
	globalPackedInt32ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedInt32ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedInt32ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedInt32ArrayMethodBindings.indexed_setter")
	globalPackedInt32ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("globalPackedInt32ArrayMethodBindings.indexed_getter")
	globalPackedInt32ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: equal Variant")
	globalPackedInt32ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: not_equal Variant")
	globalPackedInt32ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: not ")
	globalPackedInt32ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: in Dictionary")
	globalPackedInt32ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: in Array")
	globalPackedInt32ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: equal PackedInt32Array")
	globalPackedInt32ArrayMethodBindings.operator_equal_PackedInt32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: not_equal PackedInt32Array")
	globalPackedInt32ArrayMethodBindings.operator_not_equal_PackedInt32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("globalPackedInt32ArrayMethodBindings.operator: add PackedInt32Array")
	globalPackedInt32ArrayMethodBindings.operator_add_PackedInt32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY)
	log.Debug("packedInt32ArrayInitBindings end")
}

type packedInt64ArrayMethodBindings struct {
	constructor_0                       GDExtensionPtrConstructor
	constructor_1                       GDExtensionPtrConstructor
	constructor_2                       GDExtensionPtrConstructor
	destructor                          GDExtensionPtrDestructor
	method_size                         GDExtensionPtrBuiltInMethod
	method_is_empty                     GDExtensionPtrBuiltInMethod
	method_set                          GDExtensionPtrBuiltInMethod
	method_push_back                    GDExtensionPtrBuiltInMethod
	method_append                       GDExtensionPtrBuiltInMethod
	method_append_array                 GDExtensionPtrBuiltInMethod
	method_remove_at                    GDExtensionPtrBuiltInMethod
	method_insert                       GDExtensionPtrBuiltInMethod
	method_fill                         GDExtensionPtrBuiltInMethod
	method_resize                       GDExtensionPtrBuiltInMethod
	method_clear                        GDExtensionPtrBuiltInMethod
	method_has                          GDExtensionPtrBuiltInMethod
	method_reverse                      GDExtensionPtrBuiltInMethod
	method_slice                        GDExtensionPtrBuiltInMethod
	method_to_byte_array                GDExtensionPtrBuiltInMethod
	method_sort                         GDExtensionPtrBuiltInMethod
	method_bsearch                      GDExtensionPtrBuiltInMethod
	method_duplicate                    GDExtensionPtrBuiltInMethod
	method_find                         GDExtensionPtrBuiltInMethod
	method_rfind                        GDExtensionPtrBuiltInMethod
	method_count                        GDExtensionPtrBuiltInMethod
	indexed_setter                      GDExtensionPtrIndexedSetter
	indexed_getter                      GDExtensionPtrIndexedGetter
	operator_equal_Variant              GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant          GDExtensionPtrOperatorEvaluator
	operator_not                        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary              GDExtensionPtrOperatorEvaluator
	operator_in_Array                   GDExtensionPtrOperatorEvaluator
	operator_equal_PackedInt64Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedInt64Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedInt64Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedInt64ArrayMethodBindings packedInt64ArrayMethodBindings

func packedInt64ArrayInitConstructorBindings() {
	log.Debug("packedInt64ArrayInitConstructorBindings called")

	log.Debug("globalPackedInt64ArrayMethodBindings.constructor_0")
	globalPackedInt64ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, 0)
	log.Debug("globalPackedInt64ArrayMethodBindings.constructor_1")
	globalPackedInt64ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, 1)
	log.Debug("globalPackedInt64ArrayMethodBindings.constructor_2")
	globalPackedInt64ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, 2)
	log.Debug("globalPackedInt64ArrayMethodBindings.destructor")
	globalPackedInt64ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
}

func packedInt64ArrayInitMethodBindings() {
	log.Debug("packedInt64ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_size")
	globalPackedInt64ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedInt64ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_is_empty")
	globalPackedInt64ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedInt64ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_set")
	globalPackedInt64ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 3638975848)
	if globalPackedInt64ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_push_back")
	globalPackedInt64ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 694024632)
	if globalPackedInt64ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_append")
	globalPackedInt64ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 694024632)
	if globalPackedInt64ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_append_array")
	globalPackedInt64ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 2090311302)
	if globalPackedInt64ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_remove_at")
	globalPackedInt64ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedInt64ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_insert")
	globalPackedInt64ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 1487112728)
	if globalPackedInt64ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_fill")
	globalPackedInt64ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedInt64ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_resize")
	globalPackedInt64ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedInt64ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_clear")
	globalPackedInt64ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedInt64ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_has")
	globalPackedInt64ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 931488181)
	if globalPackedInt64ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_reverse")
	globalPackedInt64ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedInt64ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_slice")
	globalPackedInt64ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 1726550804)
	if globalPackedInt64ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_to_byte_array")
	globalPackedInt64ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedInt64ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_sort")
	globalPackedInt64ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedInt64ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_bsearch")
	globalPackedInt64ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 3380005890)
	if globalPackedInt64ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_duplicate")
	globalPackedInt64ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 2376370016)
	if globalPackedInt64ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_find")
	globalPackedInt64ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 2984303840)
	if globalPackedInt64ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_rfind")
	globalPackedInt64ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 2984303840)
	if globalPackedInt64ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedInt64ArrayMethodBindings.method_count")
	globalPackedInt64ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 4103005248)
	if globalPackedInt64ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedInt64ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedInt64ArrayMethodBindings.indexed_setter")
	globalPackedInt64ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("globalPackedInt64ArrayMethodBindings.indexed_getter")
	globalPackedInt64ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: equal Variant")
	globalPackedInt64ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: not_equal Variant")
	globalPackedInt64ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: not ")
	globalPackedInt64ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: in Dictionary")
	globalPackedInt64ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: in Array")
	globalPackedInt64ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: equal PackedInt64Array")
	globalPackedInt64ArrayMethodBindings.operator_equal_PackedInt64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: not_equal PackedInt64Array")
	globalPackedInt64ArrayMethodBindings.operator_not_equal_PackedInt64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("globalPackedInt64ArrayMethodBindings.operator: add PackedInt64Array")
	globalPackedInt64ArrayMethodBindings.operator_add_PackedInt64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY)
	log.Debug("packedInt64ArrayInitBindings end")
}

type packedFloat32ArrayMethodBindings struct {
	constructor_0                         GDExtensionPtrConstructor
	constructor_1                         GDExtensionPtrConstructor
	constructor_2                         GDExtensionPtrConstructor
	destructor                            GDExtensionPtrDestructor
	method_size                           GDExtensionPtrBuiltInMethod
	method_is_empty                       GDExtensionPtrBuiltInMethod
	method_set                            GDExtensionPtrBuiltInMethod
	method_push_back                      GDExtensionPtrBuiltInMethod
	method_append                         GDExtensionPtrBuiltInMethod
	method_append_array                   GDExtensionPtrBuiltInMethod
	method_remove_at                      GDExtensionPtrBuiltInMethod
	method_insert                         GDExtensionPtrBuiltInMethod
	method_fill                           GDExtensionPtrBuiltInMethod
	method_resize                         GDExtensionPtrBuiltInMethod
	method_clear                          GDExtensionPtrBuiltInMethod
	method_has                            GDExtensionPtrBuiltInMethod
	method_reverse                        GDExtensionPtrBuiltInMethod
	method_slice                          GDExtensionPtrBuiltInMethod
	method_to_byte_array                  GDExtensionPtrBuiltInMethod
	method_sort                           GDExtensionPtrBuiltInMethod
	method_bsearch                        GDExtensionPtrBuiltInMethod
	method_duplicate                      GDExtensionPtrBuiltInMethod
	method_find                           GDExtensionPtrBuiltInMethod
	method_rfind                          GDExtensionPtrBuiltInMethod
	method_count                          GDExtensionPtrBuiltInMethod
	indexed_setter                        GDExtensionPtrIndexedSetter
	indexed_getter                        GDExtensionPtrIndexedGetter
	operator_equal_Variant                GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                          GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary                GDExtensionPtrOperatorEvaluator
	operator_in_Array                     GDExtensionPtrOperatorEvaluator
	operator_equal_PackedFloat32Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedFloat32Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedFloat32Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedFloat32ArrayMethodBindings packedFloat32ArrayMethodBindings

func packedFloat32ArrayInitConstructorBindings() {
	log.Debug("packedFloat32ArrayInitConstructorBindings called")

	log.Debug("globalPackedFloat32ArrayMethodBindings.constructor_0")
	globalPackedFloat32ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, 0)
	log.Debug("globalPackedFloat32ArrayMethodBindings.constructor_1")
	globalPackedFloat32ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, 1)
	log.Debug("globalPackedFloat32ArrayMethodBindings.constructor_2")
	globalPackedFloat32ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, 2)
	log.Debug("globalPackedFloat32ArrayMethodBindings.destructor")
	globalPackedFloat32ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
}

func packedFloat32ArrayInitMethodBindings() {
	log.Debug("packedFloat32ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_size")
	globalPackedFloat32ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedFloat32ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_is_empty")
	globalPackedFloat32ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedFloat32ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_set")
	globalPackedFloat32ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 1113000516)
	if globalPackedFloat32ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_push_back")
	globalPackedFloat32ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 4094791666)
	if globalPackedFloat32ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_append")
	globalPackedFloat32ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 4094791666)
	if globalPackedFloat32ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_append_array")
	globalPackedFloat32ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 2981316639)
	if globalPackedFloat32ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_remove_at")
	globalPackedFloat32ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedFloat32ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_insert")
	globalPackedFloat32ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 1379903876)
	if globalPackedFloat32ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_fill")
	globalPackedFloat32ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 833936903)
	if globalPackedFloat32ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_resize")
	globalPackedFloat32ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedFloat32ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_clear")
	globalPackedFloat32ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedFloat32ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_has")
	globalPackedFloat32ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 1296369134)
	if globalPackedFloat32ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_reverse")
	globalPackedFloat32ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedFloat32ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_slice")
	globalPackedFloat32ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 1418229160)
	if globalPackedFloat32ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_to_byte_array")
	globalPackedFloat32ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedFloat32ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_sort")
	globalPackedFloat32ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedFloat32ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_bsearch")
	globalPackedFloat32ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 1188816338)
	if globalPackedFloat32ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_duplicate")
	globalPackedFloat32ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 831114784)
	if globalPackedFloat32ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_find")
	globalPackedFloat32ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 1343150241)
	if globalPackedFloat32ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_rfind")
	globalPackedFloat32ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 1343150241)
	if globalPackedFloat32ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedFloat32ArrayMethodBindings.method_count")
	globalPackedFloat32ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 2859915090)
	if globalPackedFloat32ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedFloat32ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedFloat32ArrayMethodBindings.indexed_setter")
	globalPackedFloat32ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("globalPackedFloat32ArrayMethodBindings.indexed_getter")
	globalPackedFloat32ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: equal Variant")
	globalPackedFloat32ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: not_equal Variant")
	globalPackedFloat32ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: not ")
	globalPackedFloat32ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: in Dictionary")
	globalPackedFloat32ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: in Array")
	globalPackedFloat32ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: equal PackedFloat32Array")
	globalPackedFloat32ArrayMethodBindings.operator_equal_PackedFloat32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: not_equal PackedFloat32Array")
	globalPackedFloat32ArrayMethodBindings.operator_not_equal_PackedFloat32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("globalPackedFloat32ArrayMethodBindings.operator: add PackedFloat32Array")
	globalPackedFloat32ArrayMethodBindings.operator_add_PackedFloat32Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY)
	log.Debug("packedFloat32ArrayInitBindings end")
}

type packedFloat64ArrayMethodBindings struct {
	constructor_0                         GDExtensionPtrConstructor
	constructor_1                         GDExtensionPtrConstructor
	constructor_2                         GDExtensionPtrConstructor
	destructor                            GDExtensionPtrDestructor
	method_size                           GDExtensionPtrBuiltInMethod
	method_is_empty                       GDExtensionPtrBuiltInMethod
	method_set                            GDExtensionPtrBuiltInMethod
	method_push_back                      GDExtensionPtrBuiltInMethod
	method_append                         GDExtensionPtrBuiltInMethod
	method_append_array                   GDExtensionPtrBuiltInMethod
	method_remove_at                      GDExtensionPtrBuiltInMethod
	method_insert                         GDExtensionPtrBuiltInMethod
	method_fill                           GDExtensionPtrBuiltInMethod
	method_resize                         GDExtensionPtrBuiltInMethod
	method_clear                          GDExtensionPtrBuiltInMethod
	method_has                            GDExtensionPtrBuiltInMethod
	method_reverse                        GDExtensionPtrBuiltInMethod
	method_slice                          GDExtensionPtrBuiltInMethod
	method_to_byte_array                  GDExtensionPtrBuiltInMethod
	method_sort                           GDExtensionPtrBuiltInMethod
	method_bsearch                        GDExtensionPtrBuiltInMethod
	method_duplicate                      GDExtensionPtrBuiltInMethod
	method_find                           GDExtensionPtrBuiltInMethod
	method_rfind                          GDExtensionPtrBuiltInMethod
	method_count                          GDExtensionPtrBuiltInMethod
	indexed_setter                        GDExtensionPtrIndexedSetter
	indexed_getter                        GDExtensionPtrIndexedGetter
	operator_equal_Variant                GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                          GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary                GDExtensionPtrOperatorEvaluator
	operator_in_Array                     GDExtensionPtrOperatorEvaluator
	operator_equal_PackedFloat64Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedFloat64Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedFloat64Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedFloat64ArrayMethodBindings packedFloat64ArrayMethodBindings

func packedFloat64ArrayInitConstructorBindings() {
	log.Debug("packedFloat64ArrayInitConstructorBindings called")

	log.Debug("globalPackedFloat64ArrayMethodBindings.constructor_0")
	globalPackedFloat64ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, 0)
	log.Debug("globalPackedFloat64ArrayMethodBindings.constructor_1")
	globalPackedFloat64ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, 1)
	log.Debug("globalPackedFloat64ArrayMethodBindings.constructor_2")
	globalPackedFloat64ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, 2)
	log.Debug("globalPackedFloat64ArrayMethodBindings.destructor")
	globalPackedFloat64ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
}

func packedFloat64ArrayInitMethodBindings() {
	log.Debug("packedFloat64ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_size")
	globalPackedFloat64ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedFloat64ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_is_empty")
	globalPackedFloat64ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedFloat64ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_set")
	globalPackedFloat64ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 1113000516)
	if globalPackedFloat64ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_push_back")
	globalPackedFloat64ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 4094791666)
	if globalPackedFloat64ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_append")
	globalPackedFloat64ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 4094791666)
	if globalPackedFloat64ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_append_array")
	globalPackedFloat64ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 792078629)
	if globalPackedFloat64ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_remove_at")
	globalPackedFloat64ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedFloat64ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_insert")
	globalPackedFloat64ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 1379903876)
	if globalPackedFloat64ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_fill")
	globalPackedFloat64ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 833936903)
	if globalPackedFloat64ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_resize")
	globalPackedFloat64ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedFloat64ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_clear")
	globalPackedFloat64ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedFloat64ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_has")
	globalPackedFloat64ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 1296369134)
	if globalPackedFloat64ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_reverse")
	globalPackedFloat64ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedFloat64ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_slice")
	globalPackedFloat64ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 2192974324)
	if globalPackedFloat64ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_to_byte_array")
	globalPackedFloat64ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedFloat64ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_sort")
	globalPackedFloat64ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedFloat64ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_bsearch")
	globalPackedFloat64ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 1188816338)
	if globalPackedFloat64ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_duplicate")
	globalPackedFloat64ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 949266573)
	if globalPackedFloat64ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_find")
	globalPackedFloat64ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 1343150241)
	if globalPackedFloat64ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_rfind")
	globalPackedFloat64ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 1343150241)
	if globalPackedFloat64ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedFloat64ArrayMethodBindings.method_count")
	globalPackedFloat64ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 2859915090)
	if globalPackedFloat64ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedFloat64ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedFloat64ArrayMethodBindings.indexed_setter")
	globalPackedFloat64ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("globalPackedFloat64ArrayMethodBindings.indexed_getter")
	globalPackedFloat64ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: equal Variant")
	globalPackedFloat64ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: not_equal Variant")
	globalPackedFloat64ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: not ")
	globalPackedFloat64ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: in Dictionary")
	globalPackedFloat64ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: in Array")
	globalPackedFloat64ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: equal PackedFloat64Array")
	globalPackedFloat64ArrayMethodBindings.operator_equal_PackedFloat64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: not_equal PackedFloat64Array")
	globalPackedFloat64ArrayMethodBindings.operator_not_equal_PackedFloat64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("globalPackedFloat64ArrayMethodBindings.operator: add PackedFloat64Array")
	globalPackedFloat64ArrayMethodBindings.operator_add_PackedFloat64Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY)
	log.Debug("packedFloat64ArrayInitBindings end")
}

type packedStringArrayMethodBindings struct {
	constructor_0                        GDExtensionPtrConstructor
	constructor_1                        GDExtensionPtrConstructor
	constructor_2                        GDExtensionPtrConstructor
	destructor                           GDExtensionPtrDestructor
	method_size                          GDExtensionPtrBuiltInMethod
	method_is_empty                      GDExtensionPtrBuiltInMethod
	method_set                           GDExtensionPtrBuiltInMethod
	method_push_back                     GDExtensionPtrBuiltInMethod
	method_append                        GDExtensionPtrBuiltInMethod
	method_append_array                  GDExtensionPtrBuiltInMethod
	method_remove_at                     GDExtensionPtrBuiltInMethod
	method_insert                        GDExtensionPtrBuiltInMethod
	method_fill                          GDExtensionPtrBuiltInMethod
	method_resize                        GDExtensionPtrBuiltInMethod
	method_clear                         GDExtensionPtrBuiltInMethod
	method_has                           GDExtensionPtrBuiltInMethod
	method_reverse                       GDExtensionPtrBuiltInMethod
	method_slice                         GDExtensionPtrBuiltInMethod
	method_to_byte_array                 GDExtensionPtrBuiltInMethod
	method_sort                          GDExtensionPtrBuiltInMethod
	method_bsearch                       GDExtensionPtrBuiltInMethod
	method_duplicate                     GDExtensionPtrBuiltInMethod
	method_find                          GDExtensionPtrBuiltInMethod
	method_rfind                         GDExtensionPtrBuiltInMethod
	method_count                         GDExtensionPtrBuiltInMethod
	indexed_setter                       GDExtensionPtrIndexedSetter
	indexed_getter                       GDExtensionPtrIndexedGetter
	operator_equal_Variant               GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant           GDExtensionPtrOperatorEvaluator
	operator_not                         GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary               GDExtensionPtrOperatorEvaluator
	operator_in_Array                    GDExtensionPtrOperatorEvaluator
	operator_equal_PackedStringArray     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedStringArray GDExtensionPtrOperatorEvaluator
	operator_add_PackedStringArray       GDExtensionPtrOperatorEvaluator
}

var globalPackedStringArrayMethodBindings packedStringArrayMethodBindings

func packedStringArrayInitConstructorBindings() {
	log.Debug("packedStringArrayInitConstructorBindings called")

	log.Debug("globalPackedStringArrayMethodBindings.constructor_0")
	globalPackedStringArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, 0)
	log.Debug("globalPackedStringArrayMethodBindings.constructor_1")
	globalPackedStringArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, 1)
	log.Debug("globalPackedStringArrayMethodBindings.constructor_2")
	globalPackedStringArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, 2)
	log.Debug("globalPackedStringArrayMethodBindings.destructor")
	globalPackedStringArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
}

func packedStringArrayInitMethodBindings() {
	log.Debug("packedStringArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_size")
	globalPackedStringArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedStringArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_is_empty")
	globalPackedStringArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedStringArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_set")
	globalPackedStringArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 725585539)
	if globalPackedStringArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_push_back")
	globalPackedStringArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 816187996)
	if globalPackedStringArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_append")
	globalPackedStringArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 816187996)
	if globalPackedStringArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_append_array")
	globalPackedStringArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 1120103966)
	if globalPackedStringArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_remove_at")
	globalPackedStringArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedStringArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_insert")
	globalPackedStringArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 2432393153)
	if globalPackedStringArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_fill")
	globalPackedStringArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 3174917410)
	if globalPackedStringArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_resize")
	globalPackedStringArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedStringArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_clear")
	globalPackedStringArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedStringArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_has")
	globalPackedStringArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 2566493496)
	if globalPackedStringArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_reverse")
	globalPackedStringArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedStringArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_slice")
	globalPackedStringArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 2094601407)
	if globalPackedStringArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_to_byte_array")
	globalPackedStringArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedStringArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_sort")
	globalPackedStringArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedStringArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_bsearch")
	globalPackedStringArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 328976671)
	if globalPackedStringArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_duplicate")
	globalPackedStringArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 2991231410)
	if globalPackedStringArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_find")
	globalPackedStringArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalPackedStringArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_rfind")
	globalPackedStringArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 1760645412)
	if globalPackedStringArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedStringArrayMethodBindings.method_count")
	globalPackedStringArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 2920860731)
	if globalPackedStringArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedStringArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedStringArrayMethodBindings.indexed_setter")
	globalPackedStringArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalPackedStringArrayMethodBindings.indexed_getter")
	globalPackedStringArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalPackedStringArrayMethodBindings.operator: equal Variant")
	globalPackedStringArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedStringArrayMethodBindings.operator: not_equal Variant")
	globalPackedStringArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedStringArrayMethodBindings.operator: not ")
	globalPackedStringArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedStringArrayMethodBindings.operator: in Dictionary")
	globalPackedStringArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedStringArrayMethodBindings.operator: in Array")
	globalPackedStringArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedStringArrayMethodBindings.operator: equal PackedStringArray")
	globalPackedStringArrayMethodBindings.operator_equal_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalPackedStringArrayMethodBindings.operator: not_equal PackedStringArray")
	globalPackedStringArrayMethodBindings.operator_not_equal_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("globalPackedStringArrayMethodBindings.operator: add PackedStringArray")
	globalPackedStringArrayMethodBindings.operator_add_PackedStringArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY)
	log.Debug("packedStringArrayInitBindings end")
}

type packedVector2ArrayMethodBindings struct {
	constructor_0                         GDExtensionPtrConstructor
	constructor_1                         GDExtensionPtrConstructor
	constructor_2                         GDExtensionPtrConstructor
	destructor                            GDExtensionPtrDestructor
	method_size                           GDExtensionPtrBuiltInMethod
	method_is_empty                       GDExtensionPtrBuiltInMethod
	method_set                            GDExtensionPtrBuiltInMethod
	method_push_back                      GDExtensionPtrBuiltInMethod
	method_append                         GDExtensionPtrBuiltInMethod
	method_append_array                   GDExtensionPtrBuiltInMethod
	method_remove_at                      GDExtensionPtrBuiltInMethod
	method_insert                         GDExtensionPtrBuiltInMethod
	method_fill                           GDExtensionPtrBuiltInMethod
	method_resize                         GDExtensionPtrBuiltInMethod
	method_clear                          GDExtensionPtrBuiltInMethod
	method_has                            GDExtensionPtrBuiltInMethod
	method_reverse                        GDExtensionPtrBuiltInMethod
	method_slice                          GDExtensionPtrBuiltInMethod
	method_to_byte_array                  GDExtensionPtrBuiltInMethod
	method_sort                           GDExtensionPtrBuiltInMethod
	method_bsearch                        GDExtensionPtrBuiltInMethod
	method_duplicate                      GDExtensionPtrBuiltInMethod
	method_find                           GDExtensionPtrBuiltInMethod
	method_rfind                          GDExtensionPtrBuiltInMethod
	method_count                          GDExtensionPtrBuiltInMethod
	indexed_setter                        GDExtensionPtrIndexedSetter
	indexed_getter                        GDExtensionPtrIndexedGetter
	operator_equal_Variant                GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                          GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform2D         GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary                GDExtensionPtrOperatorEvaluator
	operator_in_Array                     GDExtensionPtrOperatorEvaluator
	operator_equal_PackedVector2Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedVector2Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedVector2Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedVector2ArrayMethodBindings packedVector2ArrayMethodBindings

func packedVector2ArrayInitConstructorBindings() {
	log.Debug("packedVector2ArrayInitConstructorBindings called")

	log.Debug("globalPackedVector2ArrayMethodBindings.constructor_0")
	globalPackedVector2ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, 0)
	log.Debug("globalPackedVector2ArrayMethodBindings.constructor_1")
	globalPackedVector2ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, 1)
	log.Debug("globalPackedVector2ArrayMethodBindings.constructor_2")
	globalPackedVector2ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, 2)
	log.Debug("globalPackedVector2ArrayMethodBindings.destructor")
	globalPackedVector2ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
}

func packedVector2ArrayInitMethodBindings() {
	log.Debug("packedVector2ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_size")
	globalPackedVector2ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedVector2ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_is_empty")
	globalPackedVector2ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedVector2ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_set")
	globalPackedVector2ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 635767250)
	if globalPackedVector2ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_push_back")
	globalPackedVector2ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 4188891560)
	if globalPackedVector2ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_append")
	globalPackedVector2ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 4188891560)
	if globalPackedVector2ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_append_array")
	globalPackedVector2ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 3887534835)
	if globalPackedVector2ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_remove_at")
	globalPackedVector2ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedVector2ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_insert")
	globalPackedVector2ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 2225629369)
	if globalPackedVector2ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_fill")
	globalPackedVector2ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 3790411178)
	if globalPackedVector2ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_resize")
	globalPackedVector2ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedVector2ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_clear")
	globalPackedVector2ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector2ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_has")
	globalPackedVector2ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 3190634762)
	if globalPackedVector2ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_reverse")
	globalPackedVector2ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector2ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_slice")
	globalPackedVector2ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 3864005350)
	if globalPackedVector2ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_to_byte_array")
	globalPackedVector2ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedVector2ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_sort")
	globalPackedVector2ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector2ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_bsearch")
	globalPackedVector2ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 3778035805)
	if globalPackedVector2ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_duplicate")
	globalPackedVector2ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 3763646812)
	if globalPackedVector2ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_find")
	globalPackedVector2ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 1469606149)
	if globalPackedVector2ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_rfind")
	globalPackedVector2ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 1469606149)
	if globalPackedVector2ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedVector2ArrayMethodBindings.method_count")
	globalPackedVector2ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 2798848307)
	if globalPackedVector2ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedVector2ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedVector2ArrayMethodBindings.indexed_setter")
	globalPackedVector2ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("globalPackedVector2ArrayMethodBindings.indexed_getter")
	globalPackedVector2ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: equal Variant")
	globalPackedVector2ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: not_equal Variant")
	globalPackedVector2ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: not ")
	globalPackedVector2ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: multiply Transform2D")
	globalPackedVector2ArrayMethodBindings.operator_multiply_Transform2D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_TRANSFORM2D)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: in Dictionary")
	globalPackedVector2ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: in Array")
	globalPackedVector2ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: equal PackedVector2Array")
	globalPackedVector2ArrayMethodBindings.operator_equal_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: not_equal PackedVector2Array")
	globalPackedVector2ArrayMethodBindings.operator_not_equal_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("globalPackedVector2ArrayMethodBindings.operator: add PackedVector2Array")
	globalPackedVector2ArrayMethodBindings.operator_add_PackedVector2Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY)
	log.Debug("packedVector2ArrayInitBindings end")
}

type packedVector3ArrayMethodBindings struct {
	constructor_0                         GDExtensionPtrConstructor
	constructor_1                         GDExtensionPtrConstructor
	constructor_2                         GDExtensionPtrConstructor
	destructor                            GDExtensionPtrDestructor
	method_size                           GDExtensionPtrBuiltInMethod
	method_is_empty                       GDExtensionPtrBuiltInMethod
	method_set                            GDExtensionPtrBuiltInMethod
	method_push_back                      GDExtensionPtrBuiltInMethod
	method_append                         GDExtensionPtrBuiltInMethod
	method_append_array                   GDExtensionPtrBuiltInMethod
	method_remove_at                      GDExtensionPtrBuiltInMethod
	method_insert                         GDExtensionPtrBuiltInMethod
	method_fill                           GDExtensionPtrBuiltInMethod
	method_resize                         GDExtensionPtrBuiltInMethod
	method_clear                          GDExtensionPtrBuiltInMethod
	method_has                            GDExtensionPtrBuiltInMethod
	method_reverse                        GDExtensionPtrBuiltInMethod
	method_slice                          GDExtensionPtrBuiltInMethod
	method_to_byte_array                  GDExtensionPtrBuiltInMethod
	method_sort                           GDExtensionPtrBuiltInMethod
	method_bsearch                        GDExtensionPtrBuiltInMethod
	method_duplicate                      GDExtensionPtrBuiltInMethod
	method_find                           GDExtensionPtrBuiltInMethod
	method_rfind                          GDExtensionPtrBuiltInMethod
	method_count                          GDExtensionPtrBuiltInMethod
	indexed_setter                        GDExtensionPtrIndexedSetter
	indexed_getter                        GDExtensionPtrIndexedGetter
	operator_equal_Variant                GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                          GDExtensionPtrOperatorEvaluator
	operator_multiply_Transform3D         GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary                GDExtensionPtrOperatorEvaluator
	operator_in_Array                     GDExtensionPtrOperatorEvaluator
	operator_equal_PackedVector3Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedVector3Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedVector3Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedVector3ArrayMethodBindings packedVector3ArrayMethodBindings

func packedVector3ArrayInitConstructorBindings() {
	log.Debug("packedVector3ArrayInitConstructorBindings called")

	log.Debug("globalPackedVector3ArrayMethodBindings.constructor_0")
	globalPackedVector3ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, 0)
	log.Debug("globalPackedVector3ArrayMethodBindings.constructor_1")
	globalPackedVector3ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, 1)
	log.Debug("globalPackedVector3ArrayMethodBindings.constructor_2")
	globalPackedVector3ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, 2)
	log.Debug("globalPackedVector3ArrayMethodBindings.destructor")
	globalPackedVector3ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
}

func packedVector3ArrayInitMethodBindings() {
	log.Debug("packedVector3ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_size")
	globalPackedVector3ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedVector3ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_is_empty")
	globalPackedVector3ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedVector3ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_set")
	globalPackedVector3ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 3975343409)
	if globalPackedVector3ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_push_back")
	globalPackedVector3ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 3295363524)
	if globalPackedVector3ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_append")
	globalPackedVector3ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 3295363524)
	if globalPackedVector3ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_append_array")
	globalPackedVector3ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 203538016)
	if globalPackedVector3ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_remove_at")
	globalPackedVector3ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedVector3ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_insert")
	globalPackedVector3ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 3892262309)
	if globalPackedVector3ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_fill")
	globalPackedVector3ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 3726392409)
	if globalPackedVector3ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_resize")
	globalPackedVector3ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedVector3ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_clear")
	globalPackedVector3ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector3ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_has")
	globalPackedVector3ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 1749054343)
	if globalPackedVector3ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_reverse")
	globalPackedVector3ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector3ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_slice")
	globalPackedVector3ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 2086131305)
	if globalPackedVector3ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_to_byte_array")
	globalPackedVector3ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedVector3ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_sort")
	globalPackedVector3ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector3ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_bsearch")
	globalPackedVector3ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 219263630)
	if globalPackedVector3ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_duplicate")
	globalPackedVector3ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 2754175465)
	if globalPackedVector3ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_find")
	globalPackedVector3ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 3718155780)
	if globalPackedVector3ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_rfind")
	globalPackedVector3ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 3718155780)
	if globalPackedVector3ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedVector3ArrayMethodBindings.method_count")
	globalPackedVector3ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 194580386)
	if globalPackedVector3ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedVector3ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedVector3ArrayMethodBindings.indexed_setter")
	globalPackedVector3ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("globalPackedVector3ArrayMethodBindings.indexed_getter")
	globalPackedVector3ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: equal Variant")
	globalPackedVector3ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: not_equal Variant")
	globalPackedVector3ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: not ")
	globalPackedVector3ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: multiply Transform3D")
	globalPackedVector3ArrayMethodBindings.operator_multiply_Transform3D = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_MULTIPLY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_TRANSFORM3D)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: in Dictionary")
	globalPackedVector3ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: in Array")
	globalPackedVector3ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: equal PackedVector3Array")
	globalPackedVector3ArrayMethodBindings.operator_equal_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: not_equal PackedVector3Array")
	globalPackedVector3ArrayMethodBindings.operator_not_equal_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("globalPackedVector3ArrayMethodBindings.operator: add PackedVector3Array")
	globalPackedVector3ArrayMethodBindings.operator_add_PackedVector3Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY)
	log.Debug("packedVector3ArrayInitBindings end")
}

type packedColorArrayMethodBindings struct {
	constructor_0                       GDExtensionPtrConstructor
	constructor_1                       GDExtensionPtrConstructor
	constructor_2                       GDExtensionPtrConstructor
	destructor                          GDExtensionPtrDestructor
	method_size                         GDExtensionPtrBuiltInMethod
	method_is_empty                     GDExtensionPtrBuiltInMethod
	method_set                          GDExtensionPtrBuiltInMethod
	method_push_back                    GDExtensionPtrBuiltInMethod
	method_append                       GDExtensionPtrBuiltInMethod
	method_append_array                 GDExtensionPtrBuiltInMethod
	method_remove_at                    GDExtensionPtrBuiltInMethod
	method_insert                       GDExtensionPtrBuiltInMethod
	method_fill                         GDExtensionPtrBuiltInMethod
	method_resize                       GDExtensionPtrBuiltInMethod
	method_clear                        GDExtensionPtrBuiltInMethod
	method_has                          GDExtensionPtrBuiltInMethod
	method_reverse                      GDExtensionPtrBuiltInMethod
	method_slice                        GDExtensionPtrBuiltInMethod
	method_to_byte_array                GDExtensionPtrBuiltInMethod
	method_sort                         GDExtensionPtrBuiltInMethod
	method_bsearch                      GDExtensionPtrBuiltInMethod
	method_duplicate                    GDExtensionPtrBuiltInMethod
	method_find                         GDExtensionPtrBuiltInMethod
	method_rfind                        GDExtensionPtrBuiltInMethod
	method_count                        GDExtensionPtrBuiltInMethod
	indexed_setter                      GDExtensionPtrIndexedSetter
	indexed_getter                      GDExtensionPtrIndexedGetter
	operator_equal_Variant              GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant          GDExtensionPtrOperatorEvaluator
	operator_not                        GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary              GDExtensionPtrOperatorEvaluator
	operator_in_Array                   GDExtensionPtrOperatorEvaluator
	operator_equal_PackedColorArray     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedColorArray GDExtensionPtrOperatorEvaluator
	operator_add_PackedColorArray       GDExtensionPtrOperatorEvaluator
}

var globalPackedColorArrayMethodBindings packedColorArrayMethodBindings

func packedColorArrayInitConstructorBindings() {
	log.Debug("packedColorArrayInitConstructorBindings called")

	log.Debug("globalPackedColorArrayMethodBindings.constructor_0")
	globalPackedColorArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, 0)
	log.Debug("globalPackedColorArrayMethodBindings.constructor_1")
	globalPackedColorArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, 1)
	log.Debug("globalPackedColorArrayMethodBindings.constructor_2")
	globalPackedColorArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, 2)
	log.Debug("globalPackedColorArrayMethodBindings.destructor")
	globalPackedColorArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
}

func packedColorArrayInitMethodBindings() {
	log.Debug("packedColorArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_size")
	globalPackedColorArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedColorArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_is_empty")
	globalPackedColorArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedColorArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_set")
	globalPackedColorArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 1444096570)
	if globalPackedColorArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_push_back")
	globalPackedColorArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 1007858200)
	if globalPackedColorArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_append")
	globalPackedColorArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 1007858200)
	if globalPackedColorArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_append_array")
	globalPackedColorArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 798822497)
	if globalPackedColorArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_remove_at")
	globalPackedColorArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedColorArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_insert")
	globalPackedColorArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 785289703)
	if globalPackedColorArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_fill")
	globalPackedColorArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 3730314301)
	if globalPackedColorArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_resize")
	globalPackedColorArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedColorArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_clear")
	globalPackedColorArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedColorArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_has")
	globalPackedColorArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 3167426256)
	if globalPackedColorArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_reverse")
	globalPackedColorArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedColorArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_slice")
	globalPackedColorArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 2451797139)
	if globalPackedColorArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_to_byte_array")
	globalPackedColorArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedColorArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_sort")
	globalPackedColorArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedColorArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_bsearch")
	globalPackedColorArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 314143821)
	if globalPackedColorArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_duplicate")
	globalPackedColorArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 1011903421)
	if globalPackedColorArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_find")
	globalPackedColorArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 3156095363)
	if globalPackedColorArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_rfind")
	globalPackedColorArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 3156095363)
	if globalPackedColorArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedColorArrayMethodBindings.method_count")
	globalPackedColorArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 1682108616)
	if globalPackedColorArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedColorArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedColorArrayMethodBindings.indexed_setter")
	globalPackedColorArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("globalPackedColorArrayMethodBindings.indexed_getter")
	globalPackedColorArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("globalPackedColorArrayMethodBindings.operator: equal Variant")
	globalPackedColorArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedColorArrayMethodBindings.operator: not_equal Variant")
	globalPackedColorArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedColorArrayMethodBindings.operator: not ")
	globalPackedColorArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedColorArrayMethodBindings.operator: in Dictionary")
	globalPackedColorArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedColorArrayMethodBindings.operator: in Array")
	globalPackedColorArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedColorArrayMethodBindings.operator: equal PackedColorArray")
	globalPackedColorArrayMethodBindings.operator_equal_PackedColorArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("globalPackedColorArrayMethodBindings.operator: not_equal PackedColorArray")
	globalPackedColorArrayMethodBindings.operator_not_equal_PackedColorArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("globalPackedColorArrayMethodBindings.operator: add PackedColorArray")
	globalPackedColorArrayMethodBindings.operator_add_PackedColorArray = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY)
	log.Debug("packedColorArrayInitBindings end")
}

type packedVector4ArrayMethodBindings struct {
	constructor_0                         GDExtensionPtrConstructor
	constructor_1                         GDExtensionPtrConstructor
	constructor_2                         GDExtensionPtrConstructor
	destructor                            GDExtensionPtrDestructor
	method_size                           GDExtensionPtrBuiltInMethod
	method_is_empty                       GDExtensionPtrBuiltInMethod
	method_set                            GDExtensionPtrBuiltInMethod
	method_push_back                      GDExtensionPtrBuiltInMethod
	method_append                         GDExtensionPtrBuiltInMethod
	method_append_array                   GDExtensionPtrBuiltInMethod
	method_remove_at                      GDExtensionPtrBuiltInMethod
	method_insert                         GDExtensionPtrBuiltInMethod
	method_fill                           GDExtensionPtrBuiltInMethod
	method_resize                         GDExtensionPtrBuiltInMethod
	method_clear                          GDExtensionPtrBuiltInMethod
	method_has                            GDExtensionPtrBuiltInMethod
	method_reverse                        GDExtensionPtrBuiltInMethod
	method_slice                          GDExtensionPtrBuiltInMethod
	method_to_byte_array                  GDExtensionPtrBuiltInMethod
	method_sort                           GDExtensionPtrBuiltInMethod
	method_bsearch                        GDExtensionPtrBuiltInMethod
	method_duplicate                      GDExtensionPtrBuiltInMethod
	method_find                           GDExtensionPtrBuiltInMethod
	method_rfind                          GDExtensionPtrBuiltInMethod
	method_count                          GDExtensionPtrBuiltInMethod
	indexed_setter                        GDExtensionPtrIndexedSetter
	indexed_getter                        GDExtensionPtrIndexedGetter
	operator_equal_Variant                GDExtensionPtrOperatorEvaluator
	operator_not_equal_Variant            GDExtensionPtrOperatorEvaluator
	operator_not                          GDExtensionPtrOperatorEvaluator
	operator_in_Dictionary                GDExtensionPtrOperatorEvaluator
	operator_in_Array                     GDExtensionPtrOperatorEvaluator
	operator_equal_PackedVector4Array     GDExtensionPtrOperatorEvaluator
	operator_not_equal_PackedVector4Array GDExtensionPtrOperatorEvaluator
	operator_add_PackedVector4Array       GDExtensionPtrOperatorEvaluator
}

var globalPackedVector4ArrayMethodBindings packedVector4ArrayMethodBindings

func packedVector4ArrayInitConstructorBindings() {
	log.Debug("packedVector4ArrayInitConstructorBindings called")

	log.Debug("globalPackedVector4ArrayMethodBindings.constructor_0")
	globalPackedVector4ArrayMethodBindings.constructor_0 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, 0)
	log.Debug("globalPackedVector4ArrayMethodBindings.constructor_1")
	globalPackedVector4ArrayMethodBindings.constructor_1 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, 1)
	log.Debug("globalPackedVector4ArrayMethodBindings.constructor_2")
	globalPackedVector4ArrayMethodBindings.constructor_2 = CallFunc_GDExtensionInterfaceVariantGetPtrConstructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, 2)
	log.Debug("globalPackedVector4ArrayMethodBindings.destructor")
	globalPackedVector4ArrayMethodBindings.destructor = CallFunc_GDExtensionInterfaceVariantGetPtrDestructor(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
}

func packedVector4ArrayInitMethodBindings() {
	log.Debug("packedVector4ArrayInitMethodBindings called")

	missingMethods := make([]string, 0, 21)

	methodName0 := NewStringNameWithLatin1Chars("size")
	defer methodName0.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_size")
	globalPackedVector4ArrayMethodBindings.method_size = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName0.AsGDExtensionConstStringNamePtr(), 3173160232)
	if globalPackedVector4ArrayMethodBindings.method_size == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_size")
	}
	methodName1 := NewStringNameWithLatin1Chars("is_empty")
	defer methodName1.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_is_empty")
	globalPackedVector4ArrayMethodBindings.method_is_empty = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName1.AsGDExtensionConstStringNamePtr(), 3918633141)
	if globalPackedVector4ArrayMethodBindings.method_is_empty == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_is_empty")
	}
	methodName2 := NewStringNameWithLatin1Chars("set")
	defer methodName2.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_set")
	globalPackedVector4ArrayMethodBindings.method_set = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName2.AsGDExtensionConstStringNamePtr(), 1350366223)
	if globalPackedVector4ArrayMethodBindings.method_set == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_set")
	}
	methodName3 := NewStringNameWithLatin1Chars("push_back")
	defer methodName3.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_push_back")
	globalPackedVector4ArrayMethodBindings.method_push_back = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName3.AsGDExtensionConstStringNamePtr(), 3289167688)
	if globalPackedVector4ArrayMethodBindings.method_push_back == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_push_back")
	}
	methodName4 := NewStringNameWithLatin1Chars("append")
	defer methodName4.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_append")
	globalPackedVector4ArrayMethodBindings.method_append = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName4.AsGDExtensionConstStringNamePtr(), 3289167688)
	if globalPackedVector4ArrayMethodBindings.method_append == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_append")
	}
	methodName5 := NewStringNameWithLatin1Chars("append_array")
	defer methodName5.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_append_array")
	globalPackedVector4ArrayMethodBindings.method_append_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName5.AsGDExtensionConstStringNamePtr(), 537428395)
	if globalPackedVector4ArrayMethodBindings.method_append_array == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_append_array")
	}
	methodName6 := NewStringNameWithLatin1Chars("remove_at")
	defer methodName6.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_remove_at")
	globalPackedVector4ArrayMethodBindings.method_remove_at = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName6.AsGDExtensionConstStringNamePtr(), 2823966027)
	if globalPackedVector4ArrayMethodBindings.method_remove_at == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_remove_at")
	}
	methodName7 := NewStringNameWithLatin1Chars("insert")
	defer methodName7.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_insert")
	globalPackedVector4ArrayMethodBindings.method_insert = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName7.AsGDExtensionConstStringNamePtr(), 11085009)
	if globalPackedVector4ArrayMethodBindings.method_insert == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_insert")
	}
	methodName8 := NewStringNameWithLatin1Chars("fill")
	defer methodName8.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_fill")
	globalPackedVector4ArrayMethodBindings.method_fill = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName8.AsGDExtensionConstStringNamePtr(), 3761353134)
	if globalPackedVector4ArrayMethodBindings.method_fill == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_fill")
	}
	methodName9 := NewStringNameWithLatin1Chars("resize")
	defer methodName9.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_resize")
	globalPackedVector4ArrayMethodBindings.method_resize = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName9.AsGDExtensionConstStringNamePtr(), 848867239)
	if globalPackedVector4ArrayMethodBindings.method_resize == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_resize")
	}
	methodName10 := NewStringNameWithLatin1Chars("clear")
	defer methodName10.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_clear")
	globalPackedVector4ArrayMethodBindings.method_clear = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName10.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector4ArrayMethodBindings.method_clear == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_clear")
	}
	methodName11 := NewStringNameWithLatin1Chars("has")
	defer methodName11.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_has")
	globalPackedVector4ArrayMethodBindings.method_has = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName11.AsGDExtensionConstStringNamePtr(), 88913544)
	if globalPackedVector4ArrayMethodBindings.method_has == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_has")
	}
	methodName12 := NewStringNameWithLatin1Chars("reverse")
	defer methodName12.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_reverse")
	globalPackedVector4ArrayMethodBindings.method_reverse = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName12.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector4ArrayMethodBindings.method_reverse == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_reverse")
	}
	methodName13 := NewStringNameWithLatin1Chars("slice")
	defer methodName13.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_slice")
	globalPackedVector4ArrayMethodBindings.method_slice = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName13.AsGDExtensionConstStringNamePtr(), 2942803855)
	if globalPackedVector4ArrayMethodBindings.method_slice == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_slice")
	}
	methodName14 := NewStringNameWithLatin1Chars("to_byte_array")
	defer methodName14.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_to_byte_array")
	globalPackedVector4ArrayMethodBindings.method_to_byte_array = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName14.AsGDExtensionConstStringNamePtr(), 247621236)
	if globalPackedVector4ArrayMethodBindings.method_to_byte_array == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_to_byte_array")
	}
	methodName15 := NewStringNameWithLatin1Chars("sort")
	defer methodName15.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_sort")
	globalPackedVector4ArrayMethodBindings.method_sort = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName15.AsGDExtensionConstStringNamePtr(), 3218959716)
	if globalPackedVector4ArrayMethodBindings.method_sort == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_sort")
	}
	methodName16 := NewStringNameWithLatin1Chars("bsearch")
	defer methodName16.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_bsearch")
	globalPackedVector4ArrayMethodBindings.method_bsearch = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName16.AsGDExtensionConstStringNamePtr(), 735671678)
	if globalPackedVector4ArrayMethodBindings.method_bsearch == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_bsearch")
	}
	methodName17 := NewStringNameWithLatin1Chars("duplicate")
	defer methodName17.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_duplicate")
	globalPackedVector4ArrayMethodBindings.method_duplicate = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName17.AsGDExtensionConstStringNamePtr(), 3186305013)
	if globalPackedVector4ArrayMethodBindings.method_duplicate == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_duplicate")
	}
	methodName18 := NewStringNameWithLatin1Chars("find")
	defer methodName18.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_find")
	globalPackedVector4ArrayMethodBindings.method_find = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName18.AsGDExtensionConstStringNamePtr(), 3091171314)
	if globalPackedVector4ArrayMethodBindings.method_find == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_find")
	}
	methodName19 := NewStringNameWithLatin1Chars("rfind")
	defer methodName19.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_rfind")
	globalPackedVector4ArrayMethodBindings.method_rfind = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName19.AsGDExtensionConstStringNamePtr(), 3091171314)
	if globalPackedVector4ArrayMethodBindings.method_rfind == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_rfind")
	}
	methodName20 := NewStringNameWithLatin1Chars("count")
	defer methodName20.Destroy()
	log.Debug("globalPackedVector4ArrayMethodBindings.method_count")
	globalPackedVector4ArrayMethodBindings.method_count = CallFunc_GDExtensionInterfaceVariantGetPtrBuiltinMethod(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, methodName20.AsGDExtensionConstStringNamePtr(), 3956594488)
	if globalPackedVector4ArrayMethodBindings.method_count == nil {
		missingMethods = append(missingMethods, "globalPackedVector4ArrayMethodBindings.method_count")
	}
	if len(missingMethods) > 0 {
		log.Panic("missing method binds", zap.Any("missing", missingMethods))
	}

	log.Debug("globalPackedVector4ArrayMethodBindings.indexed_setter")
	globalPackedVector4ArrayMethodBindings.indexed_setter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedSetter(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("globalPackedVector4ArrayMethodBindings.indexed_getter")
	globalPackedVector4ArrayMethodBindings.indexed_getter = CallFunc_GDExtensionInterfaceVariantGetPtrIndexedGetter(GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: equal Variant")
	globalPackedVector4ArrayMethodBindings.operator_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: not_equal Variant")
	globalPackedVector4ArrayMethodBindings.operator_not_equal_Variant = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: not ")
	globalPackedVector4ArrayMethodBindings.operator_not = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_NIL)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: in Dictionary")
	globalPackedVector4ArrayMethodBindings.operator_in_Dictionary = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_DICTIONARY)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: in Array")
	globalPackedVector4ArrayMethodBindings.operator_in_Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_IN, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_ARRAY)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: equal PackedVector4Array")
	globalPackedVector4ArrayMethodBindings.operator_equal_PackedVector4Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: not_equal PackedVector4Array")
	globalPackedVector4ArrayMethodBindings.operator_not_equal_PackedVector4Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_NOT_EQUAL, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("globalPackedVector4ArrayMethodBindings.operator: add PackedVector4Array")
	globalPackedVector4ArrayMethodBindings.operator_add_PackedVector4Array = CallFunc_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(GDEXTENSION_VARIANT_OP_ADD, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY, GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR4_ARRAY)
	log.Debug("packedVector4ArrayInitBindings end")
}

func builtinClassesInitBindings() {
	// call init constructors
	stringInitConstructorBindings()
	vector2InitConstructorBindings()
	vector2iInitConstructorBindings()
	rect2InitConstructorBindings()
	rect2iInitConstructorBindings()
	vector3InitConstructorBindings()
	vector3iInitConstructorBindings()
	transform2DInitConstructorBindings()
	vector4InitConstructorBindings()
	vector4iInitConstructorBindings()
	planeInitConstructorBindings()
	quaternionInitConstructorBindings()
	aABBInitConstructorBindings()
	basisInitConstructorBindings()
	transform3DInitConstructorBindings()
	projectionInitConstructorBindings()
	colorInitConstructorBindings()
	stringNameInitConstructorBindings()
	nodePathInitConstructorBindings()
	rIDInitConstructorBindings()
	callableInitConstructorBindings()
	signalInitConstructorBindings()
	dictionaryInitConstructorBindings()
	arrayInitConstructorBindings()
	packedByteArrayInitConstructorBindings()
	packedInt32ArrayInitConstructorBindings()
	packedInt64ArrayInitConstructorBindings()
	packedFloat32ArrayInitConstructorBindings()
	packedFloat64ArrayInitConstructorBindings()
	packedStringArrayInitConstructorBindings()
	packedVector2ArrayInitConstructorBindings()
	packedVector3ArrayInitConstructorBindings()
	packedColorArrayInitConstructorBindings()
	packedVector4ArrayInitConstructorBindings()

	// call init method bindings
	stringInitMethodBindings()
	vector2InitMethodBindings()
	vector2iInitMethodBindings()
	rect2InitMethodBindings()
	rect2iInitMethodBindings()
	vector3InitMethodBindings()
	vector3iInitMethodBindings()
	transform2DInitMethodBindings()
	vector4InitMethodBindings()
	vector4iInitMethodBindings()
	planeInitMethodBindings()
	quaternionInitMethodBindings()
	aABBInitMethodBindings()
	basisInitMethodBindings()
	transform3DInitMethodBindings()
	projectionInitMethodBindings()
	colorInitMethodBindings()
	stringNameInitMethodBindings()
	nodePathInitMethodBindings()
	rIDInitMethodBindings()
	callableInitMethodBindings()
	signalInitMethodBindings()
	dictionaryInitMethodBindings()
	arrayInitMethodBindings()
	packedByteArrayInitMethodBindings()
	packedInt32ArrayInitMethodBindings()
	packedInt64ArrayInitMethodBindings()
	packedFloat32ArrayInitMethodBindings()
	packedFloat64ArrayInitMethodBindings()
	packedStringArrayInitMethodBindings()
	packedVector2ArrayInitMethodBindings()
	packedVector3ArrayInitMethodBindings()
	packedColorArrayInitMethodBindings()
	packedVector4ArrayInitMethodBindings()
}
