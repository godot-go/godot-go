/*------------------------------------------------------------------------------
//   This code was generated by template ffi_gdextension_interface.go.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "ffi_gdextension_interface.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/
{{ $view := . -}}

package ffi

//revive:disable

import (
	"unsafe"

	"github.com/godot-go/godot-go/pkg/log"
	"go.uber.org/zap"
)

type GDExtensionInterface struct {
	Library        GDExtensionClassLibraryPtr
	Token          unsafe.Pointer
	GodotVersion GDExtensionGodotVersion

	// All of the GDExtension interface functions.
	{{ range $i, $f := $view.CollectGDExtensionInterfaceFunctions -}}
	{{ trimPrefix $f.Name "GDExtensionInterface" }} {{ $f.Name }}
	{{ end -}}
}

func (x *GDExtensionInterface) LoadProcAddresses(
	pGetProcAddress GDExtensionInterfaceGetProcAddress,
	pLibrary GDExtensionClassLibraryPtr,
) {
	x.GetProcAddress = pGetProcAddress
	x.Library = pLibrary
	x.Token = unsafe.Pointer(&pLibrary)

	{{ range $i, $f := $view.CollectGDExtensionInterfaceFunctions -}}
	{{ if eq $f.Name "GDExtensionInterfaceGetProcAddress" -}}{{ continue }}{{ end -}}
	x.{{ trimPrefix $f.Name "GDExtensionInterface" }} = ({{ $f.Name }})(LoadProcAddress("{{ loadProcAddressName $f.Name }}"))
	{{ end -}}
}

var (
	FFI GDExtensionInterface
)

func LoadProcAddress(funcName string) unsafe.Pointer {
	ret := CallFunc_GDExtensionInterfaceGetProcAddress(funcName)
	if ret == nil {
		log.Warn("GDExtensionInterfaceGetProcAddress Error",
			zap.String("name", funcName),
		)
	}
	return unsafe.Pointer(ret)
}

func (gv GDExtensionGodotVersion) GetMajor() int32 {
	return int32(gv.major)
}

func (gv GDExtensionGodotVersion) GetMinor() int32 {
	return int32(gv.minor)
}
