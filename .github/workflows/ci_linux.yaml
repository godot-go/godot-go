name: godot-go CI on Linux

on:
  pull_request:
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - "**/*.gdextension"
      - ".github/workflows/ci_linux.yaml"

  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - "**/*.gdextension"
      - ".github/workflows/ci_linux.yaml"

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: master
  SCONSFLAGS: verbose=yes warnings=extra werror=yes module_text_server_fb_enabled=yes
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  TSAN_OPTIONS: suppressions=misc/error_suppressions/tsan.txt

jobs:
  # build_godot:
  #   uses: ./.github/workflows/ci_build_godot.yaml
  #   secrets: inherit

  run_test:
    name: "run tests"
    strategy:
      fail-fast: true
      matrix:
        os:
          - linux
        arch:
          - amd64

    runs-on: ubuntu-latest
    # needs: [build_godot]
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4

      - name: Add Go 1.21.x To System Path
        run: |
          echo "${GOROOT_1_21_X64}/bin" >> $GITHUB_PATH
          echo "GITHUB_PATH=${GITHUB_PATH}"

      - run: mkdir -p bin/

      - name: Download Godot binary
        # uses: actions/download-artifact@v3
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci_build_godot.yaml
          workflow_conclusion: success
          name: godot-linuxbsd-editor-amd64
          path: bin/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: bin/

      # - name: Install Godot 4.2 dev5
      #   run: |
      #     wget https://downloads.tuxfamily.org/godotengine/4.2/dev5/Godot_v4.2-dev5_linux.x86_64.zip
      #     sudo unzip Godot_v4.2-dev5_linux.x86_64.zip -d /usr/local/bin
      #     sudo ln -s Godot_v4.2-dev5_linux.x86_64 /usr/local/bin/godot

      # - name: Setup Godot build cache
      #   uses: ./.github/actions/godot-cache
      #   with:
      #     cache-name: linux-editor
      #   continue-on-error: true

      # - name: Setup python and scons
      #   uses: ./.github/actions/godot-deps

      # - name: Setup GCC problem matcher
      #   uses: ammaraskar/gcc-problem-matcher@master

      # - name: Godot Compilation
      #   uses: ./.github/actions/godot-build
      #   with:
      #     sconsflags: ${{ env.SCONSFLAGS }}
      #     platform: linuxbsd
      #     target: editor
      #     tests: false
      #     scons-cache: "${{ github.workspace }}/godot/.scons-cache/"
      #     path: "${{ github.workspace }}/godot"

      - name: Update Godot Headers
        run: |
          make update_godot_headers_from_binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          GODOT: ./bin/godot.linuxbsd.editor.x86_64

      - name: Build
        run: make build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: List Artifacts Directory
        run: |
          ls -alh test/demo/lib

      - name: Gen Test Project Files
        if: ${{ matrix.os == 'linux' }}
        timeout-minutes: 3
        run: |
          make ci_gen_test_project_files
        continue-on-error: true
        env:
          CI: 1
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"
          GODOT: ./bin/godot.linuxbsd.editor.x86_64

      - name: Test
        if: ${{ matrix.os == 'linux' }}
        timeout-minutes: 2
        run: |
          make test
        env:
          CI: 1
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"
          GODOT: ./bin/godot.linuxbsd.editor.x86_64
