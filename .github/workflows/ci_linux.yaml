name: godot-go CI on Linux

on:
  pull_request:
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - "**/*.gdextension"
      - ".github/workflows/ci_linux.yaml"

  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - "**/*.gdextension"
      - ".github/workflows/ci_linux.yaml"

jobs:
  run_test:
    name: "run tests"
    strategy:
      fail-fast: true
      matrix:
        os:
          - linux
        arch:
          - amd64

    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Add Go 1.21.x To System Path
        run: |
          echo "${GOROOT_1_21_X64}/bin" >> $GITHUB_PATH
          echo "GITHUB_PATH=${GITHUB_PATH}"
      # - name: Install Godot 4.2 dev5
      #   run: |
      #     wget https://downloads.tuxfamily.org/godotengine/4.2/dev5/Godot_v4.2-dev5_linux.x86_64.zip
      #     sudo unzip Godot_v4.2-dev5_linux.x86_64.zip -d /usr/local/bin
      #     sudo ln -s Godot_v4.2-dev5_linux.x86_64 /usr/local/bin/godot
      - name: Checkout Godot
        uses: actions/checkout@v3
        with:
          repository: 'godotengine/godot'
          path: 'godot'
      - name: Build and Install Godot
        run: |
          cd godot
          scons optimize=debug use_llvm=yes dev_build=yes dev_mode=yes debug_symbols=yes verbose=yes
          sudo ln -s $(pwd)/bin/godot.linuxbsd.editor.dev.x86_64.llvm /usr/local/bin/godot
          cd ..
      - name: Cache Godot
        uses: actions/cache@v3
        with:
          path: |
            godot/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-godot-4.2-dev5
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Update Godot Headers
        run: make update_godot_headers_from_binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
      - name: Build
        run: make build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
      - name: List Artifacts Directory
        run: |
          ls -alh test/demo/lib
      - name: Gen Test Project Files
        if: ${{ matrix.os == 'linux' }}
        timeout-minutes: 3
        run: make ci_gen_test_project_files
        continue-on-error: true
        env:
          CI: 1
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"
          GODOT: "/usr/local/bin/godot"
      - name: Test
        if: ${{ matrix.os == 'linux' }}
        timeout-minutes: 2
        run: make test
        env:
          CI: 1
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"
          GODOT: "/usr/local/bin/godot"
