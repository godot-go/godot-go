#ifndef CGO_GODOT_GO_GDNATIVE_WRAPPER_H
#define CGO_GODOT_GO_GDNATIVE_WRAPPER_H
/*------------------------------------------------------------------------------
//   This code was generated by template gdnative_wrapper.h.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "gdnative.h.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/
#include <godot/gdnative_interface.h>

/* Go cannot call C function pointers directly, so we must generate C wrapper
 * code to call the functions. */

// section: functions
void cgo_callfn_GDNativeVariantFromTypeConstructorFunc(
    const GDNativeVariantFromTypeConstructorFunc cb, GDNativeVariantPtr arg_0,
    GDNativeTypePtr arg_1);
void cgo_callfn_GDNativeTypeFromVariantConstructorFunc(
    const GDNativeTypeFromVariantConstructorFunc cb, GDNativeTypePtr arg_0,
    GDNativeVariantPtr arg_1);
void cgo_callfn_GDNativePtrOperatorEvaluator(
    const GDNativePtrOperatorEvaluator cb, const GDNativeTypePtr p_left,
    const GDNativeTypePtr p_right, GDNativeTypePtr r_result);
void cgo_callfn_GDNativePtrBuiltInMethod(const GDNativePtrBuiltInMethod cb,
                                         GDNativeTypePtr p_base,
                                         const GDNativeTypePtr *p_args,
                                         GDNativeTypePtr r_return,
                                         int p_argument_count);
void cgo_callfn_GDNativePtrConstructor(const GDNativePtrConstructor cb,
                                       GDNativeTypePtr p_base,
                                       const GDNativeTypePtr *p_args);
void cgo_callfn_GDNativePtrDestructor(const GDNativePtrDestructor cb,
                                      GDNativeTypePtr p_base);
void cgo_callfn_GDNativePtrSetter(const GDNativePtrSetter cb,
                                  GDNativeTypePtr p_base,
                                  const GDNativeTypePtr p_value);
void cgo_callfn_GDNativePtrGetter(const GDNativePtrGetter cb,
                                  const GDNativeTypePtr p_base,
                                  GDNativeTypePtr r_value);
void cgo_callfn_GDNativePtrIndexedSetter(const GDNativePtrIndexedSetter cb,
                                         GDNativeTypePtr p_base,
                                         GDNativeInt p_index,
                                         const GDNativeTypePtr p_value);
void cgo_callfn_GDNativePtrIndexedGetter(const GDNativePtrIndexedGetter cb,
                                         const GDNativeTypePtr p_base,
                                         GDNativeInt p_index,
                                         GDNativeTypePtr r_value);
void cgo_callfn_GDNativePtrKeyedSetter(const GDNativePtrKeyedSetter cb,
                                       GDNativeTypePtr p_base,
                                       const GDNativeTypePtr p_key,
                                       const GDNativeTypePtr p_value);
void cgo_callfn_GDNativePtrKeyedGetter(const GDNativePtrKeyedGetter cb,
                                       const GDNativeTypePtr p_base,
                                       const GDNativeTypePtr p_key,
                                       GDNativeTypePtr r_value);
uint32_t cgo_callfn_GDNativePtrKeyedChecker(const GDNativePtrKeyedChecker cb,
                                            const GDNativeVariantPtr p_base,
                                            const GDNativeVariantPtr p_key);
void cgo_callfn_GDNativePtrUtilityFunction(const GDNativePtrUtilityFunction cb,
                                           GDNativeTypePtr r_return,
                                           const GDNativeTypePtr *p_arguments,
                                           int p_argument_count);
GDNativeObjectPtr
cgo_callfn_GDNativeClassConstructor(const GDNativeClassConstructor cb);
void *cgo_callfn_GDNativeInstanceBindingCreateCallback(
    const GDNativeInstanceBindingCreateCallback cb, void *p_token,
    void *p_instance);
void cgo_callfn_GDNativeInstanceBindingFreeCallback(
    const GDNativeInstanceBindingFreeCallback cb, void *p_token,
    void *p_instance, void *p_binding);
GDNativeBool cgo_callfn_GDNativeInstanceBindingReferenceCallback(
    const GDNativeInstanceBindingReferenceCallback cb, void *p_token,
    void *p_binding, GDNativeBool p_reference);
GDNativeBool cgo_callfn_GDNativeExtensionClassSet(
    const GDNativeExtensionClassSet cb, GDExtensionClassInstancePtr p_instance,
    const GDNativeStringNamePtr p_name, const GDNativeVariantPtr p_value);
GDNativeBool cgo_callfn_GDNativeExtensionClassGet(
    const GDNativeExtensionClassGet cb, GDExtensionClassInstancePtr p_instance,
    const GDNativeStringNamePtr p_name, GDNativeVariantPtr r_ret);
uint64_t
cgo_callfn_GDNativeExtensionClassGetRID(const GDNativeExtensionClassGetRID cb,
                                        GDExtensionClassInstancePtr p_instance);
const GDNativePropertyInfo *cgo_callfn_GDNativeExtensionClassGetPropertyList(
    const GDNativeExtensionClassGetPropertyList cb,
    GDExtensionClassInstancePtr p_instance, uint32_t *r_count);
void cgo_callfn_GDNativeExtensionClassFreePropertyList(
    const GDNativeExtensionClassFreePropertyList cb,
    GDExtensionClassInstancePtr p_instance, const GDNativePropertyInfo *p_list);
GDNativeBool cgo_callfn_GDNativeExtensionClassPropertyCanRevert(
    const GDNativeExtensionClassPropertyCanRevert cb,
    GDExtensionClassInstancePtr p_instance, const GDNativeStringNamePtr p_name);
GDNativeBool cgo_callfn_GDNativeExtensionClassPropertyGetRevert(
    const GDNativeExtensionClassPropertyGetRevert cb,
    GDExtensionClassInstancePtr p_instance, const GDNativeStringNamePtr p_name,
    GDNativeVariantPtr r_ret);
void cgo_callfn_GDNativeExtensionClassNotification(
    const GDNativeExtensionClassNotification cb,
    GDExtensionClassInstancePtr p_instance, int32_t p_what);
void cgo_callfn_GDNativeExtensionClassToString(
    const GDNativeExtensionClassToString cb,
    GDExtensionClassInstancePtr p_instance, GDNativeStringPtr p_out);
void cgo_callfn_GDNativeExtensionClassReference(
    const GDNativeExtensionClassReference cb,
    GDExtensionClassInstancePtr p_instance);
void cgo_callfn_GDNativeExtensionClassUnreference(
    const GDNativeExtensionClassUnreference cb,
    GDExtensionClassInstancePtr p_instance);
void cgo_callfn_GDNativeExtensionClassCallVirtual(
    const GDNativeExtensionClassCallVirtual cb,
    GDExtensionClassInstancePtr p_instance, const GDNativeTypePtr *p_args,
    GDNativeTypePtr r_ret);
GDNativeObjectPtr cgo_callfn_GDNativeExtensionClassCreateInstance(
    const GDNativeExtensionClassCreateInstance cb, void *p_userdata);
void cgo_callfn_GDNativeExtensionClassFreeInstance(
    const GDNativeExtensionClassFreeInstance cb, void *p_userdata,
    GDExtensionClassInstancePtr p_instance);
GDNativeExtensionClassCallVirtual cgo_callfn_GDNativeExtensionClassGetVirtual(
    const GDNativeExtensionClassGetVirtual cb, void *p_userdata,
    const char *p_name);
void cgo_callfn_GDNativeExtensionClassMethodCall(
    const GDNativeExtensionClassMethodCall cb, void *method_userdata,
    GDExtensionClassInstancePtr p_instance, const GDNativeVariantPtr *p_args,
    const GDNativeInt p_argument_count, GDNativeVariantPtr r_return,
    GDNativeCallError *r_error);
void cgo_callfn_GDNativeExtensionClassMethodPtrCall(
    const GDNativeExtensionClassMethodPtrCall cb, void *method_userdata,
    GDExtensionClassInstancePtr p_instance, const GDNativeTypePtr *p_args,
    GDNativeTypePtr r_ret);
GDNativeVariantType cgo_callfn_GDNativeExtensionClassMethodGetArgumentType(
    const GDNativeExtensionClassMethodGetArgumentType cb,
    void *p_method_userdata, int32_t p_argument);
void cgo_callfn_GDNativeExtensionClassMethodGetArgumentInfo(
    const GDNativeExtensionClassMethodGetArgumentInfo cb,
    void *p_method_userdata, int32_t p_argument, GDNativePropertyInfo *r_info);
GDNativeExtensionClassMethodArgumentMetadata
cgo_callfn_GDNativeExtensionClassMethodGetArgumentMetadata(
    const GDNativeExtensionClassMethodGetArgumentMetadata cb,
    void *p_method_userdata, int32_t p_argument);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstanceSet(
    const GDNativeExtensionScriptInstanceSet cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeStringNamePtr p_name, const GDNativeVariantPtr p_value);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstanceGet(
    const GDNativeExtensionScriptInstanceGet cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeStringNamePtr p_name, GDNativeVariantPtr r_ret);
const GDNativePropertyInfo *
cgo_callfn_GDNativeExtensionScriptInstanceGetPropertyList(
    const GDNativeExtensionScriptInstanceGetPropertyList cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance, uint32_t *r_count);
void cgo_callfn_GDNativeExtensionScriptInstanceFreePropertyList(
    const GDNativeExtensionScriptInstanceFreePropertyList cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativePropertyInfo *p_list);
GDNativeVariantType cgo_callfn_GDNativeExtensionScriptInstanceGetPropertyType(
    const GDNativeExtensionScriptInstanceGetPropertyType cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeStringNamePtr p_name, GDNativeBool *r_is_valid);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstancePropertyCanRevert(
    const GDNativeExtensionScriptInstancePropertyCanRevert cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeStringNamePtr p_name);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstancePropertyGetRevert(
    const GDNativeExtensionScriptInstancePropertyGetRevert cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeStringNamePtr p_name, GDNativeVariantPtr r_ret);
GDNativeObjectPtr cgo_callfn_GDNativeExtensionScriptInstanceGetOwner(
    const GDNativeExtensionScriptInstanceGetOwner cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
void cgo_callfn_GDNativeExtensionScriptInstancePropertyStateAdd(
    const GDNativeExtensionScriptInstancePropertyStateAdd cb,
    const GDNativeStringNamePtr p_name, const GDNativeVariantPtr p_value,
    void *p_userdata);
void cgo_callfn_GDNativeExtensionScriptInstanceGetPropertyState(
    const GDNativeExtensionScriptInstanceGetPropertyState cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    GDNativeExtensionScriptInstancePropertyStateAdd p_add_func,
    void *p_userdata);
const GDNativeMethodInfo *
cgo_callfn_GDNativeExtensionScriptInstanceGetMethodList(
    const GDNativeExtensionScriptInstanceGetMethodList cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance, uint32_t *r_count);
void cgo_callfn_GDNativeExtensionScriptInstanceFreeMethodList(
    const GDNativeExtensionScriptInstanceFreeMethodList cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeMethodInfo *p_list);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstanceHasMethod(
    const GDNativeExtensionScriptInstanceHasMethod cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    const GDNativeStringNamePtr p_name);
void cgo_callfn_GDNativeExtensionScriptInstanceCall(
    const GDNativeExtensionScriptInstanceCall cb,
    GDNativeExtensionScriptInstanceDataPtr p_self,
    const GDNativeStringNamePtr p_method, const GDNativeVariantPtr *p_args,
    const GDNativeInt p_argument_count, GDNativeVariantPtr r_return,
    GDNativeCallError *r_error);
void cgo_callfn_GDNativeExtensionScriptInstanceNotification(
    const GDNativeExtensionScriptInstanceNotification cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance, int32_t p_what);
const char *cgo_callfn_GDNativeExtensionScriptInstanceToString(
    const GDNativeExtensionScriptInstanceToString cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance,
    GDNativeBool *r_is_valid);
void cgo_callfn_GDNativeExtensionScriptInstanceRefCountIncremented(
    const GDNativeExtensionScriptInstanceRefCountIncremented cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstanceRefCountDecremented(
    const GDNativeExtensionScriptInstanceRefCountDecremented cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
GDNativeObjectPtr cgo_callfn_GDNativeExtensionScriptInstanceGetScript(
    const GDNativeExtensionScriptInstanceGetScript cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
GDNativeBool cgo_callfn_GDNativeExtensionScriptInstanceIsPlaceholder(
    const GDNativeExtensionScriptInstanceIsPlaceholder cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
GDNativeExtensionScriptLanguagePtr
cgo_callfn_GDNativeExtensionScriptInstanceGetLanguage(
    const GDNativeExtensionScriptInstanceGetLanguage cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
void cgo_callfn_GDNativeExtensionScriptInstanceFree(
    const GDNativeExtensionScriptInstanceFree cb,
    GDNativeExtensionScriptInstanceDataPtr p_instance);
GDNativeBool cgo_callfn_GDNativeInitializationFunction(
    const GDNativeInitializationFunction cb,
    const GDNativeInterface *p_interface,
    const GDNativeExtensionClassLibraryPtr p_library,
    GDNativeInitialization *r_initialization);
// section: structs
/* struct (7) GDNativeInterface */
void *cgo_callfn_GDNativeInterface_mem_alloc(const GDNativeInterface *p_struct,
                                             size_t p_bytes);
void *
cgo_callfn_GDNativeInterface_mem_realloc(const GDNativeInterface *p_struct,
                                         void *p_ptr, size_t p_bytes);
void cgo_callfn_GDNativeInterface_mem_free(const GDNativeInterface *p_struct,
                                           void *p_ptr);
void cgo_callfn_GDNativeInterface_print_error(const GDNativeInterface *p_struct,
                                              const char *p_description,
                                              const char *p_function,
                                              const char *p_file,
                                              int32_t p_line);
void cgo_callfn_GDNativeInterface_print_warning(
    const GDNativeInterface *p_struct, const char *p_description,
    const char *p_function, const char *p_file, int32_t p_line);
void cgo_callfn_GDNativeInterface_print_script_error(
    const GDNativeInterface *p_struct, const char *p_description,
    const char *p_function, const char *p_file, int32_t p_line);
uint64_t cgo_callfn_GDNativeInterface_get_native_struct_size(
    const GDNativeInterface *p_struct, const char *p_name);
void cgo_callfn_GDNativeInterface_variant_new_copy(
    const GDNativeInterface *p_struct, GDNativeVariantPtr r_dest,
    const GDNativeVariantPtr p_src);
void cgo_callfn_GDNativeInterface_variant_new_nil(
    const GDNativeInterface *p_struct, GDNativeVariantPtr r_dest);
void cgo_callfn_GDNativeInterface_variant_destroy(
    const GDNativeInterface *p_struct, GDNativeVariantPtr p_self);
void cgo_callfn_GDNativeInterface_variant_call(
    const GDNativeInterface *p_struct, GDNativeVariantPtr p_self,
    const GDNativeStringNamePtr p_method, const GDNativeVariantPtr *p_args,
    const GDNativeInt p_argument_count, GDNativeVariantPtr r_return,
    GDNativeCallError *r_error);
void cgo_callfn_GDNativeInterface_variant_call_static(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    const GDNativeStringNamePtr p_method, const GDNativeVariantPtr *p_args,
    const GDNativeInt p_argument_count, GDNativeVariantPtr r_return,
    GDNativeCallError *r_error);
void cgo_callfn_GDNativeInterface_variant_evaluate(
    const GDNativeInterface *p_struct, GDNativeVariantOperator p_op,
    const GDNativeVariantPtr p_a, const GDNativeVariantPtr p_b,
    GDNativeVariantPtr r_return, GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_set(const GDNativeInterface *p_struct,
                                              GDNativeVariantPtr p_self,
                                              const GDNativeVariantPtr p_key,
                                              const GDNativeVariantPtr p_value,
                                              GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_set_named(
    const GDNativeInterface *p_struct, GDNativeVariantPtr p_self,
    const GDNativeStringNamePtr p_key, const GDNativeVariantPtr p_value,
    GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_set_keyed(
    const GDNativeInterface *p_struct, GDNativeVariantPtr p_self,
    const GDNativeVariantPtr p_key, const GDNativeVariantPtr p_value,
    GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_set_indexed(
    const GDNativeInterface *p_struct, GDNativeVariantPtr p_self,
    GDNativeInt p_index, const GDNativeVariantPtr p_value,
    GDNativeBool *r_valid, GDNativeBool *r_oob);
void cgo_callfn_GDNativeInterface_variant_get(const GDNativeInterface *p_struct,
                                              const GDNativeVariantPtr p_self,
                                              const GDNativeVariantPtr p_key,
                                              GDNativeVariantPtr r_ret,
                                              GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_get_named(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    const GDNativeStringNamePtr p_key, GDNativeVariantPtr r_ret,
    GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_get_keyed(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    const GDNativeVariantPtr p_key, GDNativeVariantPtr r_ret,
    GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_get_indexed(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeInt p_index, GDNativeVariantPtr r_ret, GDNativeBool *r_valid,
    GDNativeBool *r_oob);
GDNativeBool cgo_callfn_GDNativeInterface_variant_iter_init(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeVariantPtr r_iter, GDNativeBool *r_valid);
GDNativeBool cgo_callfn_GDNativeInterface_variant_iter_next(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeVariantPtr r_iter, GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_iter_get(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeVariantPtr r_iter, GDNativeVariantPtr r_ret, GDNativeBool *r_valid);
GDNativeInt
cgo_callfn_GDNativeInterface_variant_hash(const GDNativeInterface *p_struct,
                                          const GDNativeVariantPtr p_self);
GDNativeInt cgo_callfn_GDNativeInterface_variant_recursive_hash(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeInt p_recursion_count);
GDNativeBool cgo_callfn_GDNativeInterface_variant_hash_compare(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    const GDNativeVariantPtr p_other);
GDNativeBool cgo_callfn_GDNativeInterface_variant_booleanize(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self);
void cgo_callfn_GDNativeInterface_variant_duplicate(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeVariantPtr r_ret, GDNativeBool p_deep);
void cgo_callfn_GDNativeInterface_variant_stringify(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    GDNativeStringPtr r_ret);
GDNativeVariantType
cgo_callfn_GDNativeInterface_variant_get_type(const GDNativeInterface *p_struct,
                                              const GDNativeVariantPtr p_self);
GDNativeBool cgo_callfn_GDNativeInterface_variant_has_method(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    const GDNativeStringNamePtr p_method);
GDNativeBool cgo_callfn_GDNativeInterface_variant_has_member(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    const GDNativeStringNamePtr p_member);
GDNativeBool cgo_callfn_GDNativeInterface_variant_has_key(
    const GDNativeInterface *p_struct, const GDNativeVariantPtr p_self,
    const GDNativeVariantPtr p_key, GDNativeBool *r_valid);
void cgo_callfn_GDNativeInterface_variant_get_type_name(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    GDNativeStringPtr r_name);
GDNativeBool cgo_callfn_GDNativeInterface_variant_can_convert(
    const GDNativeInterface *p_struct, GDNativeVariantType p_from,
    GDNativeVariantType p_to);
GDNativeBool cgo_callfn_GDNativeInterface_variant_can_convert_strict(
    const GDNativeInterface *p_struct, GDNativeVariantType p_from,
    GDNativeVariantType p_to);
GDNativeVariantFromTypeConstructorFunc
cgo_callfn_GDNativeInterface_get_variant_from_type_constructor(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
GDNativeTypeFromVariantConstructorFunc
cgo_callfn_GDNativeInterface_get_variant_to_type_constructor(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
GDNativePtrOperatorEvaluator
cgo_callfn_GDNativeInterface_variant_get_ptr_operator_evaluator(
    const GDNativeInterface *p_struct, GDNativeVariantOperator p_operator,
    GDNativeVariantType p_type_a, GDNativeVariantType p_type_b);
GDNativePtrBuiltInMethod
cgo_callfn_GDNativeInterface_variant_get_ptr_builtin_method(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    const char *p_method, GDNativeInt p_hash);
GDNativePtrConstructor cgo_callfn_GDNativeInterface_variant_get_ptr_constructor(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    int32_t p_constructor);
GDNativePtrDestructor cgo_callfn_GDNativeInterface_variant_get_ptr_destructor(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
void cgo_callfn_GDNativeInterface_variant_construct(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    GDNativeVariantPtr p_base, const GDNativeVariantPtr *p_args,
    int32_t p_argument_count, GDNativeCallError *r_error);
GDNativePtrSetter cgo_callfn_GDNativeInterface_variant_get_ptr_setter(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    const char *p_member);
GDNativePtrGetter cgo_callfn_GDNativeInterface_variant_get_ptr_getter(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    const char *p_member);
GDNativePtrIndexedSetter
cgo_callfn_GDNativeInterface_variant_get_ptr_indexed_setter(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
GDNativePtrIndexedGetter
cgo_callfn_GDNativeInterface_variant_get_ptr_indexed_getter(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
GDNativePtrKeyedSetter
cgo_callfn_GDNativeInterface_variant_get_ptr_keyed_setter(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
GDNativePtrKeyedGetter
cgo_callfn_GDNativeInterface_variant_get_ptr_keyed_getter(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
GDNativePtrKeyedChecker
cgo_callfn_GDNativeInterface_variant_get_ptr_keyed_checker(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type);
void cgo_callfn_GDNativeInterface_variant_get_constant_value(
    const GDNativeInterface *p_struct, GDNativeVariantType p_type,
    const char *p_constant, GDNativeVariantPtr r_ret);
GDNativePtrUtilityFunction
cgo_callfn_GDNativeInterface_variant_get_ptr_utility_function(
    const GDNativeInterface *p_struct, const char *p_function,
    GDNativeInt p_hash);
void cgo_callfn_GDNativeInterface_string_new_with_latin1_chars(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char *p_contents);
void cgo_callfn_GDNativeInterface_string_new_with_utf8_chars(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char *p_contents);
void cgo_callfn_GDNativeInterface_string_new_with_utf16_chars(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char16_t *p_contents);
void cgo_callfn_GDNativeInterface_string_new_with_utf32_chars(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char32_t *p_contents);
void cgo_callfn_GDNativeInterface_string_new_with_wide_chars(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const wchar_t *p_contents);
void cgo_callfn_GDNativeInterface_string_new_with_latin1_chars_and_len(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char *p_contents, const GDNativeInt p_size);
void cgo_callfn_GDNativeInterface_string_new_with_utf8_chars_and_len(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char *p_contents, const GDNativeInt p_size);
void cgo_callfn_GDNativeInterface_string_new_with_utf16_chars_and_len(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char16_t *p_contents, const GDNativeInt p_size);
void cgo_callfn_GDNativeInterface_string_new_with_utf32_chars_and_len(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const char32_t *p_contents, const GDNativeInt p_size);
void cgo_callfn_GDNativeInterface_string_new_with_wide_chars_and_len(
    const GDNativeInterface *p_struct, GDNativeStringPtr r_dest,
    const wchar_t *p_contents, const GDNativeInt p_size);
GDNativeInt cgo_callfn_GDNativeInterface_string_to_latin1_chars(
    const GDNativeInterface *p_struct, const GDNativeStringPtr p_self,
    char *r_text, GDNativeInt p_max_write_length);
GDNativeInt cgo_callfn_GDNativeInterface_string_to_utf8_chars(
    const GDNativeInterface *p_struct, const GDNativeStringPtr p_self,
    char *r_text, GDNativeInt p_max_write_length);
GDNativeInt cgo_callfn_GDNativeInterface_string_to_utf16_chars(
    const GDNativeInterface *p_struct, const GDNativeStringPtr p_self,
    char16_t *r_text, GDNativeInt p_max_write_length);
GDNativeInt cgo_callfn_GDNativeInterface_string_to_utf32_chars(
    const GDNativeInterface *p_struct, const GDNativeStringPtr p_self,
    char32_t *r_text, GDNativeInt p_max_write_length);
GDNativeInt cgo_callfn_GDNativeInterface_string_to_wide_chars(
    const GDNativeInterface *p_struct, const GDNativeStringPtr p_self,
    wchar_t *r_text, GDNativeInt p_max_write_length);
char32_t *cgo_callfn_GDNativeInterface_string_operator_index(
    const GDNativeInterface *p_struct, GDNativeStringPtr p_self,
    GDNativeInt p_index);
const char32_t *cgo_callfn_GDNativeInterface_string_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeStringPtr p_self,
    GDNativeInt p_index);
uint8_t *cgo_callfn_GDNativeInterface_packed_byte_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
const uint8_t *
cgo_callfn_GDNativeInterface_packed_byte_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeTypePtr cgo_callfn_GDNativeInterface_packed_color_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeTypePtr
cgo_callfn_GDNativeInterface_packed_color_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
float *cgo_callfn_GDNativeInterface_packed_float32_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
const float *
cgo_callfn_GDNativeInterface_packed_float32_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
double *cgo_callfn_GDNativeInterface_packed_float64_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
const double *
cgo_callfn_GDNativeInterface_packed_float64_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
int32_t *cgo_callfn_GDNativeInterface_packed_int32_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
const int32_t *
cgo_callfn_GDNativeInterface_packed_int32_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
int64_t *cgo_callfn_GDNativeInterface_packed_int64_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
const int64_t *
cgo_callfn_GDNativeInterface_packed_int64_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeStringPtr
cgo_callfn_GDNativeInterface_packed_string_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeStringPtr
cgo_callfn_GDNativeInterface_packed_string_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeTypePtr
cgo_callfn_GDNativeInterface_packed_vector2_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeTypePtr
cgo_callfn_GDNativeInterface_packed_vector2_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeTypePtr
cgo_callfn_GDNativeInterface_packed_vector3_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeTypePtr
cgo_callfn_GDNativeInterface_packed_vector3_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeVariantPtr cgo_callfn_GDNativeInterface_array_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeVariantPtr cgo_callfn_GDNativeInterface_array_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    GDNativeInt p_index);
GDNativeVariantPtr cgo_callfn_GDNativeInterface_dictionary_operator_index(
    const GDNativeInterface *p_struct, GDNativeTypePtr p_self,
    const GDNativeVariantPtr p_key);
GDNativeVariantPtr cgo_callfn_GDNativeInterface_dictionary_operator_index_const(
    const GDNativeInterface *p_struct, const GDNativeTypePtr p_self,
    const GDNativeVariantPtr p_key);
void cgo_callfn_GDNativeInterface_object_method_bind_call(
    const GDNativeInterface *p_struct,
    const GDNativeMethodBindPtr p_method_bind, GDNativeObjectPtr p_instance,
    const GDNativeVariantPtr *p_args, GDNativeInt p_arg_count,
    GDNativeVariantPtr r_ret, GDNativeCallError *r_error);
void cgo_callfn_GDNativeInterface_object_method_bind_ptrcall(
    const GDNativeInterface *p_struct,
    const GDNativeMethodBindPtr p_method_bind, GDNativeObjectPtr p_instance,
    const GDNativeTypePtr *p_args, GDNativeTypePtr r_ret);
void cgo_callfn_GDNativeInterface_object_destroy(
    const GDNativeInterface *p_struct, GDNativeObjectPtr p_o);
GDNativeObjectPtr cgo_callfn_GDNativeInterface_global_get_singleton(
    const GDNativeInterface *p_struct, const char *p_name);
void *cgo_callfn_GDNativeInterface_object_get_instance_binding(
    const GDNativeInterface *p_struct, GDNativeObjectPtr p_o, void *p_token,
    const GDNativeInstanceBindingCallbacks *p_callbacks);
void cgo_callfn_GDNativeInterface_object_set_instance_binding(
    const GDNativeInterface *p_struct, GDNativeObjectPtr p_o, void *p_token,
    void *p_binding, const GDNativeInstanceBindingCallbacks *p_callbacks);
void cgo_callfn_GDNativeInterface_object_set_instance(
    const GDNativeInterface *p_struct, GDNativeObjectPtr p_o,
    const char *p_classname, GDExtensionClassInstancePtr p_instance);
GDNativeObjectPtr
cgo_callfn_GDNativeInterface_object_cast_to(const GDNativeInterface *p_struct,
                                            const GDNativeObjectPtr p_object,
                                            void *p_class_tag);
GDNativeObjectPtr cgo_callfn_GDNativeInterface_object_get_instance_from_id(
    const GDNativeInterface *p_struct, GDObjectInstanceID p_instance_id);
GDObjectInstanceID cgo_callfn_GDNativeInterface_object_get_instance_id(
    const GDNativeInterface *p_struct, const GDNativeObjectPtr p_object);
GDNativeScriptInstancePtr cgo_callfn_GDNativeInterface_script_instance_create(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionScriptInstanceInfo *p_info,
    GDNativeExtensionScriptInstanceDataPtr p_instance_data);
GDNativeObjectPtr cgo_callfn_GDNativeInterface_classdb_construct_object(
    const GDNativeInterface *p_struct, const char *p_classname);
GDNativeMethodBindPtr cgo_callfn_GDNativeInterface_classdb_get_method_bind(
    const GDNativeInterface *p_struct, const char *p_classname,
    const char *p_methodname, GDNativeInt p_hash);
void *cgo_callfn_GDNativeInterface_classdb_get_class_tag(
    const GDNativeInterface *p_struct, const char *p_classname);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const char *p_parent_class_name,
    const GDNativeExtensionClassCreationInfo *p_extension_funcs);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class_method(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const GDNativeExtensionClassMethodInfo *p_method_info);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class_integer_constant(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const char *p_enum_name, const char *p_constant_name,
    GDNativeInt p_constant_value, GDNativeBool p_is_bitfield);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class_property(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const GDNativePropertyInfo *p_info, const char *p_setter,
    const char *p_getter);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class_property_group(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const char *p_group_name, const char *p_prefix);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class_property_subgroup(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const char *p_subgroup_name, const char *p_prefix);
void cgo_callfn_GDNativeInterface_classdb_register_extension_class_signal(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name,
    const char *p_signal_name, const GDNativePropertyInfo *p_argument_info,
    GDNativeInt p_argument_count);
void cgo_callfn_GDNativeInterface_classdb_unregister_extension_class(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, const char *p_class_name);
void cgo_callfn_GDNativeInterface_get_library_path(
    const GDNativeInterface *p_struct,
    const GDNativeExtensionClassLibraryPtr p_library, GDNativeStringPtr r_path);
/* struct (8) GDNativeInitialization */
void cgo_callfn_GDNativeInitialization_initialize(
    const GDNativeInitialization *p_struct, void *userdata,
    GDNativeInitializationLevel p_level);
void cgo_callfn_GDNativeInitialization_deinitialize(
    const GDNativeInitialization *p_struct, void *userdata,
    GDNativeInitializationLevel p_level);
#endif
