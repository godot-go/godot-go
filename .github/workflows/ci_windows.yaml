name: godot-go CI on Windows

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - "**/*.gdextension"
      - ".github/workflows/ci_windows.yaml"

  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - "**/*.gdextension"
      - ".github/workflows/ci_windows.yaml"

jobs:
  run_test:
    name: "run tests"
    strategy:
      fail-fast: true
      matrix:
        targets:
          - windows/amd64
    runs-on: windows-latest
    env:
      GODOT: ./Godot_v4.3-stable_win64.exe
    timeout-minutes: 20
    steps:
      - name: Add Go 1.22.x To System Path
        shell: bash
        run: |
          echo "${GOROOT_1_22_X64}/bin" >> $GITHUB_PATH
          echo "GITHUB_PATH=${GITHUB_PATH}"
      - name: Set up scoop
        uses: MinoruSekine/setup-scoop@main
        with:
          scoop_checkup: 'true'
      - name: Set up scoop extras
        run: scoop bucket add extras;
      - name: Install scoop packages
        run: scoop install wget unzip
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Godot 4.3 stable
        run: |
          wget https://github.com/godotengine/godot-builds/releases/download/4.3-stable/Godot_v4.3-stable_win64.exe.zip
          unzip Godot_v4.3-stable_win64.exe.zip -d ./
        shell: bash

      # Download custom build of godot for windows
      # - name: Download Godot binary
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: ci_build_godot_windows.yaml
      #     workflow_conclusion: success
      #     name: godot-windows-editor-amd64
      #     path: bin/

      - name: Update Godot Headers
        run: |
          make update_godot_headers_from_binary

      - name: Code Generation
        run: |
          PATH=$PATH:$(go env GOPATH)/bin make generate
        shell: bash

      - name: Build
        run: |
          make build
        shell: bash

      - name: List Artifacts Directory
        run: |
          ls -alh test/demo/lib
          ls -alh test/demo/
        shell: bash

      - name: Gen Test Project Files
        timeout-minutes: 3
        run: make ci_gen_test_project_files
        continue-on-error: true
        env:
          CI: 1
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"

      - name: Test
        timeout-minutes: 7
        run: make test
        continue-on-error: true
        shell: bash
        env:
          CI: 1
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"
