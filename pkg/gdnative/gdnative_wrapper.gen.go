/*
------------------------------------------------------------------------------
//   This code was generated by template gdnative_wrapper.go.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "gdnative.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------
*/
package gdnative

//revive:disable

// #include <godot/gdnative_interface.h>
// #include "gdnative_wrapper.gen.h"
// #include <stdint.h>
// #include <stdio.h>
// #include <stdlib.h>
import "C"
import (
	"unsafe"
)

// aliases
type Uint64T C.uint64_t
type Uint32T C.uint32_t
type Uint16T C.uint16_t
type Uint8T C.uint8_t
type Int32T C.int32_t
type Int16T C.int16_t
type Int8T C.int8_t
type Char C.char
type WcharT C.wchar_t
type Char32T C.char32_t
type Char16T C.char16_t
type GDNativeVariantPtr C.GDNativeVariantPtr
type GDNativeStringNamePtr C.GDNativeStringNamePtr
type GDNativeStringPtr C.GDNativeStringPtr
type GDNativeObjectPtr C.GDNativeObjectPtr
type GDNativeTypePtr C.GDNativeTypePtr
type GDNativeExtensionPtr C.GDNativeExtensionPtr
type GDNativeMethodBindPtr C.GDNativeMethodBindPtr
type GDNativeInt C.GDNativeInt
type GDNativeBool C.GDNativeBool
type GDObjectInstanceID C.GDObjectInstanceID
type GDExtensionClassInstancePtr C.GDExtensionClassInstancePtr
type GDNativeExtensionClassLibraryPtr C.GDNativeExtensionClassLibraryPtr
type GDNativeExtensionScriptInstanceDataPtr C.GDNativeExtensionScriptInstanceDataPtr
type GDNativeExtensionScriptLanguagePtr C.GDNativeExtensionScriptLanguagePtr
type GDNativeScriptInstancePtr C.GDNativeScriptInstancePtr

// enums
type GDNativeVariantType C.GDNativeVariantType

const (
	GDNATIVE_VARIANT_TYPE_NIL GDNativeVariantType = iota
	GDNATIVE_VARIANT_TYPE_BOOL
	GDNATIVE_VARIANT_TYPE_INT
	GDNATIVE_VARIANT_TYPE_FLOAT
	GDNATIVE_VARIANT_TYPE_STRING
	GDNATIVE_VARIANT_TYPE_VECTOR2
	GDNATIVE_VARIANT_TYPE_VECTOR2I
	GDNATIVE_VARIANT_TYPE_RECT2
	GDNATIVE_VARIANT_TYPE_RECT2I
	GDNATIVE_VARIANT_TYPE_VECTOR3
	GDNATIVE_VARIANT_TYPE_VECTOR3I
	GDNATIVE_VARIANT_TYPE_TRANSFORM2D
	GDNATIVE_VARIANT_TYPE_VECTOR4
	GDNATIVE_VARIANT_TYPE_VECTOR4I
	GDNATIVE_VARIANT_TYPE_PLANE
	GDNATIVE_VARIANT_TYPE_QUATERNION
	GDNATIVE_VARIANT_TYPE_AABB
	GDNATIVE_VARIANT_TYPE_BASIS
	GDNATIVE_VARIANT_TYPE_TRANSFORM3D
	GDNATIVE_VARIANT_TYPE_PROJECTION
	GDNATIVE_VARIANT_TYPE_COLOR
	GDNATIVE_VARIANT_TYPE_STRING_NAME
	GDNATIVE_VARIANT_TYPE_NODE_PATH
	GDNATIVE_VARIANT_TYPE_RID
	GDNATIVE_VARIANT_TYPE_OBJECT
	GDNATIVE_VARIANT_TYPE_CALLABLE
	GDNATIVE_VARIANT_TYPE_SIGNAL
	GDNATIVE_VARIANT_TYPE_DICTIONARY
	GDNATIVE_VARIANT_TYPE_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_BYTE_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_INT32_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_INT64_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_FLOAT32_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_FLOAT64_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_STRING_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_VECTOR2_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_VECTOR3_ARRAY
	GDNATIVE_VARIANT_TYPE_PACKED_COLOR_ARRAY
	GDNATIVE_VARIANT_TYPE_VARIANT_MAX
)

type GDNativeVariantOperator C.GDNativeVariantOperator

const (
	GDNATIVE_VARIANT_OP_EQUAL GDNativeVariantOperator = iota
	GDNATIVE_VARIANT_OP_NOT_EQUAL
	GDNATIVE_VARIANT_OP_LESS
	GDNATIVE_VARIANT_OP_LESS_EQUAL
	GDNATIVE_VARIANT_OP_GREATER
	GDNATIVE_VARIANT_OP_GREATER_EQUAL
	GDNATIVE_VARIANT_OP_ADD
	GDNATIVE_VARIANT_OP_SUBTRACT
	GDNATIVE_VARIANT_OP_MULTIPLY
	GDNATIVE_VARIANT_OP_DIVIDE
	GDNATIVE_VARIANT_OP_NEGATE
	GDNATIVE_VARIANT_OP_POSITIVE
	GDNATIVE_VARIANT_OP_MODULE
	GDNATIVE_VARIANT_OP_POWER
	GDNATIVE_VARIANT_OP_SHIFT_LEFT
	GDNATIVE_VARIANT_OP_SHIFT_RIGHT
	GDNATIVE_VARIANT_OP_BIT_AND
	GDNATIVE_VARIANT_OP_BIT_OR
	GDNATIVE_VARIANT_OP_BIT_XOR
	GDNATIVE_VARIANT_OP_BIT_NEGATE
	GDNATIVE_VARIANT_OP_AND
	GDNATIVE_VARIANT_OP_OR
	GDNATIVE_VARIANT_OP_XOR
	GDNATIVE_VARIANT_OP_NOT
	GDNATIVE_VARIANT_OP_IN
	GDNATIVE_VARIANT_OP_MAX
)

type GDNativeCallErrorType C.GDNativeCallErrorType

const (
	GDNATIVE_CALL_OK GDNativeCallErrorType = iota
	GDNATIVE_CALL_ERROR_INVALID_METHOD
	GDNATIVE_CALL_ERROR_INVALID_ARGUMENT
	GDNATIVE_CALL_ERROR_TOO_MANY_ARGUMENTS
	GDNATIVE_CALL_ERROR_TOO_FEW_ARGUMENTS
	GDNATIVE_CALL_ERROR_INSTANCE_IS_NULL
	GDNATIVE_CALL_ERROR_METHOD_NOT_CONST
)

type GDNativeExtensionClassMethodFlags C.GDNativeExtensionClassMethodFlags

const (
	GDNATIVE_EXTENSION_METHOD_FLAG_NORMAL   GDNativeExtensionClassMethodFlags = 1
	GDNATIVE_EXTENSION_METHOD_FLAG_EDITOR                                     = 2
	GDNATIVE_EXTENSION_METHOD_FLAG_CONST                                      = 4
	GDNATIVE_EXTENSION_METHOD_FLAG_VIRTUAL                                    = 8
	GDNATIVE_EXTENSION_METHOD_FLAG_VARARG                                     = 16
	GDNATIVE_EXTENSION_METHOD_FLAG_STATIC                                     = 32
	GDNATIVE_EXTENSION_METHOD_FLAGS_DEFAULT                                   = GDNATIVE_EXTENSION_METHOD_FLAG_NORMAL
)

type GDNativeExtensionClassMethodArgumentMetadata C.GDNativeExtensionClassMethodArgumentMetadata

const (
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_NONE GDNativeExtensionClassMethodArgumentMetadata = iota
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT8
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT16
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT32
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT64
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT8
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT16
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT32
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT64
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_REAL_IS_FLOAT
	GDNATIVE_EXTENSION_METHOD_ARGUMENT_METADATA_REAL_IS_DOUBLE
)

type GDNativeInitializationLevel C.GDNativeInitializationLevel

const (
	GDNATIVE_INITIALIZATION_CORE GDNativeInitializationLevel = iota
	GDNATIVE_INITIALIZATION_SERVERS
	GDNATIVE_INITIALIZATION_SCENE
	GDNATIVE_INITIALIZATION_EDITOR
	GDNATIVE_MAX_INITIALIZATION_LEVEL
)

// functions
type GDNativeVariantFromTypeConstructorFunc C.GDNativeVariantFromTypeConstructorFunc
type GDNativeTypeFromVariantConstructorFunc C.GDNativeTypeFromVariantConstructorFunc
type GDNativePtrOperatorEvaluator C.GDNativePtrOperatorEvaluator
type GDNativePtrBuiltInMethod C.GDNativePtrBuiltInMethod
type GDNativePtrConstructor C.GDNativePtrConstructor
type GDNativePtrDestructor C.GDNativePtrDestructor
type GDNativePtrSetter C.GDNativePtrSetter
type GDNativePtrGetter C.GDNativePtrGetter
type GDNativePtrIndexedSetter C.GDNativePtrIndexedSetter
type GDNativePtrIndexedGetter C.GDNativePtrIndexedGetter
type GDNativePtrKeyedSetter C.GDNativePtrKeyedSetter
type GDNativePtrKeyedGetter C.GDNativePtrKeyedGetter
type GDNativePtrKeyedChecker C.GDNativePtrKeyedChecker
type GDNativePtrUtilityFunction C.GDNativePtrUtilityFunction
type GDNativeClassConstructor C.GDNativeClassConstructor
type GDNativeInstanceBindingCreateCallback C.GDNativeInstanceBindingCreateCallback
type GDNativeInstanceBindingFreeCallback C.GDNativeInstanceBindingFreeCallback
type GDNativeInstanceBindingReferenceCallback C.GDNativeInstanceBindingReferenceCallback
type GDNativeExtensionClassSet C.GDNativeExtensionClassSet
type GDNativeExtensionClassGet C.GDNativeExtensionClassGet
type GDNativeExtensionClassGetRID C.GDNativeExtensionClassGetRID
type GDNativeExtensionClassGetPropertyList C.GDNativeExtensionClassGetPropertyList
type GDNativeExtensionClassFreePropertyList C.GDNativeExtensionClassFreePropertyList
type GDNativeExtensionClassPropertyCanRevert C.GDNativeExtensionClassPropertyCanRevert
type GDNativeExtensionClassPropertyGetRevert C.GDNativeExtensionClassPropertyGetRevert
type GDNativeExtensionClassNotification C.GDNativeExtensionClassNotification
type GDNativeExtensionClassToString C.GDNativeExtensionClassToString
type GDNativeExtensionClassReference C.GDNativeExtensionClassReference
type GDNativeExtensionClassUnreference C.GDNativeExtensionClassUnreference
type GDNativeExtensionClassCallVirtual C.GDNativeExtensionClassCallVirtual
type GDNativeExtensionClassCreateInstance C.GDNativeExtensionClassCreateInstance
type GDNativeExtensionClassFreeInstance C.GDNativeExtensionClassFreeInstance
type GDNativeExtensionClassGetVirtual C.GDNativeExtensionClassGetVirtual
type GDNativeExtensionClassMethodCall C.GDNativeExtensionClassMethodCall
type GDNativeExtensionClassMethodPtrCall C.GDNativeExtensionClassMethodPtrCall
type GDNativeExtensionClassMethodGetArgumentType C.GDNativeExtensionClassMethodGetArgumentType
type GDNativeExtensionClassMethodGetArgumentInfo C.GDNativeExtensionClassMethodGetArgumentInfo
type GDNativeExtensionClassMethodGetArgumentMetadata C.GDNativeExtensionClassMethodGetArgumentMetadata
type GDNativeExtensionScriptInstanceSet C.GDNativeExtensionScriptInstanceSet
type GDNativeExtensionScriptInstanceGet C.GDNativeExtensionScriptInstanceGet
type GDNativeExtensionScriptInstanceGetPropertyList C.GDNativeExtensionScriptInstanceGetPropertyList
type GDNativeExtensionScriptInstanceFreePropertyList C.GDNativeExtensionScriptInstanceFreePropertyList
type GDNativeExtensionScriptInstanceGetPropertyType C.GDNativeExtensionScriptInstanceGetPropertyType
type GDNativeExtensionScriptInstancePropertyCanRevert C.GDNativeExtensionScriptInstancePropertyCanRevert
type GDNativeExtensionScriptInstancePropertyGetRevert C.GDNativeExtensionScriptInstancePropertyGetRevert
type GDNativeExtensionScriptInstanceGetOwner C.GDNativeExtensionScriptInstanceGetOwner
type GDNativeExtensionScriptInstancePropertyStateAdd C.GDNativeExtensionScriptInstancePropertyStateAdd
type GDNativeExtensionScriptInstanceGetPropertyState C.GDNativeExtensionScriptInstanceGetPropertyState
type GDNativeExtensionScriptInstanceGetMethodList C.GDNativeExtensionScriptInstanceGetMethodList
type GDNativeExtensionScriptInstanceFreeMethodList C.GDNativeExtensionScriptInstanceFreeMethodList
type GDNativeExtensionScriptInstanceHasMethod C.GDNativeExtensionScriptInstanceHasMethod
type GDNativeExtensionScriptInstanceCall C.GDNativeExtensionScriptInstanceCall
type GDNativeExtensionScriptInstanceNotification C.GDNativeExtensionScriptInstanceNotification
type GDNativeExtensionScriptInstanceToString C.GDNativeExtensionScriptInstanceToString
type GDNativeExtensionScriptInstanceRefCountIncremented C.GDNativeExtensionScriptInstanceRefCountIncremented
type GDNativeExtensionScriptInstanceRefCountDecremented C.GDNativeExtensionScriptInstanceRefCountDecremented
type GDNativeExtensionScriptInstanceGetScript C.GDNativeExtensionScriptInstanceGetScript
type GDNativeExtensionScriptInstanceIsPlaceholder C.GDNativeExtensionScriptInstanceIsPlaceholder
type GDNativeExtensionScriptInstanceGetLanguage C.GDNativeExtensionScriptInstanceGetLanguage
type GDNativeExtensionScriptInstanceFree C.GDNativeExtensionScriptInstanceFree
type GDNativeInitializationFunction C.GDNativeInitializationFunction

// custom functions
func CallFunc_GDNativePtrConstructor(
	cb GDNativePtrConstructor,
	p_base GDNativeTypePtr,
	p_args *GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrConstructor(
		(C.GDNativePtrConstructor)(cb),
		(C.GDNativeTypePtr)(p_base),
		(*C.GDNativeTypePtr)(p_args),
	)
}

func CallFunc_GDNativePtrDestructor(
	cb GDNativePtrDestructor,
	ptr GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrDestructor(
		(C.GDNativePtrDestructor)(cb),
		(C.GDNativeTypePtr)(ptr),
	)
}

func CallFunc_GDNativePtrOperatorEvaluator(
	cb GDNativePtrOperatorEvaluator,
	p_left GDNativeTypePtr,
	p_right GDNativeTypePtr,
	r_result GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrOperatorEvaluator(
		(C.GDNativePtrOperatorEvaluator)(cb),
		(C.GDNativeTypePtr)(p_left),
		(C.GDNativeTypePtr)(p_right),
		(C.GDNativeTypePtr)(r_result),
	)
}

func CallFunc_GDNativePtrBuiltInMethod(
	cb GDNativePtrBuiltInMethod,
	p_base GDNativeTypePtr,
	p_args *GDNativeTypePtr,
	r_return GDNativeTypePtr,
	p_argument_count int32,
) {
	C.cgo_callfn_GDNativePtrBuiltInMethod(
		(C.GDNativePtrBuiltInMethod)(cb),
		(C.GDNativeTypePtr)(p_base),
		(*C.GDNativeTypePtr)(p_args),
		(C.GDNativeTypePtr)(r_return),
		(C.int)(p_argument_count),
	)
}

func CallFunc_GDNativePtrUtilityFunction(
	cb GDNativePtrUtilityFunction,
	r_return GDNativeTypePtr,
	p_arguments *GDNativeTypePtr,
	p_argument_count int32,
) {
	C.cgo_callfn_GDNativePtrUtilityFunction(
		(C.GDNativePtrUtilityFunction)(cb),
		(C.GDNativeTypePtr)(r_return),
		(*C.GDNativeTypePtr)(p_arguments),
		(C.int)(p_argument_count),
	)
}

func CallFunc_GDNativePtrGetter(
	cb GDNativePtrGetter,
	p_base GDNativeTypePtr,
	r_value GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrGetter(
		(C.GDNativePtrGetter)(cb),
		(C.GDNativeTypePtr)(p_base),
		(C.GDNativeTypePtr)(r_value),
	)
}

func CallFunc_GDNativePtrSetter(
	cb GDNativePtrSetter,
	p_base GDNativeTypePtr,
	p_value GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrSetter(
		(C.GDNativePtrSetter)(cb),
		(C.GDNativeTypePtr)(p_base),
		(C.GDNativeTypePtr)(p_value),
	)
}

func CallFunc_GDNativePtrIndexedGetter(
	cb GDNativePtrIndexedGetter,
	p_base GDNativeTypePtr,
	p_index GDNativeInt,
	r_value GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrIndexedGetter(
		(C.GDNativePtrIndexedGetter)(cb),
		(C.GDNativeTypePtr)(p_base),
		(C.GDNativeInt)(p_index),
		(C.GDNativeTypePtr)(r_value),
	)
}

func CallFunc_GDNativePtrIndexedSetter(
	cb GDNativePtrIndexedSetter,
	p_base GDNativeTypePtr,
	p_index GDNativeInt,
	p_value GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativePtrIndexedSetter(
		(C.GDNativePtrIndexedSetter)(cb),
		(C.GDNativeTypePtr)(p_base),
		(C.GDNativeInt)(p_index),
		(C.GDNativeTypePtr)(p_value),
	)
}

func CallFunc_GDNativeVariantFromTypeConstructorFunc(
	cb GDNativeVariantFromTypeConstructorFunc,
	arg_0 GDNativeVariantPtr,
	arg_1 GDNativeTypePtr,
) {
	C.cgo_callfn_GDNativeVariantFromTypeConstructorFunc(
		(C.GDNativeVariantFromTypeConstructorFunc)(cb),
		(C.GDNativeVariantPtr)(arg_0),
		(C.GDNativeTypePtr)(arg_1),
	)
}

func CallFunc_GDNativeTypeFromVariantConstructorFunc(
	cb GDNativeTypeFromVariantConstructorFunc,
	arg_0 GDNativeTypePtr,
	arg_1 GDNativeVariantPtr,
) {
	C.cgo_callfn_GDNativeTypeFromVariantConstructorFunc(
		(C.GDNativeTypeFromVariantConstructorFunc)(cb),
		(C.GDNativeTypePtr)(arg_0),
		(C.GDNativeVariantPtr)(arg_1),
	)
}

// structs
type GDNativeCallError C.GDNativeCallError
type GDNativeInstanceBindingCallbacks C.GDNativeInstanceBindingCallbacks
type GDNativePropertyInfo C.GDNativePropertyInfo
type GDNativeMethodInfo C.GDNativeMethodInfo
type GDNativeExtensionClassCreationInfo C.GDNativeExtensionClassCreationInfo
type GDNativeExtensionClassMethodInfo C.GDNativeExtensionClassMethodInfo
type GDNativeExtensionScriptInstanceInfo C.GDNativeExtensionScriptInstanceInfo
type GDNativeInterface C.GDNativeInterface
type GDNativeInitialization C.GDNativeInitialization

// struct functions
/* struct (7) GDNativeInterface */

func GDNativeInterface_mem_alloc(p_struct *GDNativeInterface, p_bytes uint64) unsafe.Pointer {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.size_t)(p_bytes)              // size_t

	ret := C.cgo_callfn_GDNativeInterface_mem_alloc(arg0, arg1)

	// void *
	return unsafe.Pointer(ret)
}

func GDNativeInterface_mem_realloc(p_struct *GDNativeInterface, p_ptr unsafe.Pointer, p_bytes uint64) unsafe.Pointer {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := unsafe.Pointer(p_ptr)            // void *
	arg2 := (C.size_t)(p_bytes)              // size_t

	ret := C.cgo_callfn_GDNativeInterface_mem_realloc(arg0, arg1, arg2)

	// void *
	return unsafe.Pointer(ret)
}

func GDNativeInterface_mem_free(p_struct *GDNativeInterface, p_ptr unsafe.Pointer) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := unsafe.Pointer(p_ptr)            // void *

	C.cgo_callfn_GDNativeInterface_mem_free(arg0, arg1)

}

func GDNativeInterface_print_error(p_struct *GDNativeInterface, p_description string, p_function string, p_file string, p_line int32) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_description)         // const char *
	arg2 := C.CString(p_function)            // const char *
	arg3 := C.CString(p_file)                // const char *
	arg4 := (C.int32_t)(p_line)              // int32_t

	C.cgo_callfn_GDNativeInterface_print_error(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDNativeInterface_print_warning(p_struct *GDNativeInterface, p_description string, p_function string, p_file string, p_line int32) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_description)         // const char *
	arg2 := C.CString(p_function)            // const char *
	arg3 := C.CString(p_file)                // const char *
	arg4 := (C.int32_t)(p_line)              // int32_t

	C.cgo_callfn_GDNativeInterface_print_warning(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDNativeInterface_print_script_error(p_struct *GDNativeInterface, p_description string, p_function string, p_file string, p_line int32) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_description)         // const char *
	arg2 := C.CString(p_function)            // const char *
	arg3 := C.CString(p_file)                // const char *
	arg4 := (C.int32_t)(p_line)              // int32_t

	C.cgo_callfn_GDNativeInterface_print_script_error(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDNativeInterface_get_native_struct_size(p_struct *GDNativeInterface, p_name string) uint64 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_name)                // const char *

	ret := C.cgo_callfn_GDNativeInterface_get_native_struct_size(arg0, arg1)

	C.free(unsafe.Pointer(arg1))

	// uint64_t
	return uint64(ret)
}

func GDNativeInterface_variant_new_copy(p_struct *GDNativeInterface, r_dest GDNativeVariantPtr, p_src GDNativeVariantPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(r_dest)   // GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_src)    // const GDNativeVariantPtr

	C.cgo_callfn_GDNativeInterface_variant_new_copy(arg0, arg1, arg2)

}

func GDNativeInterface_variant_new_nil(p_struct *GDNativeInterface, r_dest GDNativeVariantPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(r_dest)   // GDNativeVariantPtr

	C.cgo_callfn_GDNativeInterface_variant_new_nil(arg0, arg1)

}

func GDNativeInterface_variant_destroy(p_struct *GDNativeInterface, p_self GDNativeVariantPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // GDNativeVariantPtr

	C.cgo_callfn_GDNativeInterface_variant_destroy(arg0, arg1)

}

func GDNativeInterface_variant_call(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_method GDNativeStringNamePtr, p_args *GDNativeVariantPtr, p_argument_count GDNativeInt, r_return GDNativeVariantPtr, r_error *GDNativeCallError) {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)      // GDNativeVariantPtr
	arg2 := (C.GDNativeStringNamePtr)(p_method) // const GDNativeStringNamePtr
	arg3 := (*C.GDNativeVariantPtr)(p_args)     // const GDNativeVariantPtr *
	arg4 := (C.GDNativeInt)(p_argument_count)   // const GDNativeInt
	arg5 := (C.GDNativeVariantPtr)(r_return)    // GDNativeVariantPtr
	arg6 := (*C.GDNativeCallError)(r_error)     // GDNativeCallError *

	C.cgo_callfn_GDNativeInterface_variant_call(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDNativeInterface_variant_call_static(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_method GDNativeStringNamePtr, p_args *GDNativeVariantPtr, p_argument_count GDNativeInt, r_return GDNativeVariantPtr, r_error *GDNativeCallError) {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)     // GDNativeVariantType
	arg2 := (C.GDNativeStringNamePtr)(p_method) // const GDNativeStringNamePtr
	arg3 := (*C.GDNativeVariantPtr)(p_args)     // const GDNativeVariantPtr *
	arg4 := (C.GDNativeInt)(p_argument_count)   // const GDNativeInt
	arg5 := (C.GDNativeVariantPtr)(r_return)    // GDNativeVariantPtr
	arg6 := (*C.GDNativeCallError)(r_error)     // GDNativeCallError *

	C.cgo_callfn_GDNativeInterface_variant_call_static(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDNativeInterface_variant_evaluate(p_struct *GDNativeInterface, p_op GDNativeVariantOperator, p_a GDNativeVariantPtr, p_b GDNativeVariantPtr, r_return GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct)  // GDNativeInterface
	arg1 := (C.GDNativeVariantOperator)(p_op) // GDNativeVariantOperator
	arg2 := (C.GDNativeVariantPtr)(p_a)       // const GDNativeVariantPtr
	arg3 := (C.GDNativeVariantPtr)(p_b)       // const GDNativeVariantPtr
	arg4 := (C.GDNativeVariantPtr)(r_return)  // GDNativeVariantPtr
	arg5 := (*C.GDNativeBool)(r_valid)        // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_evaluate(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDNativeInterface_variant_set(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeVariantPtr, p_value GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr
	arg3 := (C.GDNativeVariantPtr)(p_value)  // const GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_set(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_set_named(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeStringNamePtr, p_value GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // GDNativeVariantPtr
	arg2 := (C.GDNativeStringNamePtr)(p_key) // const GDNativeStringNamePtr
	arg3 := (C.GDNativeVariantPtr)(p_value)  // const GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_set_named(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_set_keyed(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeVariantPtr, p_value GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr
	arg3 := (C.GDNativeVariantPtr)(p_value)  // const GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_set_keyed(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_set_indexed(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_index GDNativeInt, p_value GDNativeVariantPtr, r_valid *GDNativeBool, r_oob *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // GDNativeVariantPtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt
	arg3 := (C.GDNativeVariantPtr)(p_value)  // const GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *
	arg5 := (*C.GDNativeBool)(r_oob)         // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_set_indexed(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDNativeInterface_variant_get(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeVariantPtr, r_ret GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr
	arg3 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_get(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_get_named(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeStringNamePtr, r_ret GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeStringNamePtr)(p_key) // const GDNativeStringNamePtr
	arg3 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_get_named(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_get_keyed(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeVariantPtr, r_ret GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr
	arg3 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_get_keyed(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_get_indexed(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_index GDNativeInt, r_ret GDNativeVariantPtr, r_valid *GDNativeBool, r_oob *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt
	arg3 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *
	arg5 := (*C.GDNativeBool)(r_oob)         // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_get_indexed(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDNativeInterface_variant_iter_init(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, r_iter GDNativeVariantPtr, r_valid *GDNativeBool) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(r_iter)   // GDNativeVariantPtr
	arg3 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	ret := C.cgo_callfn_GDNativeInterface_variant_iter_init(arg0, arg1, arg2, arg3)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_iter_next(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, r_iter GDNativeVariantPtr, r_valid *GDNativeBool) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(r_iter)   // GDNativeVariantPtr
	arg3 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	ret := C.cgo_callfn_GDNativeInterface_variant_iter_next(arg0, arg1, arg2, arg3)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_iter_get(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, r_iter GDNativeVariantPtr, r_ret GDNativeVariantPtr, r_valid *GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(r_iter)   // GDNativeVariantPtr
	arg3 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr
	arg4 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	C.cgo_callfn_GDNativeInterface_variant_iter_get(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_variant_hash(p_struct *GDNativeInterface, p_self GDNativeVariantPtr) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr

	ret := C.cgo_callfn_GDNativeInterface_variant_hash(arg0, arg1)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_variant_recursive_hash(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_recursion_count GDNativeInt) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct)   // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)     // const GDNativeVariantPtr
	arg2 := (C.GDNativeInt)(p_recursion_count) // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_variant_recursive_hash(arg0, arg1, arg2)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_variant_hash_compare(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_other GDNativeVariantPtr) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_other)  // const GDNativeVariantPtr

	ret := C.cgo_callfn_GDNativeInterface_variant_hash_compare(arg0, arg1, arg2)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_booleanize(p_struct *GDNativeInterface, p_self GDNativeVariantPtr) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr

	ret := C.cgo_callfn_GDNativeInterface_variant_booleanize(arg0, arg1)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_duplicate(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, r_ret GDNativeVariantPtr, p_deep GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr
	arg3 := (C.GDNativeBool)(p_deep)         // GDNativeBool

	C.cgo_callfn_GDNativeInterface_variant_duplicate(arg0, arg1, arg2, arg3)

}

func GDNativeInterface_variant_stringify(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, r_ret GDNativeStringPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeStringPtr)(r_ret)     // GDNativeStringPtr

	C.cgo_callfn_GDNativeInterface_variant_stringify(arg0, arg1, arg2)

}

func GDNativeInterface_variant_get_type(p_struct *GDNativeInterface, p_self GDNativeVariantPtr) GDNativeVariantType {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr

	ret := C.cgo_callfn_GDNativeInterface_variant_get_type(arg0, arg1)

	// GDNativeVariantType
	return (GDNativeVariantType)(ret)
}

func GDNativeInterface_variant_has_method(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_method GDNativeStringNamePtr) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)      // const GDNativeVariantPtr
	arg2 := (C.GDNativeStringNamePtr)(p_method) // const GDNativeStringNamePtr

	ret := C.cgo_callfn_GDNativeInterface_variant_has_method(arg0, arg1, arg2)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_has_member(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_member GDNativeStringNamePtr) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)     // GDNativeVariantType
	arg2 := (C.GDNativeStringNamePtr)(p_member) // const GDNativeStringNamePtr

	ret := C.cgo_callfn_GDNativeInterface_variant_has_member(arg0, arg1, arg2)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_has_key(p_struct *GDNativeInterface, p_self GDNativeVariantPtr, p_key GDNativeVariantPtr, r_valid *GDNativeBool) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantPtr)(p_self)   // const GDNativeVariantPtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr
	arg3 := (*C.GDNativeBool)(r_valid)       // GDNativeBool *

	ret := C.cgo_callfn_GDNativeInterface_variant_has_key(arg0, arg1, arg2, arg3)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_get_type_name(p_struct *GDNativeInterface, p_type GDNativeVariantType, r_name GDNativeStringPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := (C.GDNativeStringPtr)(r_name)    // GDNativeStringPtr

	C.cgo_callfn_GDNativeInterface_variant_get_type_name(arg0, arg1, arg2)

}

func GDNativeInterface_variant_can_convert(p_struct *GDNativeInterface, p_from GDNativeVariantType, p_to GDNativeVariantType) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_from)  // GDNativeVariantType
	arg2 := (C.GDNativeVariantType)(p_to)    // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_can_convert(arg0, arg1, arg2)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_variant_can_convert_strict(p_struct *GDNativeInterface, p_from GDNativeVariantType, p_to GDNativeVariantType) GDNativeBool {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_from)  // GDNativeVariantType
	arg2 := (C.GDNativeVariantType)(p_to)    // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_can_convert_strict(arg0, arg1, arg2)

	// GDNativeBool
	return (GDNativeBool)(ret)
}

func GDNativeInterface_get_variant_from_type_constructor(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativeVariantFromTypeConstructorFunc {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_get_variant_from_type_constructor(arg0, arg1)

	// GDNativeVariantFromTypeConstructorFunc
	return (GDNativeVariantFromTypeConstructorFunc)(ret)
}

func GDNativeInterface_get_variant_to_type_constructor(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativeTypeFromVariantConstructorFunc {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_get_variant_to_type_constructor(arg0, arg1)

	// GDNativeTypeFromVariantConstructorFunc
	return (GDNativeTypeFromVariantConstructorFunc)(ret)
}

func GDNativeInterface_variant_get_ptr_operator_evaluator(p_struct *GDNativeInterface, p_operator GDNativeVariantOperator, p_type_a GDNativeVariantType, p_type_b GDNativeVariantType) GDNativePtrOperatorEvaluator {
	arg0 := (*C.GDNativeInterface)(p_struct)        // GDNativeInterface
	arg1 := (C.GDNativeVariantOperator)(p_operator) // GDNativeVariantOperator
	arg2 := (C.GDNativeVariantType)(p_type_a)       // GDNativeVariantType
	arg3 := (C.GDNativeVariantType)(p_type_b)       // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_operator_evaluator(arg0, arg1, arg2, arg3)

	// GDNativePtrOperatorEvaluator
	return (GDNativePtrOperatorEvaluator)(ret)
}

func GDNativeInterface_variant_get_ptr_builtin_method(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_method string, p_hash GDNativeInt) GDNativePtrBuiltInMethod {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := C.CString(p_method)              // const char *
	arg3 := (C.GDNativeInt)(p_hash)          // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_builtin_method(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

	// GDNativePtrBuiltInMethod
	return (GDNativePtrBuiltInMethod)(ret)
}

func GDNativeInterface_variant_get_ptr_constructor(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_constructor int32) GDNativePtrConstructor {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := (C.int32_t)(p_constructor)       // int32_t

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_constructor(arg0, arg1, arg2)

	// GDNativePtrConstructor
	return (GDNativePtrConstructor)(ret)
}

func GDNativeInterface_variant_get_ptr_destructor(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativePtrDestructor {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_destructor(arg0, arg1)

	// GDNativePtrDestructor
	return (GDNativePtrDestructor)(ret)
}

func GDNativeInterface_variant_construct(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_base GDNativeVariantPtr, p_args *GDNativeVariantPtr, p_argument_count int32, r_error *GDNativeCallError) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := (C.GDNativeVariantPtr)(p_base)   // GDNativeVariantPtr
	arg3 := (*C.GDNativeVariantPtr)(p_args)  // const GDNativeVariantPtr *
	arg4 := (C.int32_t)(p_argument_count)    // int32_t
	arg5 := (*C.GDNativeCallError)(r_error)  // GDNativeCallError *

	C.cgo_callfn_GDNativeInterface_variant_construct(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDNativeInterface_variant_get_ptr_setter(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_member string) GDNativePtrSetter {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := C.CString(p_member)              // const char *

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_setter(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))

	// GDNativePtrSetter
	return (GDNativePtrSetter)(ret)
}

func GDNativeInterface_variant_get_ptr_getter(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_member string) GDNativePtrGetter {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := C.CString(p_member)              // const char *

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_getter(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))

	// GDNativePtrGetter
	return (GDNativePtrGetter)(ret)
}

func GDNativeInterface_variant_get_ptr_indexed_setter(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativePtrIndexedSetter {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_indexed_setter(arg0, arg1)

	// GDNativePtrIndexedSetter
	return (GDNativePtrIndexedSetter)(ret)
}

func GDNativeInterface_variant_get_ptr_indexed_getter(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativePtrIndexedGetter {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_indexed_getter(arg0, arg1)

	// GDNativePtrIndexedGetter
	return (GDNativePtrIndexedGetter)(ret)
}

func GDNativeInterface_variant_get_ptr_keyed_setter(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativePtrKeyedSetter {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_keyed_setter(arg0, arg1)

	// GDNativePtrKeyedSetter
	return (GDNativePtrKeyedSetter)(ret)
}

func GDNativeInterface_variant_get_ptr_keyed_getter(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativePtrKeyedGetter {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_keyed_getter(arg0, arg1)

	// GDNativePtrKeyedGetter
	return (GDNativePtrKeyedGetter)(ret)
}

func GDNativeInterface_variant_get_ptr_keyed_checker(p_struct *GDNativeInterface, p_type GDNativeVariantType) GDNativePtrKeyedChecker {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_keyed_checker(arg0, arg1)

	// GDNativePtrKeyedChecker
	return (GDNativePtrKeyedChecker)(ret)
}

func GDNativeInterface_variant_get_constant_value(p_struct *GDNativeInterface, p_type GDNativeVariantType, p_constant string, r_ret GDNativeVariantPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeVariantType)(p_type)  // GDNativeVariantType
	arg2 := C.CString(p_constant)            // const char *
	arg3 := (C.GDNativeVariantPtr)(r_ret)    // GDNativeVariantPtr

	C.cgo_callfn_GDNativeInterface_variant_get_constant_value(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDNativeInterface_variant_get_ptr_utility_function(p_struct *GDNativeInterface, p_function string, p_hash GDNativeInt) GDNativePtrUtilityFunction {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_function)            // const char *
	arg2 := (C.GDNativeInt)(p_hash)          // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_variant_get_ptr_utility_function(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg1))

	// GDNativePtrUtilityFunction
	return (GDNativePtrUtilityFunction)(ret)
}

func GDNativeInterface_string_new_with_latin1_chars(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents string) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := C.CString(p_contents)            // const char *

	C.cgo_callfn_GDNativeInterface_string_new_with_latin1_chars(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))
}

func GDNativeInterface_string_new_with_utf8_chars(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents string) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := C.CString(p_contents)            // const char *

	C.cgo_callfn_GDNativeInterface_string_new_with_utf8_chars(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))
}

func GDNativeInterface_string_new_with_utf16_chars(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents *Char16T) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := (*C.char16_t)(p_contents)        // const char16_t *

	C.cgo_callfn_GDNativeInterface_string_new_with_utf16_chars(arg0, arg1, arg2)

}

func GDNativeInterface_string_new_with_utf32_chars(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents *Char32T) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := (*C.char32_t)(p_contents)        // const char32_t *

	C.cgo_callfn_GDNativeInterface_string_new_with_utf32_chars(arg0, arg1, arg2)

}

func GDNativeInterface_string_new_with_wide_chars(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents *WcharT) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := (*C.wchar_t)(p_contents)         // const wchar_t *

	C.cgo_callfn_GDNativeInterface_string_new_with_wide_chars(arg0, arg1, arg2)

}

func GDNativeInterface_string_new_with_latin1_chars_and_len(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents string, p_size GDNativeInt) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := C.CString(p_contents)            // const char *
	arg3 := (C.GDNativeInt)(p_size)          // const GDNativeInt

	C.cgo_callfn_GDNativeInterface_string_new_with_latin1_chars_and_len(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDNativeInterface_string_new_with_utf8_chars_and_len(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents string, p_size GDNativeInt) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := C.CString(p_contents)            // const char *
	arg3 := (C.GDNativeInt)(p_size)          // const GDNativeInt

	C.cgo_callfn_GDNativeInterface_string_new_with_utf8_chars_and_len(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDNativeInterface_string_new_with_utf16_chars_and_len(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents *Char16T, p_size GDNativeInt) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := (*C.char16_t)(p_contents)        // const char16_t *
	arg3 := (C.GDNativeInt)(p_size)          // const GDNativeInt

	C.cgo_callfn_GDNativeInterface_string_new_with_utf16_chars_and_len(arg0, arg1, arg2, arg3)

}

func GDNativeInterface_string_new_with_utf32_chars_and_len(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents *Char32T, p_size GDNativeInt) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := (*C.char32_t)(p_contents)        // const char32_t *
	arg3 := (C.GDNativeInt)(p_size)          // const GDNativeInt

	C.cgo_callfn_GDNativeInterface_string_new_with_utf32_chars_and_len(arg0, arg1, arg2, arg3)

}

func GDNativeInterface_string_new_with_wide_chars_and_len(p_struct *GDNativeInterface, r_dest GDNativeStringPtr, p_contents *WcharT, p_size GDNativeInt) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(r_dest)    // GDNativeStringPtr
	arg2 := (*C.wchar_t)(p_contents)         // const wchar_t *
	arg3 := (C.GDNativeInt)(p_size)          // const GDNativeInt

	C.cgo_callfn_GDNativeInterface_string_new_with_wide_chars_and_len(arg0, arg1, arg2, arg3)

}

func GDNativeInterface_string_to_latin1_chars(p_struct *GDNativeInterface, p_self GDNativeStringPtr, r_text *Char, p_max_write_length GDNativeInt) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)       // const GDNativeStringPtr
	arg2 := (*C.char)(r_text)                   // char *
	arg3 := (C.GDNativeInt)(p_max_write_length) // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_to_latin1_chars(arg0, arg1, arg2, arg3)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_string_to_utf8_chars(p_struct *GDNativeInterface, p_self GDNativeStringPtr, r_text *Char, p_max_write_length GDNativeInt) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)       // const GDNativeStringPtr
	arg2 := (*C.char)(r_text)                   // char *
	arg3 := (C.GDNativeInt)(p_max_write_length) // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_to_utf8_chars(arg0, arg1, arg2, arg3)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_string_to_utf16_chars(p_struct *GDNativeInterface, p_self GDNativeStringPtr, r_text *Char16T, p_max_write_length GDNativeInt) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)       // const GDNativeStringPtr
	arg2 := (*C.char16_t)(r_text)               // char16_t *
	arg3 := (C.GDNativeInt)(p_max_write_length) // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_to_utf16_chars(arg0, arg1, arg2, arg3)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_string_to_utf32_chars(p_struct *GDNativeInterface, p_self GDNativeStringPtr, r_text *Char32T, p_max_write_length GDNativeInt) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)       // const GDNativeStringPtr
	arg2 := (*C.char32_t)(r_text)               // char32_t *
	arg3 := (C.GDNativeInt)(p_max_write_length) // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_to_utf32_chars(arg0, arg1, arg2, arg3)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_string_to_wide_chars(p_struct *GDNativeInterface, p_self GDNativeStringPtr, r_text *WcharT, p_max_write_length GDNativeInt) GDNativeInt {
	arg0 := (*C.GDNativeInterface)(p_struct)    // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)       // const GDNativeStringPtr
	arg2 := (*C.wchar_t)(r_text)                // wchar_t *
	arg3 := (C.GDNativeInt)(p_max_write_length) // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_to_wide_chars(arg0, arg1, arg2, arg3)

	// GDNativeInt
	return (GDNativeInt)(ret)
}

func GDNativeInterface_string_operator_index(p_struct *GDNativeInterface, p_self GDNativeStringPtr, p_index GDNativeInt) *Char32T {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)    // GDNativeStringPtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_operator_index(arg0, arg1, arg2)

	// char32_t *
	return (*Char32T)(ret)
}

func GDNativeInterface_string_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeStringPtr, p_index GDNativeInt) *Char32T {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeStringPtr)(p_self)    // const GDNativeStringPtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_string_operator_index_const(arg0, arg1, arg2)

	// const char32_t *
	return (*Char32T)(ret)
}

func GDNativeInterface_packed_byte_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *uint8 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_byte_array_operator_index(arg0, arg1, arg2)

	// uint8_t *
	return (*uint8)(ret)
}

func GDNativeInterface_packed_byte_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *uint8 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_byte_array_operator_index_const(arg0, arg1, arg2)

	// const uint8_t *
	return (*uint8)(ret)
}

func GDNativeInterface_packed_color_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeTypePtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_color_array_operator_index(arg0, arg1, arg2)

	// GDNativeTypePtr
	return (GDNativeTypePtr)(ret)
}

func GDNativeInterface_packed_color_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeTypePtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_color_array_operator_index_const(arg0, arg1, arg2)

	// GDNativeTypePtr
	return (GDNativeTypePtr)(ret)
}

func GDNativeInterface_packed_float32_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *float32 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_float32_array_operator_index(arg0, arg1, arg2)

	// float *
	return (*float32)(ret)
}

func GDNativeInterface_packed_float32_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *float32 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_float32_array_operator_index_const(arg0, arg1, arg2)

	// const float *
	return (*float32)(ret)
}

func GDNativeInterface_packed_float64_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *float64 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_float64_array_operator_index(arg0, arg1, arg2)

	// double *
	return (*float64)(ret)
}

func GDNativeInterface_packed_float64_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *float64 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_float64_array_operator_index_const(arg0, arg1, arg2)

	// const double *
	return (*float64)(ret)
}

func GDNativeInterface_packed_int32_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *int32 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_int32_array_operator_index(arg0, arg1, arg2)

	// int32_t *
	return (*int32)(ret)
}

func GDNativeInterface_packed_int32_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *int32 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_int32_array_operator_index_const(arg0, arg1, arg2)

	// const int32_t *
	return (*int32)(ret)
}

func GDNativeInterface_packed_int64_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *int64 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_int64_array_operator_index(arg0, arg1, arg2)

	// int64_t *
	return (*int64)(ret)
}

func GDNativeInterface_packed_int64_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) *int64 {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_int64_array_operator_index_const(arg0, arg1, arg2)

	// const int64_t *
	return (*int64)(ret)
}

func GDNativeInterface_packed_string_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeStringPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_string_array_operator_index(arg0, arg1, arg2)

	// GDNativeStringPtr
	return (GDNativeStringPtr)(ret)
}

func GDNativeInterface_packed_string_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeStringPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_string_array_operator_index_const(arg0, arg1, arg2)

	// GDNativeStringPtr
	return (GDNativeStringPtr)(ret)
}

func GDNativeInterface_packed_vector2_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeTypePtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_vector2_array_operator_index(arg0, arg1, arg2)

	// GDNativeTypePtr
	return (GDNativeTypePtr)(ret)
}

func GDNativeInterface_packed_vector2_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeTypePtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_vector2_array_operator_index_const(arg0, arg1, arg2)

	// GDNativeTypePtr
	return (GDNativeTypePtr)(ret)
}

func GDNativeInterface_packed_vector3_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeTypePtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_vector3_array_operator_index(arg0, arg1, arg2)

	// GDNativeTypePtr
	return (GDNativeTypePtr)(ret)
}

func GDNativeInterface_packed_vector3_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeTypePtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_packed_vector3_array_operator_index_const(arg0, arg1, arg2)

	// GDNativeTypePtr
	return (GDNativeTypePtr)(ret)
}

func GDNativeInterface_array_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeVariantPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_array_operator_index(arg0, arg1, arg2)

	// GDNativeVariantPtr
	return (GDNativeVariantPtr)(ret)
}

func GDNativeInterface_array_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_index GDNativeInt) GDNativeVariantPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeInt)(p_index)         // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_array_operator_index_const(arg0, arg1, arg2)

	// GDNativeVariantPtr
	return (GDNativeVariantPtr)(ret)
}

func GDNativeInterface_dictionary_operator_index(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_key GDNativeVariantPtr) GDNativeVariantPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // GDNativeTypePtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr

	ret := C.cgo_callfn_GDNativeInterface_dictionary_operator_index(arg0, arg1, arg2)

	// GDNativeVariantPtr
	return (GDNativeVariantPtr)(ret)
}

func GDNativeInterface_dictionary_operator_index_const(p_struct *GDNativeInterface, p_self GDNativeTypePtr, p_key GDNativeVariantPtr) GDNativeVariantPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeTypePtr)(p_self)      // const GDNativeTypePtr
	arg2 := (C.GDNativeVariantPtr)(p_key)    // const GDNativeVariantPtr

	ret := C.cgo_callfn_GDNativeInterface_dictionary_operator_index_const(arg0, arg1, arg2)

	// GDNativeVariantPtr
	return (GDNativeVariantPtr)(ret)
}

func GDNativeInterface_object_method_bind_call(p_struct *GDNativeInterface, p_method_bind GDNativeMethodBindPtr, p_instance GDNativeObjectPtr, p_args *GDNativeVariantPtr, p_arg_count GDNativeInt, r_ret GDNativeVariantPtr, r_error *GDNativeCallError) {
	arg0 := (*C.GDNativeInterface)(p_struct)         // GDNativeInterface
	arg1 := (C.GDNativeMethodBindPtr)(p_method_bind) // const GDNativeMethodBindPtr
	arg2 := (C.GDNativeObjectPtr)(p_instance)        // GDNativeObjectPtr
	arg3 := (*C.GDNativeVariantPtr)(p_args)          // const GDNativeVariantPtr *
	arg4 := (C.GDNativeInt)(p_arg_count)             // GDNativeInt
	arg5 := (C.GDNativeVariantPtr)(r_ret)            // GDNativeVariantPtr
	arg6 := (*C.GDNativeCallError)(r_error)          // GDNativeCallError *

	C.cgo_callfn_GDNativeInterface_object_method_bind_call(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDNativeInterface_object_method_bind_ptrcall(p_struct *GDNativeInterface, p_method_bind GDNativeMethodBindPtr, p_instance GDNativeObjectPtr, p_args *GDNativeTypePtr, r_ret GDNativeTypePtr) {
	arg0 := (*C.GDNativeInterface)(p_struct)         // GDNativeInterface
	arg1 := (C.GDNativeMethodBindPtr)(p_method_bind) // const GDNativeMethodBindPtr
	arg2 := (C.GDNativeObjectPtr)(p_instance)        // GDNativeObjectPtr
	arg3 := (*C.GDNativeTypePtr)(p_args)             // const GDNativeTypePtr *
	arg4 := (C.GDNativeTypePtr)(r_ret)               // GDNativeTypePtr

	C.cgo_callfn_GDNativeInterface_object_method_bind_ptrcall(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_object_destroy(p_struct *GDNativeInterface, p_o GDNativeObjectPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeObjectPtr)(p_o)       // GDNativeObjectPtr

	C.cgo_callfn_GDNativeInterface_object_destroy(arg0, arg1)

}

func GDNativeInterface_global_get_singleton(p_struct *GDNativeInterface, p_name string) GDNativeObjectPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_name)                // const char *

	ret := C.cgo_callfn_GDNativeInterface_global_get_singleton(arg0, arg1)

	C.free(unsafe.Pointer(arg1))

	// GDNativeObjectPtr
	return (GDNativeObjectPtr)(ret)
}

func GDNativeInterface_object_get_instance_binding(p_struct *GDNativeInterface, p_o GDNativeObjectPtr, p_token unsafe.Pointer, p_callbacks *GDNativeInstanceBindingCallbacks) unsafe.Pointer {
	arg0 := (*C.GDNativeInterface)(p_struct)                   // GDNativeInterface
	arg1 := (C.GDNativeObjectPtr)(p_o)                         // GDNativeObjectPtr
	arg2 := unsafe.Pointer(p_token)                            // void *
	arg3 := (*C.GDNativeInstanceBindingCallbacks)(p_callbacks) // const GDNativeInstanceBindingCallbacks *

	ret := C.cgo_callfn_GDNativeInterface_object_get_instance_binding(arg0, arg1, arg2, arg3)

	// void *
	return unsafe.Pointer(ret)
}

func GDNativeInterface_object_set_instance_binding(p_struct *GDNativeInterface, p_o GDNativeObjectPtr, p_token unsafe.Pointer, p_binding unsafe.Pointer, p_callbacks *GDNativeInstanceBindingCallbacks) {
	arg0 := (*C.GDNativeInterface)(p_struct)                   // GDNativeInterface
	arg1 := (C.GDNativeObjectPtr)(p_o)                         // GDNativeObjectPtr
	arg2 := unsafe.Pointer(p_token)                            // void *
	arg3 := unsafe.Pointer(p_binding)                          // void *
	arg4 := (*C.GDNativeInstanceBindingCallbacks)(p_callbacks) // const GDNativeInstanceBindingCallbacks *

	C.cgo_callfn_GDNativeInterface_object_set_instance_binding(arg0, arg1, arg2, arg3, arg4)

}

func GDNativeInterface_object_set_instance(p_struct *GDNativeInterface, p_o GDNativeObjectPtr, p_classname string, p_instance GDExtensionClassInstancePtr) {
	arg0 := (*C.GDNativeInterface)(p_struct)            // GDNativeInterface
	arg1 := (C.GDNativeObjectPtr)(p_o)                  // GDNativeObjectPtr
	arg2 := C.CString(p_classname)                      // const char *
	arg3 := (C.GDExtensionClassInstancePtr)(p_instance) // GDExtensionClassInstancePtr

	C.cgo_callfn_GDNativeInterface_object_set_instance(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDNativeInterface_object_cast_to(p_struct *GDNativeInterface, p_object GDNativeObjectPtr, p_class_tag unsafe.Pointer) GDNativeObjectPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeObjectPtr)(p_object)  // const GDNativeObjectPtr
	arg2 := unsafe.Pointer(p_class_tag)      // void *

	ret := C.cgo_callfn_GDNativeInterface_object_cast_to(arg0, arg1, arg2)

	// GDNativeObjectPtr
	return (GDNativeObjectPtr)(ret)
}

func GDNativeInterface_object_get_instance_from_id(p_struct *GDNativeInterface, p_instance_id GDObjectInstanceID) GDNativeObjectPtr {
	arg0 := (*C.GDNativeInterface)(p_struct)      // GDNativeInterface
	arg1 := (C.GDObjectInstanceID)(p_instance_id) // GDObjectInstanceID

	ret := C.cgo_callfn_GDNativeInterface_object_get_instance_from_id(arg0, arg1)

	// GDNativeObjectPtr
	return (GDNativeObjectPtr)(ret)
}

func GDNativeInterface_object_get_instance_id(p_struct *GDNativeInterface, p_object GDNativeObjectPtr) GDObjectInstanceID {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := (C.GDNativeObjectPtr)(p_object)  // const GDNativeObjectPtr

	ret := C.cgo_callfn_GDNativeInterface_object_get_instance_id(arg0, arg1)

	// GDObjectInstanceID
	return (GDObjectInstanceID)(ret)
}

func GDNativeInterface_script_instance_create(p_struct *GDNativeInterface, p_info *GDNativeExtensionScriptInstanceInfo, p_instance_data GDNativeExtensionScriptInstanceDataPtr) GDNativeScriptInstancePtr {
	arg0 := (*C.GDNativeInterface)(p_struct)                            // GDNativeInterface
	arg1 := (*C.GDNativeExtensionScriptInstanceInfo)(p_info)            // const GDNativeExtensionScriptInstanceInfo *
	arg2 := (C.GDNativeExtensionScriptInstanceDataPtr)(p_instance_data) // GDNativeExtensionScriptInstanceDataPtr

	ret := C.cgo_callfn_GDNativeInterface_script_instance_create(arg0, arg1, arg2)

	// GDNativeScriptInstancePtr
	return (GDNativeScriptInstancePtr)(ret)
}

func GDNativeInterface_classdb_construct_object(p_struct *GDNativeInterface, p_classname string) GDNativeObjectPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_classname)           // const char *

	ret := C.cgo_callfn_GDNativeInterface_classdb_construct_object(arg0, arg1)

	C.free(unsafe.Pointer(arg1))

	// GDNativeObjectPtr
	return (GDNativeObjectPtr)(ret)
}

func GDNativeInterface_classdb_get_method_bind(p_struct *GDNativeInterface, p_classname string, p_methodname string, p_hash GDNativeInt) GDNativeMethodBindPtr {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_classname)           // const char *
	arg2 := C.CString(p_methodname)          // const char *
	arg3 := (C.GDNativeInt)(p_hash)          // GDNativeInt

	ret := C.cgo_callfn_GDNativeInterface_classdb_get_method_bind(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))

	// GDNativeMethodBindPtr
	return (GDNativeMethodBindPtr)(ret)
}

func GDNativeInterface_classdb_get_class_tag(p_struct *GDNativeInterface, p_classname string) unsafe.Pointer {
	arg0 := (*C.GDNativeInterface)(p_struct) // GDNativeInterface
	arg1 := C.CString(p_classname)           // const char *

	ret := C.cgo_callfn_GDNativeInterface_classdb_get_class_tag(arg0, arg1)

	C.free(unsafe.Pointer(arg1))

	// void *
	return unsafe.Pointer(ret)
}

func GDNativeInterface_classdb_register_extension_class(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_parent_class_name string, p_extension_funcs *GDNativeExtensionClassCreationInfo) {
	arg0 := (*C.GDNativeInterface)(p_struct)                           // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library)            // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                                    // const char *
	arg3 := C.CString(p_parent_class_name)                             // const char *
	arg4 := (*C.GDNativeExtensionClassCreationInfo)(p_extension_funcs) // const GDNativeExtensionClassCreationInfo *

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDNativeInterface_classdb_register_extension_class_method(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_method_info *GDNativeExtensionClassMethodInfo) {
	arg0 := (*C.GDNativeInterface)(p_struct)                     // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library)      // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                              // const char *
	arg3 := (*C.GDNativeExtensionClassMethodInfo)(p_method_info) // const GDNativeExtensionClassMethodInfo *

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class_method(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDNativeInterface_classdb_register_extension_class_integer_constant(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_enum_name string, p_constant_name string, p_constant_value GDNativeInt, p_is_bitfield GDNativeBool) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                         // const char *
	arg3 := C.CString(p_enum_name)                          // const char *
	arg4 := C.CString(p_constant_name)                      // const char *
	arg5 := (C.GDNativeInt)(p_constant_value)               // GDNativeInt
	arg6 := (C.GDNativeBool)(p_is_bitfield)                 // GDNativeBool

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class_integer_constant(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))
	C.free(unsafe.Pointer(arg4))

}

func GDNativeInterface_classdb_register_extension_class_property(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_info *GDNativePropertyInfo, p_setter string, p_getter string) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                         // const char *
	arg3 := (*C.GDNativePropertyInfo)(p_info)               // const GDNativePropertyInfo *
	arg4 := C.CString(p_setter)                             // const char *
	arg5 := C.CString(p_getter)                             // const char *

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class_property(arg0, arg1, arg2, arg3, arg4, arg5)

	C.free(unsafe.Pointer(arg2))

	C.free(unsafe.Pointer(arg4))
	C.free(unsafe.Pointer(arg5))
}

func GDNativeInterface_classdb_register_extension_class_property_group(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_group_name string, p_prefix string) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                         // const char *
	arg3 := C.CString(p_group_name)                         // const char *
	arg4 := C.CString(p_prefix)                             // const char *

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class_property_group(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))
	C.free(unsafe.Pointer(arg4))
}

func GDNativeInterface_classdb_register_extension_class_property_subgroup(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_subgroup_name string, p_prefix string) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                         // const char *
	arg3 := C.CString(p_subgroup_name)                      // const char *
	arg4 := C.CString(p_prefix)                             // const char *

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class_property_subgroup(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))
	C.free(unsafe.Pointer(arg4))
}

func GDNativeInterface_classdb_register_extension_class_signal(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string, p_signal_name string, p_argument_info *GDNativePropertyInfo, p_argument_count GDNativeInt) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                         // const char *
	arg3 := C.CString(p_signal_name)                        // const char *
	arg4 := (*C.GDNativePropertyInfo)(p_argument_info)      // const GDNativePropertyInfo *
	arg5 := (C.GDNativeInt)(p_argument_count)               // GDNativeInt

	C.cgo_callfn_GDNativeInterface_classdb_register_extension_class_signal(arg0, arg1, arg2, arg3, arg4, arg5)

	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDNativeInterface_classdb_unregister_extension_class(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, p_class_name string) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := C.CString(p_class_name)                         // const char *

	C.cgo_callfn_GDNativeInterface_classdb_unregister_extension_class(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))
}

func GDNativeInterface_get_library_path(p_struct *GDNativeInterface, p_library GDNativeExtensionClassLibraryPtr, r_path GDNativeStringPtr) {
	arg0 := (*C.GDNativeInterface)(p_struct)                // GDNativeInterface
	arg1 := (C.GDNativeExtensionClassLibraryPtr)(p_library) // const GDNativeExtensionClassLibraryPtr
	arg2 := (C.GDNativeStringPtr)(r_path)                   // GDNativeStringPtr

	C.cgo_callfn_GDNativeInterface_get_library_path(arg0, arg1, arg2)

}

/* struct (8) GDNativeInitialization */

func GDNativeInitialization_initialize(p_struct *GDNativeInitialization, userdata unsafe.Pointer, p_level GDNativeInitializationLevel) {
	arg0 := (*C.GDNativeInitialization)(p_struct)    // GDNativeInitialization
	arg1 := unsafe.Pointer(userdata)                 // void *
	arg2 := (C.GDNativeInitializationLevel)(p_level) // GDNativeInitializationLevel

	C.cgo_callfn_GDNativeInitialization_initialize(arg0, arg1, arg2)

}

func GDNativeInitialization_deinitialize(p_struct *GDNativeInitialization, userdata unsafe.Pointer, p_level GDNativeInitializationLevel) {
	arg0 := (*C.GDNativeInitialization)(p_struct)    // GDNativeInitialization
	arg1 := unsafe.Pointer(userdata)                 // void *
	arg2 := (C.GDNativeInitializationLevel)(p_level) // GDNativeInitializationLevel

	C.cgo_callfn_GDNativeInitialization_deinitialize(arg0, arg1, arg2)

}
