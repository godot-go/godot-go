package gdextension

/*------------------------------------------------------------------------------
//   This code was generated by template utilityfunctions.go.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "globalenums.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//revive:disable

// #include <godot/gdnative_interface.h>
// #include <stdio.h>
// #include <stdlib.h>
import "C"
import (
	"unsafe"
	. "github.com/godot-go/godot-go/pkg/gdnative"
)

// utility functions

// Sin is under the category "math".
func Sin(angle_rad float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "sin", 2140049587)

	if fn == nil {
		panic("could not find utility function sin (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&angle_rad)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Cos is under the category "math".
func Cos(angle_rad float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "cos", 2140049587)

	if fn == nil {
		panic("could not find utility function cos (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&angle_rad)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Tan is under the category "math".
func Tan(angle_rad float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "tan", 2140049587)

	if fn == nil {
		panic("could not find utility function tan (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&angle_rad)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Sinh is under the category "math".
func Sinh(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "sinh", 2140049587)

	if fn == nil {
		panic("could not find utility function sinh (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Cosh is under the category "math".
func Cosh(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "cosh", 2140049587)

	if fn == nil {
		panic("could not find utility function cosh (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Tanh is under the category "math".
func Tanh(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "tanh", 2140049587)

	if fn == nil {
		panic("could not find utility function tanh (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Asin is under the category "math".
func Asin(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "asin", 2140049587)

	if fn == nil {
		panic("could not find utility function asin (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Acos is under the category "math".
func Acos(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "acos", 2140049587)

	if fn == nil {
		panic("could not find utility function acos (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Atan is under the category "math".
func Atan(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "atan", 2140049587)

	if fn == nil {
		panic("could not find utility function atan (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Atan2 is under the category "math".
func Atan2(y float32,x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "atan2", 92296394)

	if fn == nil {
		panic("could not find utility function atan2 (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&y)
	argsPtr[1] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Sqrt is under the category "math".
func Sqrt(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "sqrt", 2140049587)

	if fn == nil {
		panic("could not find utility function sqrt (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Fmod is under the category "math".
func Fmod(x float32,y float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "fmod", 92296394)

	if fn == nil {
		panic("could not find utility function fmod (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	argsPtr[1] = unsafe.Pointer(&y)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Fposmod is under the category "math".
func Fposmod(x float32,y float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "fposmod", 92296394)

	if fn == nil {
		panic("could not find utility function fposmod (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	argsPtr[1] = unsafe.Pointer(&y)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Posmod is under the category "math".
func Posmod(x int32,y int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "posmod", 3133453818)

	if fn == nil {
		panic("could not find utility function posmod (3133453818)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	argsPtr[1] = unsafe.Pointer(&y)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Floor is under the category "math".
func Floor(x Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "floor", 4776452)

	if fn == nil {
		panic("could not find utility function floor (4776452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Floorf is under the category "math".
func Floorf(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "floorf", 2140049587)

	if fn == nil {
		panic("could not find utility function floorf (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Floori is under the category "math".
func Floori(x float32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "floori", 2780425386)

	if fn == nil {
		panic("could not find utility function floori (2780425386)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Ceil is under the category "math".
func Ceil(x Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "ceil", 4776452)

	if fn == nil {
		panic("could not find utility function ceil (4776452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Ceilf is under the category "math".
func Ceilf(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "ceilf", 2140049587)

	if fn == nil {
		panic("could not find utility function ceilf (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Ceili is under the category "math".
func Ceili(x float32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "ceili", 2780425386)

	if fn == nil {
		panic("could not find utility function ceili (2780425386)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Round is under the category "math".
func Round(x Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "round", 4776452)

	if fn == nil {
		panic("could not find utility function round (4776452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Roundf is under the category "math".
func Roundf(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "roundf", 2140049587)

	if fn == nil {
		panic("could not find utility function roundf (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Roundi is under the category "math".
func Roundi(x float32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "roundi", 2780425386)

	if fn == nil {
		panic("could not find utility function roundi (2780425386)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Abs is under the category "math".
func Abs(x Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "abs", 4776452)

	if fn == nil {
		panic("could not find utility function abs (4776452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Absf is under the category "math".
func Absf(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "absf", 2140049587)

	if fn == nil {
		panic("could not find utility function absf (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Absi is under the category "math".
func Absi(x int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "absi", 2157319888)

	if fn == nil {
		panic("could not find utility function absi (2157319888)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Sign is under the category "math".
func Sign(x Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "sign", 4776452)

	if fn == nil {
		panic("could not find utility function sign (4776452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Signf is under the category "math".
func Signf(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "signf", 2140049587)

	if fn == nil {
		panic("could not find utility function signf (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Signi is under the category "math".
func Signi(x int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "signi", 2157319888)

	if fn == nil {
		panic("could not find utility function signi (2157319888)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Pow is under the category "math".
func Pow(base float32,exp float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "pow", 92296394)

	if fn == nil {
		panic("could not find utility function pow (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&base)
	argsPtr[1] = unsafe.Pointer(&exp)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Log is under the category "math".
func Log(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "log", 2140049587)

	if fn == nil {
		panic("could not find utility function log (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Exp is under the category "math".
func Exp(x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "exp", 2140049587)

	if fn == nil {
		panic("could not find utility function exp (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsNan is under the category "math".
func IsNan(x float32,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_nan", 3569215213)

	if fn == nil {
		panic("could not find utility function is_nan (3569215213)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsInf is under the category "math".
func IsInf(x float32,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_inf", 3569215213)

	if fn == nil {
		panic("could not find utility function is_inf (3569215213)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsEqualApprox is under the category "math".
func IsEqualApprox(a float32,b float32,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_equal_approx", 1400789633)

	if fn == nil {
		panic("could not find utility function is_equal_approx (1400789633)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&a)
	argsPtr[1] = unsafe.Pointer(&b)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsZeroApprox is under the category "math".
func IsZeroApprox(x float32,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_zero_approx", 3569215213)

	if fn == nil {
		panic("could not find utility function is_zero_approx (3569215213)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsFinite is under the category "math".
func IsFinite(x float32,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_finite", 3569215213)

	if fn == nil {
		panic("could not find utility function is_finite (3569215213)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Ease is under the category "math".
func Ease(x float32,curve float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "ease", 92296394)

	if fn == nil {
		panic("could not find utility function ease (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	argsPtr[1] = unsafe.Pointer(&curve)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// StepDecimals is under the category "math".
func StepDecimals(x float32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "step_decimals", 2780425386)

	if fn == nil {
		panic("could not find utility function step_decimals (2780425386)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Snapped is under the category "math".
func Snapped(x float32,step float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "snapped", 92296394)

	if fn == nil {
		panic("could not find utility function snapped (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&x)
	argsPtr[1] = unsafe.Pointer(&step)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Lerp is under the category "math".
func Lerp(from Variant,to Variant,weight Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "lerp", 3389874542)

	if fn == nil {
		panic("could not find utility function lerp (3389874542)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&weight)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Lerpf is under the category "math".
func Lerpf(from float32,to float32,weight float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "lerpf", 998901048)

	if fn == nil {
		panic("could not find utility function lerpf (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&weight)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// CubicInterpolate is under the category "math".
func CubicInterpolate(from float32,to float32,pre float32,post float32,weight float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "cubic_interpolate", 1090965791)

	if fn == nil {
		panic("could not find utility function cubic_interpolate (1090965791)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(5)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[5]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&pre)
	argsPtr[3] = unsafe.Pointer(&post)
	argsPtr[4] = unsafe.Pointer(&weight)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(5)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// CubicInterpolateAngle is under the category "math".
func CubicInterpolateAngle(from float32,to float32,pre float32,post float32,weight float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "cubic_interpolate_angle", 1090965791)

	if fn == nil {
		panic("could not find utility function cubic_interpolate_angle (1090965791)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(5)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[5]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&pre)
	argsPtr[3] = unsafe.Pointer(&post)
	argsPtr[4] = unsafe.Pointer(&weight)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(5)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// CubicInterpolateInTime is under the category "math".
func CubicInterpolateInTime(from float32,to float32,pre float32,post float32,weight float32,to_t float32,pre_t float32,post_t float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "cubic_interpolate_in_time", 388121036)

	if fn == nil {
		panic("could not find utility function cubic_interpolate_in_time (388121036)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(8)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[8]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&pre)
	argsPtr[3] = unsafe.Pointer(&post)
	argsPtr[4] = unsafe.Pointer(&weight)
	argsPtr[5] = unsafe.Pointer(&to_t)
	argsPtr[6] = unsafe.Pointer(&pre_t)
	argsPtr[7] = unsafe.Pointer(&post_t)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(8)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// CubicInterpolateAngleInTime is under the category "math".
func CubicInterpolateAngleInTime(from float32,to float32,pre float32,post float32,weight float32,to_t float32,pre_t float32,post_t float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "cubic_interpolate_angle_in_time", 388121036)

	if fn == nil {
		panic("could not find utility function cubic_interpolate_angle_in_time (388121036)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(8)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[8]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&pre)
	argsPtr[3] = unsafe.Pointer(&post)
	argsPtr[4] = unsafe.Pointer(&weight)
	argsPtr[5] = unsafe.Pointer(&to_t)
	argsPtr[6] = unsafe.Pointer(&pre_t)
	argsPtr[7] = unsafe.Pointer(&post_t)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(8)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// BezierInterpolate is under the category "math".
func BezierInterpolate(start float32,control_1 float32,control_2 float32,end float32,t float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "bezier_interpolate", 1090965791)

	if fn == nil {
		panic("could not find utility function bezier_interpolate (1090965791)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(5)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[5]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&start)
	argsPtr[1] = unsafe.Pointer(&control_1)
	argsPtr[2] = unsafe.Pointer(&control_2)
	argsPtr[3] = unsafe.Pointer(&end)
	argsPtr[4] = unsafe.Pointer(&t)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(5)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// LerpAngle is under the category "math".
func LerpAngle(from float32,to float32,weight float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "lerp_angle", 998901048)

	if fn == nil {
		panic("could not find utility function lerp_angle (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&weight)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// InverseLerp is under the category "math".
func InverseLerp(from float32,to float32,weight float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "inverse_lerp", 998901048)

	if fn == nil {
		panic("could not find utility function inverse_lerp (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&weight)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Remap is under the category "math".
func Remap(value float32,istart float32,istop float32,ostart float32,ostop float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "remap", 1090965791)

	if fn == nil {
		panic("could not find utility function remap (1090965791)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(5)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[5]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&istart)
	argsPtr[2] = unsafe.Pointer(&istop)
	argsPtr[3] = unsafe.Pointer(&ostart)
	argsPtr[4] = unsafe.Pointer(&ostop)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(5)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Smoothstep is under the category "math".
func Smoothstep(from float32,to float32,x float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "smoothstep", 998901048)

	if fn == nil {
		panic("could not find utility function smoothstep (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&x)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// MoveToward is under the category "math".
func MoveToward(from float32,to float32,delta float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "move_toward", 998901048)

	if fn == nil {
		panic("could not find utility function move_toward (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	argsPtr[2] = unsafe.Pointer(&delta)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// DegToRad is under the category "math".
func DegToRad(deg float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "deg_to_rad", 2140049587)

	if fn == nil {
		panic("could not find utility function deg_to_rad (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&deg)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// RadToDeg is under the category "math".
func RadToDeg(rad float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "rad_to_deg", 2140049587)

	if fn == nil {
		panic("could not find utility function rad_to_deg (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&rad)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// LinearToDb is under the category "math".
func LinearToDb(lin float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "linear_to_db", 2140049587)

	if fn == nil {
		panic("could not find utility function linear_to_db (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&lin)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// DbToLinear is under the category "math".
func DbToLinear(db float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "db_to_linear", 2140049587)

	if fn == nil {
		panic("could not find utility function db_to_linear (2140049587)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&db)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Wrap is under the category "math".
func Wrap(value Variant,min Variant,max Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "wrap", 3389874542)

	if fn == nil {
		panic("could not find utility function wrap (3389874542)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&min)
	argsPtr[2] = unsafe.Pointer(&max)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Wrapi is under the category "math".
func Wrapi(value int32,min int32,max int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "wrapi", 650295447)

	if fn == nil {
		panic("could not find utility function wrapi (650295447)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&min)
	argsPtr[2] = unsafe.Pointer(&max)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Wrapf is under the category "math".
func Wrapf(value float32,min float32,max float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "wrapf", 998901048)

	if fn == nil {
		panic("could not find utility function wrapf (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&min)
	argsPtr[2] = unsafe.Pointer(&max)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Max is under the category "math".
func Max(arg1 Variant,arg2 Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "max", 3896050336)

	if fn == nil {
		panic("could not find utility function max (3896050336)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	argsPtr[1] = unsafe.Pointer(&arg2)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Maxi is under the category "math".
func Maxi(a int32,b int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "maxi", 3133453818)

	if fn == nil {
		panic("could not find utility function maxi (3133453818)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&a)
	argsPtr[1] = unsafe.Pointer(&b)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Maxf is under the category "math".
func Maxf(a float32,b float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "maxf", 92296394)

	if fn == nil {
		panic("could not find utility function maxf (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&a)
	argsPtr[1] = unsafe.Pointer(&b)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Min is under the category "math".
func Min(arg1 Variant,arg2 Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "min", 3896050336)

	if fn == nil {
		panic("could not find utility function min (3896050336)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	argsPtr[1] = unsafe.Pointer(&arg2)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Mini is under the category "math".
func Mini(a int32,b int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "mini", 3133453818)

	if fn == nil {
		panic("could not find utility function mini (3133453818)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&a)
	argsPtr[1] = unsafe.Pointer(&b)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Minf is under the category "math".
func Minf(a float32,b float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "minf", 92296394)

	if fn == nil {
		panic("could not find utility function minf (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&a)
	argsPtr[1] = unsafe.Pointer(&b)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Clamp is under the category "math".
func Clamp(value Variant,min Variant,max Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "clamp", 3389874542)

	if fn == nil {
		panic("could not find utility function clamp (3389874542)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&min)
	argsPtr[2] = unsafe.Pointer(&max)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Clampi is under the category "math".
func Clampi(value int32,min int32,max int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "clampi", 650295447)

	if fn == nil {
		panic("could not find utility function clampi (650295447)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&min)
	argsPtr[2] = unsafe.Pointer(&max)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Clampf is under the category "math".
func Clampf(value float32,min float32,max float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "clampf", 998901048)

	if fn == nil {
		panic("could not find utility function clampf (998901048)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(3)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[3]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&min)
	argsPtr[2] = unsafe.Pointer(&max)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(3)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// NearestPo2 is under the category "math".
func NearestPo2(value int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "nearest_po2", 2157319888)

	if fn == nil {
		panic("could not find utility function nearest_po2 (2157319888)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Pingpong is under the category "math".
func Pingpong(value float32,length float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "pingpong", 92296394)

	if fn == nil {
		panic("could not find utility function pingpong (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&value)
	argsPtr[1] = unsafe.Pointer(&length)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Randomize is under the category "random".
func Randomize()  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "randomize", 1691721052)

	if fn == nil {
		panic("could not find utility function randomize (1691721052)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(0)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(0)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// Randi is under the category "random".
func Randi() int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "randi", 701202648)

	if fn == nil {
		panic("could not find utility function randi (701202648)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(0)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(0)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Randf is under the category "random".
func Randf() float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "randf", 2086227845)

	if fn == nil {
		panic("could not find utility function randf (2086227845)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(0)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(0)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// RandiRange is under the category "random".
func RandiRange(from int32,to int32,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "randi_range", 3133453818)

	if fn == nil {
		panic("could not find utility function randi_range (3133453818)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// RandfRange is under the category "random".
func RandfRange(from float32,to float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "randf_range", 92296394)

	if fn == nil {
		panic("could not find utility function randf_range (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&from)
	argsPtr[1] = unsafe.Pointer(&to)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Randfn is under the category "random".
func Randfn(mean float32,deviation float32,) float32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "randfn", 92296394)

	if fn == nil {
		panic("could not find utility function randfn (92296394)")
	}

	var ret float32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(2)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[2]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&mean)
	argsPtr[1] = unsafe.Pointer(&deviation)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(2)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Seed is under the category "random".
func Seed(base int32,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "seed", 382931173)

	if fn == nil {
		panic("could not find utility function seed (382931173)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&base)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// RandFromSeed is under the category "random".
func RandFromSeed(seed int32,) PackedInt64Array {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "rand_from_seed", 1391063685)

	if fn == nil {
		panic("could not find utility function rand_from_seed (1391063685)")
	}

	var ret PackedInt64Array
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&seed)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Weakref is under the category "general".
func Weakref(obj Variant,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "weakref", 4776452)

	if fn == nil {
		panic("could not find utility function weakref (4776452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&obj)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Typeof is under the category "general".
func Typeof(variable Variant,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "typeof", 326422594)

	if fn == nil {
		panic("could not find utility function typeof (326422594)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&variable)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Str is under the category "general".
func Str(arg1 Variant,) String {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "str", 32569176)

	if fn == nil {
		panic("could not find utility function str (32569176)")
	}

	var ret String
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// ErrorString is under the category "general".
func ErrorString(error int32,) String {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "error_string", 942708242)

	if fn == nil {
		panic("could not find utility function error_string (942708242)")
	}

	var ret String
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&error)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Print is under the category "general".
func Print(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "print", 2648703342)

	if fn == nil {
		panic("could not find utility function print (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// PrintRich is under the category "general".
func PrintRich(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "print_rich", 2648703342)

	if fn == nil {
		panic("could not find utility function print_rich (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// Printerr is under the category "general".
func Printerr(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "printerr", 2648703342)

	if fn == nil {
		panic("could not find utility function printerr (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// Printt is under the category "general".
func Printt(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "printt", 2648703342)

	if fn == nil {
		panic("could not find utility function printt (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// Prints is under the category "general".
func Prints(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "prints", 2648703342)

	if fn == nil {
		panic("could not find utility function prints (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// Printraw is under the category "general".
func Printraw(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "printraw", 2648703342)

	if fn == nil {
		panic("could not find utility function printraw (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// PrintVerbose is under the category "general".
func PrintVerbose(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "print_verbose", 2648703342)

	if fn == nil {
		panic("could not find utility function print_verbose (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// PushError is under the category "general".
func PushError(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "push_error", 2648703342)

	if fn == nil {
		panic("could not find utility function push_error (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// PushWarning is under the category "general".
func PushWarning(arg1 Variant,)  {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "push_warning", 2648703342)

	if fn == nil {
		panic("could not find utility function push_warning (2648703342)")
	}

	retPtr := (GDNativeTypePtr)(nullptr)

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&arg1)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	
}

// VarToStr is under the category "general".
func VarToStr(variable Variant,) String {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "var_to_str", 866625479)

	if fn == nil {
		panic("could not find utility function var_to_str (866625479)")
	}

	var ret String
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&variable)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// StrToVar is under the category "general".
func StrToVar(string String,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "str_to_var", 1891498491)

	if fn == nil {
		panic("could not find utility function str_to_var (1891498491)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&string)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// VarToBytes is under the category "general".
func VarToBytes(variable Variant,) PackedByteArray {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "var_to_bytes", 2947269930)

	if fn == nil {
		panic("could not find utility function var_to_bytes (2947269930)")
	}

	var ret PackedByteArray
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&variable)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// BytesToVar is under the category "general".
func BytesToVar(bytes PackedByteArray,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "bytes_to_var", 4249819452)

	if fn == nil {
		panic("could not find utility function bytes_to_var (4249819452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&bytes)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// VarToBytesWithObjects is under the category "general".
func VarToBytesWithObjects(variable Variant,) PackedByteArray {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "var_to_bytes_with_objects", 2947269930)

	if fn == nil {
		panic("could not find utility function var_to_bytes_with_objects (2947269930)")
	}

	var ret PackedByteArray
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&variable)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// BytesToVarWithObjects is under the category "general".
func BytesToVarWithObjects(bytes PackedByteArray,) Variant {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "bytes_to_var_with_objects", 4249819452)

	if fn == nil {
		panic("could not find utility function bytes_to_var_with_objects (4249819452)")
	}

	var ret Variant
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&bytes)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// Hash is under the category "general".
func Hash(variable Variant,) int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "hash", 326422594)

	if fn == nil {
		panic("could not find utility function hash (326422594)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&variable)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// InstanceFromId is under the category "general".
func InstanceFromId(instance_id int32,) Object {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "instance_from_id", 1156694636)

	if fn == nil {
		panic("could not find utility function instance_from_id (1156694636)")
	}

	var ret Object
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&instance_id)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsInstanceIdValid is under the category "general".
func IsInstanceIdValid(id int32,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_instance_id_valid", 2232439758)

	if fn == nil {
		panic("could not find utility function is_instance_id_valid (2232439758)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&id)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// IsInstanceValid is under the category "general".
func IsInstanceValid(instance Variant,) bool {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "is_instance_valid", 996128841)

	if fn == nil {
		panic("could not find utility function is_instance_valid (996128841)")
	}

	var ret bool
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&instance)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// RidAllocateId is under the category "general".
func RidAllocateId() int32 {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "rid_allocate_id", 701202648)

	if fn == nil {
		panic("could not find utility function rid_allocate_id (701202648)")
	}

	var ret int32
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(0)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(0)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

// RidFromInt64 is under the category "general".
func RidFromInt64(base int32,) RID {
	
	fn := GDNativeInterface_variant_get_ptr_utility_function(internal.gdnInterface, "rid_from_int64", 3426892196)

	if fn == nil {
		panic("could not find utility function rid_from_int64 (3426892196)")
	}

	var ret RID
	retPtr := (GDNativeTypePtr)(unsafe.Pointer(&ret))

	sz := unsafe.Sizeof(nullptr) * uintptr(1)

	argBytes := unsafe.Pointer(C.malloc(C.size_t(sz)))

	
	argsPtr := (*[1]unsafe.Pointer)(argBytes)

	argsPtr[0] = unsafe.Pointer(&base)
	
	

	args := (*GDNativeTypePtr)(argBytes)

	argCount := (int32)(1)

	CallFunc_GDNativePtrUtilityFunction(fn, retPtr, args, argCount)

	C.free(argBytes)
	return ret
}

