/*
------------------------------------------------------------------------------
//   This code was generated by template gdnative_wrapper.go.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "gdnative.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------
*/
package gdnative

//revive:disable

// #include <godot/gdextension_interface.h>
// #include "gdnative_wrapper.gen.h"
// #include <stdint.h>
// #include <stdio.h>
// #include <stdlib.h>
import "C"
import (
	"unsafe"

	"github.com/godot-go/godot-go/pkg/log"
)

// aliases
type Uint64T C.uint64_t
type Uint32T C.uint32_t
type Uint16T C.uint16_t
type Uint8T C.uint8_t
type Int32T C.int32_t
type Int16T C.int16_t
type Int8T C.int8_t
type Char C.char
type WcharT C.wchar_t
type Char32T C.char32_t
type Char16T C.char16_t
type GDExtensionVariantPtr C.GDExtensionVariantPtr
type GDExtensionConstVariantPtr C.GDExtensionConstVariantPtr
type GDExtensionStringNamePtr C.GDExtensionStringNamePtr
type GDExtensionConstStringNamePtr C.GDExtensionConstStringNamePtr
type GDExtensionStringPtr C.GDExtensionStringPtr
type GDExtensionConstStringPtr C.GDExtensionConstStringPtr
type GDExtensionObjectPtr C.GDExtensionObjectPtr
type GDExtensionConstObjectPtr C.GDExtensionConstObjectPtr
type GDExtensionTypePtr C.GDExtensionTypePtr
type GDExtensionConstTypePtr C.GDExtensionConstTypePtr
type GDExtensionMethodBindPtr C.GDExtensionMethodBindPtr
type GDExtensionInt C.GDExtensionInt
type GDExtensionBool C.GDExtensionBool
type GDObjectInstanceID C.GDObjectInstanceID
type GDExtensionRefPtr C.GDExtensionRefPtr
type GDExtensionConstRefPtr C.GDExtensionConstRefPtr
type GDExtensionClassInstancePtr C.GDExtensionClassInstancePtr
type GDExtensionClassLibraryPtr C.GDExtensionClassLibraryPtr
type GDExtensionScriptInstanceDataPtr C.GDExtensionScriptInstanceDataPtr
type GDExtensionScriptLanguagePtr C.GDExtensionScriptLanguagePtr
type GDExtensionScriptInstancePtr C.GDExtensionScriptInstancePtr

// enums
type GDExtensionVariantType C.GDExtensionVariantType

const (
	GDEXTENSION_VARIANT_TYPE_NIL GDExtensionVariantType = iota
	GDEXTENSION_VARIANT_TYPE_BOOL
	GDEXTENSION_VARIANT_TYPE_INT
	GDEXTENSION_VARIANT_TYPE_FLOAT
	GDEXTENSION_VARIANT_TYPE_STRING
	GDEXTENSION_VARIANT_TYPE_VECTOR2
	GDEXTENSION_VARIANT_TYPE_VECTOR2I
	GDEXTENSION_VARIANT_TYPE_RECT2
	GDEXTENSION_VARIANT_TYPE_RECT2I
	GDEXTENSION_VARIANT_TYPE_VECTOR3
	GDEXTENSION_VARIANT_TYPE_VECTOR3I
	GDEXTENSION_VARIANT_TYPE_TRANSFORM2D
	GDEXTENSION_VARIANT_TYPE_VECTOR4
	GDEXTENSION_VARIANT_TYPE_VECTOR4I
	GDEXTENSION_VARIANT_TYPE_PLANE
	GDEXTENSION_VARIANT_TYPE_QUATERNION
	GDEXTENSION_VARIANT_TYPE_AABB
	GDEXTENSION_VARIANT_TYPE_BASIS
	GDEXTENSION_VARIANT_TYPE_TRANSFORM3D
	GDEXTENSION_VARIANT_TYPE_PROJECTION
	GDEXTENSION_VARIANT_TYPE_COLOR
	GDEXTENSION_VARIANT_TYPE_STRING_NAME
	GDEXTENSION_VARIANT_TYPE_NODE_PATH
	GDEXTENSION_VARIANT_TYPE_RID
	GDEXTENSION_VARIANT_TYPE_OBJECT
	GDEXTENSION_VARIANT_TYPE_CALLABLE
	GDEXTENSION_VARIANT_TYPE_SIGNAL
	GDEXTENSION_VARIANT_TYPE_DICTIONARY
	GDEXTENSION_VARIANT_TYPE_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_BYTE_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_INT32_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_INT64_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT32_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_FLOAT64_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_STRING_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR2_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_VECTOR3_ARRAY
	GDEXTENSION_VARIANT_TYPE_PACKED_COLOR_ARRAY
	GDEXTENSION_VARIANT_TYPE_VARIANT_MAX
)

type GDExtensionVariantOperator C.GDExtensionVariantOperator

const (
	GDEXTENSION_VARIANT_OP_EQUAL GDExtensionVariantOperator = iota
	GDEXTENSION_VARIANT_OP_NOT_EQUAL
	GDEXTENSION_VARIANT_OP_LESS
	GDEXTENSION_VARIANT_OP_LESS_EQUAL
	GDEXTENSION_VARIANT_OP_GREATER
	GDEXTENSION_VARIANT_OP_GREATER_EQUAL
	GDEXTENSION_VARIANT_OP_ADD
	GDEXTENSION_VARIANT_OP_SUBTRACT
	GDEXTENSION_VARIANT_OP_MULTIPLY
	GDEXTENSION_VARIANT_OP_DIVIDE
	GDEXTENSION_VARIANT_OP_NEGATE
	GDEXTENSION_VARIANT_OP_POSITIVE
	GDEXTENSION_VARIANT_OP_MODULE
	GDEXTENSION_VARIANT_OP_POWER
	GDEXTENSION_VARIANT_OP_SHIFT_LEFT
	GDEXTENSION_VARIANT_OP_SHIFT_RIGHT
	GDEXTENSION_VARIANT_OP_BIT_AND
	GDEXTENSION_VARIANT_OP_BIT_OR
	GDEXTENSION_VARIANT_OP_BIT_XOR
	GDEXTENSION_VARIANT_OP_BIT_NEGATE
	GDEXTENSION_VARIANT_OP_AND
	GDEXTENSION_VARIANT_OP_OR
	GDEXTENSION_VARIANT_OP_XOR
	GDEXTENSION_VARIANT_OP_NOT
	GDEXTENSION_VARIANT_OP_IN
	GDEXTENSION_VARIANT_OP_MAX
)

type GDExtensionCallErrorType C.GDExtensionCallErrorType

const (
	GDEXTENSION_CALL_OK GDExtensionCallErrorType = iota
	GDEXTENSION_CALL_ERROR_INVALID_METHOD
	GDEXTENSION_CALL_ERROR_INVALID_ARGUMENT
	GDEXTENSION_CALL_ERROR_TOO_MANY_ARGUMENTS
	GDEXTENSION_CALL_ERROR_TOO_FEW_ARGUMENTS
	GDEXTENSION_CALL_ERROR_INSTANCE_IS_NULL
	GDEXTENSION_CALL_ERROR_METHOD_NOT_CONST
)

type GDExtensionClassMethodFlags C.GDExtensionClassMethodFlags

const (
	GDEXTENSION_METHOD_FLAG_NORMAL   GDExtensionClassMethodFlags = 1
	GDEXTENSION_METHOD_FLAG_EDITOR                               = 2
	GDEXTENSION_METHOD_FLAG_CONST                                = 4
	GDEXTENSION_METHOD_FLAG_VIRTUAL                              = 8
	GDEXTENSION_METHOD_FLAG_VARARG                               = 16
	GDEXTENSION_METHOD_FLAG_STATIC                               = 32
	GDEXTENSION_METHOD_FLAGS_DEFAULT                             = GDEXTENSION_METHOD_FLAG_NORMAL
)

type GDExtensionClassMethodArgumentMetadata C.GDExtensionClassMethodArgumentMetadata

const (
	GDEXTENSION_METHOD_ARGUMENT_METADATA_NONE GDExtensionClassMethodArgumentMetadata = iota
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT8
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT16
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT32
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_INT64
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT8
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT16
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT32
	GDEXTENSION_METHOD_ARGUMENT_METADATA_INT_IS_UINT64
	GDEXTENSION_METHOD_ARGUMENT_METADATA_REAL_IS_FLOAT
	GDEXTENSION_METHOD_ARGUMENT_METADATA_REAL_IS_DOUBLE
)

type GDExtensionInitializationLevel C.GDExtensionInitializationLevel

const (
	GDEXTENSION_INITIALIZATION_CORE GDExtensionInitializationLevel = iota
	GDEXTENSION_INITIALIZATION_SERVERS
	GDEXTENSION_INITIALIZATION_SCENE
	GDEXTENSION_INITIALIZATION_EDITOR
	GDEXTENSION_MAX_INITIALIZATION_LEVEL
)

// functions
type GDExtensionVariantFromTypeConstructorFunc C.GDExtensionVariantFromTypeConstructorFunc
type GDExtensionTypeFromVariantConstructorFunc C.GDExtensionTypeFromVariantConstructorFunc
type GDExtensionPtrOperatorEvaluator C.GDExtensionPtrOperatorEvaluator
type GDExtensionPtrBuiltInMethod C.GDExtensionPtrBuiltInMethod
type GDExtensionPtrConstructor C.GDExtensionPtrConstructor
type GDExtensionPtrDestructor C.GDExtensionPtrDestructor
type GDExtensionPtrSetter C.GDExtensionPtrSetter
type GDExtensionPtrGetter C.GDExtensionPtrGetter
type GDExtensionPtrIndexedSetter C.GDExtensionPtrIndexedSetter
type GDExtensionPtrIndexedGetter C.GDExtensionPtrIndexedGetter
type GDExtensionPtrKeyedSetter C.GDExtensionPtrKeyedSetter
type GDExtensionPtrKeyedGetter C.GDExtensionPtrKeyedGetter
type GDExtensionPtrKeyedChecker C.GDExtensionPtrKeyedChecker
type GDExtensionPtrUtilityFunction C.GDExtensionPtrUtilityFunction
type GDExtensionClassConstructor C.GDExtensionClassConstructor
type GDExtensionInstanceBindingCreateCallback C.GDExtensionInstanceBindingCreateCallback
type GDExtensionInstanceBindingFreeCallback C.GDExtensionInstanceBindingFreeCallback
type GDExtensionInstanceBindingReferenceCallback C.GDExtensionInstanceBindingReferenceCallback
type GDExtensionClassSet C.GDExtensionClassSet
type GDExtensionClassGet C.GDExtensionClassGet
type GDExtensionClassGetRID C.GDExtensionClassGetRID
type GDExtensionClassGetPropertyList C.GDExtensionClassGetPropertyList
type GDExtensionClassFreePropertyList C.GDExtensionClassFreePropertyList
type GDExtensionClassPropertyCanRevert C.GDExtensionClassPropertyCanRevert
type GDExtensionClassPropertyGetRevert C.GDExtensionClassPropertyGetRevert
type GDExtensionClassNotification C.GDExtensionClassNotification
type GDExtensionClassToString C.GDExtensionClassToString
type GDExtensionClassReference C.GDExtensionClassReference
type GDExtensionClassUnreference C.GDExtensionClassUnreference
type GDExtensionClassCallVirtual C.GDExtensionClassCallVirtual
type GDExtensionClassCreateInstance C.GDExtensionClassCreateInstance
type GDExtensionClassFreeInstance C.GDExtensionClassFreeInstance
type GDExtensionClassGetVirtual C.GDExtensionClassGetVirtual
type GDExtensionClassMethodCall C.GDExtensionClassMethodCall
type GDExtensionClassMethodPtrCall C.GDExtensionClassMethodPtrCall
type GDExtensionScriptInstanceSet C.GDExtensionScriptInstanceSet
type GDExtensionScriptInstanceGet C.GDExtensionScriptInstanceGet
type GDExtensionScriptInstanceGetPropertyList C.GDExtensionScriptInstanceGetPropertyList
type GDExtensionScriptInstanceFreePropertyList C.GDExtensionScriptInstanceFreePropertyList
type GDExtensionScriptInstanceGetPropertyType C.GDExtensionScriptInstanceGetPropertyType
type GDExtensionScriptInstancePropertyCanRevert C.GDExtensionScriptInstancePropertyCanRevert
type GDExtensionScriptInstancePropertyGetRevert C.GDExtensionScriptInstancePropertyGetRevert
type GDExtensionScriptInstanceGetOwner C.GDExtensionScriptInstanceGetOwner
type GDExtensionScriptInstancePropertyStateAdd C.GDExtensionScriptInstancePropertyStateAdd
type GDExtensionScriptInstanceGetPropertyState C.GDExtensionScriptInstanceGetPropertyState
type GDExtensionScriptInstanceGetMethodList C.GDExtensionScriptInstanceGetMethodList
type GDExtensionScriptInstanceFreeMethodList C.GDExtensionScriptInstanceFreeMethodList
type GDExtensionScriptInstanceHasMethod C.GDExtensionScriptInstanceHasMethod
type GDExtensionScriptInstanceCall C.GDExtensionScriptInstanceCall
type GDExtensionScriptInstanceNotification C.GDExtensionScriptInstanceNotification
type GDExtensionScriptInstanceToString C.GDExtensionScriptInstanceToString
type GDExtensionScriptInstanceRefCountIncremented C.GDExtensionScriptInstanceRefCountIncremented
type GDExtensionScriptInstanceRefCountDecremented C.GDExtensionScriptInstanceRefCountDecremented
type GDExtensionScriptInstanceGetScript C.GDExtensionScriptInstanceGetScript
type GDExtensionScriptInstanceIsPlaceholder C.GDExtensionScriptInstanceIsPlaceholder
type GDExtensionScriptInstanceGetLanguage C.GDExtensionScriptInstanceGetLanguage
type GDExtensionScriptInstanceFree C.GDExtensionScriptInstanceFree
type GDExtensionInitializationFunction C.GDExtensionInitializationFunction

// custom functions
func CallFunc_GDExtensionPtrConstructor(
	cb GDExtensionPtrConstructor,
	p_base GDExtensionTypePtr,
	p_args *GDExtensionConstTypePtr,
) {
	log.Debug("called CallFunc_GDExtensionPtrConstructor")
	C.cgo_callfn_GDExtensionPtrConstructor(
		(C.GDExtensionPtrConstructor)(cb),
		(C.GDExtensionTypePtr)(p_base),
		(*C.GDExtensionConstTypePtr)(p_args),
	)
}

func CallFunc_GDExtensionPtrDestructor(
	cb GDExtensionPtrDestructor,
	ptr GDExtensionTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrDestructor")
	C.cgo_callfn_GDExtensionPtrDestructor(
		(C.GDExtensionPtrDestructor)(cb),
		(C.GDExtensionTypePtr)(ptr),
	)
}

func CallFunc_GDExtensionPtrOperatorEvaluator(
	cb GDExtensionPtrOperatorEvaluator,
	p_left GDExtensionConstTypePtr,
	p_right GDExtensionConstTypePtr,
	r_result GDExtensionTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrOperatorEvaluator")
	C.cgo_callfn_GDExtensionPtrOperatorEvaluator(
		(C.GDExtensionPtrOperatorEvaluator)(cb),
		(C.GDExtensionConstTypePtr)(p_left),
		(C.GDExtensionConstTypePtr)(p_right),
		(C.GDExtensionTypePtr)(r_result),
	)
}

func CallFunc_GDExtensionPtrBuiltInMethod(
	cb GDExtensionPtrBuiltInMethod,
	p_base GDExtensionTypePtr,
	p_args *GDExtensionConstTypePtr,
	r_return GDExtensionTypePtr,
	p_argument_count int32,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrBuiltInMethod")
	C.cgo_callfn_GDExtensionPtrBuiltInMethod(
		(C.GDExtensionPtrBuiltInMethod)(cb),
		(C.GDExtensionTypePtr)(p_base),
		(*C.GDExtensionConstTypePtr)(p_args),
		(C.GDExtensionTypePtr)(r_return),
		(C.int)(p_argument_count),
	)
}

func CallFunc_GDExtensionPtrUtilityFunction(
	cb GDExtensionPtrUtilityFunction,
	r_return GDExtensionTypePtr,
	p_arguments *GDExtensionConstTypePtr,
	p_argument_count int32,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrUtilityFunction")
	C.cgo_callfn_GDExtensionPtrUtilityFunction(
		(C.GDExtensionPtrUtilityFunction)(cb),
		(C.GDExtensionTypePtr)(r_return),
		(*C.GDExtensionConstTypePtr)(p_arguments),
		(C.int)(p_argument_count),
	)
}

func CallFunc_GDExtensionPtrGetter(
	cb GDExtensionPtrGetter,
	p_base GDExtensionConstTypePtr,
	r_value GDExtensionTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrGetter")
	C.cgo_callfn_GDExtensionPtrGetter(
		(C.GDExtensionPtrGetter)(cb),
		(C.GDExtensionConstTypePtr)(p_base),
		(C.GDExtensionTypePtr)(r_value),
	)
}

func CallFunc_GDExtensionPtrSetter(
	cb GDExtensionPtrSetter,
	p_base GDExtensionTypePtr,
	p_value GDExtensionConstTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrSetter")
	C.cgo_callfn_GDExtensionPtrSetter(
		(C.GDExtensionPtrSetter)(cb),
		(C.GDExtensionTypePtr)(p_base),
		(C.GDExtensionConstTypePtr)(p_value),
	)
}

func CallFunc_GDExtensionPtrIndexedGetter(
	cb GDExtensionPtrIndexedGetter,
	p_base GDExtensionConstTypePtr,
	p_index GDExtensionInt,
	r_value GDExtensionTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrIndexedGetter")
	C.cgo_callfn_GDExtensionPtrIndexedGetter(
		(C.GDExtensionPtrIndexedGetter)(cb),
		(C.GDExtensionConstTypePtr)(p_base),
		(C.GDExtensionInt)(p_index),
		(C.GDExtensionTypePtr)(r_value),
	)
}

func CallFunc_GDExtensionPtrIndexedSetter(
	cb GDExtensionPtrIndexedSetter,
	p_base GDExtensionTypePtr,
	p_index GDExtensionInt,
	p_value GDExtensionConstTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionPtrIndexedSetter")
	C.cgo_callfn_GDExtensionPtrIndexedSetter(
		(C.GDExtensionPtrIndexedSetter)(cb),
		(C.GDExtensionTypePtr)(p_base),
		(C.GDExtensionInt)(p_index),
		(C.GDExtensionConstTypePtr)(p_value),
	)
}

func CallFunc_GDExtensionVariantFromTypeConstructorFunc(
	cb GDExtensionVariantFromTypeConstructorFunc,
	arg_0 GDExtensionVariantPtr,
	arg_1 GDExtensionTypePtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionVariantFromTypeConstructorFunc")
	C.cgo_callfn_GDExtensionVariantFromTypeConstructorFunc(
		(C.GDExtensionVariantFromTypeConstructorFunc)(cb),
		(C.GDExtensionVariantPtr)(arg_0),
		(C.GDExtensionTypePtr)(arg_1),
	)
}

func CallFunc_GDExtensionTypeFromVariantConstructorFunc(
	cb GDExtensionTypeFromVariantConstructorFunc,
	arg_0 GDExtensionTypePtr,
	arg_1 GDExtensionVariantPtr,
) {
	log.Debug("called C.cgo_callfn_GDExtensionTypeFromVariantConstructorFunc")
	C.cgo_callfn_GDExtensionTypeFromVariantConstructorFunc(
		(C.GDExtensionTypeFromVariantConstructorFunc)(cb),
		(C.GDExtensionTypePtr)(arg_0),
		(C.GDExtensionVariantPtr)(arg_1),
	)
}

// structs
type GDExtensionCallError C.GDExtensionCallError
type GDExtensionInstanceBindingCallbacks C.GDExtensionInstanceBindingCallbacks
type GDExtensionPropertyInfo C.GDExtensionPropertyInfo
type GDExtensionMethodInfo C.GDExtensionMethodInfo
type GDExtensionClassCreationInfo C.GDExtensionClassCreationInfo
type GDExtensionClassMethodInfo C.GDExtensionClassMethodInfo
type GDExtensionScriptInstanceInfo C.GDExtensionScriptInstanceInfo
type GDExtensionInterface C.GDExtensionInterface
type GDExtensionInitialization C.GDExtensionInitialization

// struct functions
/* struct (7) GDExtensionInterface */

func GDExtensionInterface_mem_alloc(p_struct *GDExtensionInterface, p_bytes uint64) unsafe.Pointer {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.size_t)(p_bytes)                 // size_t

	log.Debug("called C.cgo_callfn_GDExtensionInterface_mem_alloc")

	ret := C.cgo_callfn_GDExtensionInterface_mem_alloc(arg0, arg1)

	// void *
	return unsafe.Pointer(ret)
}

func GDExtensionInterface_mem_realloc(p_struct *GDExtensionInterface, p_ptr unsafe.Pointer, p_bytes uint64) unsafe.Pointer {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := unsafe.Pointer(p_ptr)               // void *
	arg2 := (C.size_t)(p_bytes)                 // size_t

	log.Debug("called C.cgo_callfn_GDExtensionInterface_mem_realloc")

	ret := C.cgo_callfn_GDExtensionInterface_mem_realloc(arg0, arg1, arg2)

	// void *
	return unsafe.Pointer(ret)
}

func GDExtensionInterface_mem_free(p_struct *GDExtensionInterface, p_ptr unsafe.Pointer) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := unsafe.Pointer(p_ptr)               // void *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_mem_free")

	C.cgo_callfn_GDExtensionInterface_mem_free(arg0, arg1)

}

func GDExtensionInterface_print_error(p_struct *GDExtensionInterface, p_description string, p_function string, p_file string, p_line int32) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := C.CString(p_description)            // const char *
	arg2 := C.CString(p_function)               // const char *
	arg3 := C.CString(p_file)                   // const char *
	arg4 := (C.int32_t)(p_line)                 // int32_t

	log.Debug("called C.cgo_callfn_GDExtensionInterface_print_error")

	C.cgo_callfn_GDExtensionInterface_print_error(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDExtensionInterface_print_warning(p_struct *GDExtensionInterface, p_description string, p_function string, p_file string, p_line int32) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := C.CString(p_description)            // const char *
	arg2 := C.CString(p_function)               // const char *
	arg3 := C.CString(p_file)                   // const char *
	arg4 := (C.int32_t)(p_line)                 // int32_t

	log.Debug("called C.cgo_callfn_GDExtensionInterface_print_warning")

	C.cgo_callfn_GDExtensionInterface_print_warning(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDExtensionInterface_print_script_error(p_struct *GDExtensionInterface, p_description string, p_function string, p_file string, p_line int32) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := C.CString(p_description)            // const char *
	arg2 := C.CString(p_function)               // const char *
	arg3 := C.CString(p_file)                   // const char *
	arg4 := (C.int32_t)(p_line)                 // int32_t

	log.Debug("called C.cgo_callfn_GDExtensionInterface_print_script_error")

	C.cgo_callfn_GDExtensionInterface_print_script_error(arg0, arg1, arg2, arg3, arg4)

	C.free(unsafe.Pointer(arg1))
	C.free(unsafe.Pointer(arg2))
	C.free(unsafe.Pointer(arg3))

}

func GDExtensionInterface_get_native_struct_size(p_struct *GDExtensionInterface, p_name GDExtensionConstStringNamePtr) uint64 {
	arg0 := (*C.GDExtensionInterface)(p_struct)       // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringNamePtr)(p_name) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_get_native_struct_size")

	ret := C.cgo_callfn_GDExtensionInterface_get_native_struct_size(arg0, arg1)

	// uint64_t
	return uint64(ret)
}

func GDExtensionInterface_variant_new_copy(p_struct *GDExtensionInterface, r_dest GDExtensionVariantPtr, p_src GDExtensionConstVariantPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)   // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(r_dest)     // GDExtensionVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_src) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_new_copy")

	C.cgo_callfn_GDExtensionInterface_variant_new_copy(arg0, arg1, arg2)

}

func GDExtensionInterface_variant_new_nil(p_struct *GDExtensionInterface, r_dest GDExtensionVariantPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(r_dest)   // GDExtensionVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_new_nil")

	C.cgo_callfn_GDExtensionInterface_variant_new_nil(arg0, arg1)

}

func GDExtensionInterface_variant_destroy(p_struct *GDExtensionInterface, p_self GDExtensionVariantPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(p_self)   // GDExtensionVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_destroy")

	C.cgo_callfn_GDExtensionInterface_variant_destroy(arg0, arg1)

}

func GDExtensionInterface_variant_call(p_struct *GDExtensionInterface, p_self GDExtensionVariantPtr, p_method GDExtensionConstStringNamePtr, p_args *GDExtensionConstVariantPtr, p_argument_count GDExtensionInt, r_return GDExtensionVariantPtr, r_error *GDExtensionCallError) {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(p_self)           // GDExtensionVariantPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_method) // GDExtensionConstStringNamePtr
	arg3 := (*C.GDExtensionConstVariantPtr)(p_args)     // const GDExtensionConstVariantPtr *
	arg4 := (C.GDExtensionInt)(p_argument_count)        // GDExtensionInt
	arg5 := (C.GDExtensionVariantPtr)(r_return)         // GDExtensionVariantPtr
	arg6 := (*C.GDExtensionCallError)(r_error)          // GDExtensionCallError *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_call")

	C.cgo_callfn_GDExtensionInterface_variant_call(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDExtensionInterface_variant_call_static(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_method GDExtensionConstStringNamePtr, p_args *GDExtensionConstVariantPtr, p_argument_count GDExtensionInt, r_return GDExtensionVariantPtr, r_error *GDExtensionCallError) {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)          // GDExtensionVariantType
	arg2 := (C.GDExtensionConstStringNamePtr)(p_method) // GDExtensionConstStringNamePtr
	arg3 := (*C.GDExtensionConstVariantPtr)(p_args)     // const GDExtensionConstVariantPtr *
	arg4 := (C.GDExtensionInt)(p_argument_count)        // GDExtensionInt
	arg5 := (C.GDExtensionVariantPtr)(r_return)         // GDExtensionVariantPtr
	arg6 := (*C.GDExtensionCallError)(r_error)          // GDExtensionCallError *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_call_static")

	C.cgo_callfn_GDExtensionInterface_variant_call_static(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDExtensionInterface_variant_evaluate(p_struct *GDExtensionInterface, p_op GDExtensionVariantOperator, p_a GDExtensionConstVariantPtr, p_b GDExtensionConstVariantPtr, r_return GDExtensionVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)  // GDExtensionInterface
	arg1 := (C.GDExtensionVariantOperator)(p_op) // GDExtensionVariantOperator
	arg2 := (C.GDExtensionConstVariantPtr)(p_a)  // GDExtensionConstVariantPtr
	arg3 := (C.GDExtensionConstVariantPtr)(p_b)  // GDExtensionConstVariantPtr
	arg4 := (C.GDExtensionVariantPtr)(r_return)  // GDExtensionVariantPtr
	arg5 := (*C.GDExtensionBool)(r_valid)        // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_evaluate")

	C.cgo_callfn_GDExtensionInterface_variant_evaluate(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDExtensionInterface_variant_set(p_struct *GDExtensionInterface, p_self GDExtensionVariantPtr, p_key GDExtensionConstVariantPtr, p_value GDExtensionConstVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(p_self)       // GDExtensionVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key)   // GDExtensionConstVariantPtr
	arg3 := (C.GDExtensionConstVariantPtr)(p_value) // GDExtensionConstVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)           // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_set")

	C.cgo_callfn_GDExtensionInterface_variant_set(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_set_named(p_struct *GDExtensionInterface, p_self GDExtensionVariantPtr, p_key GDExtensionConstStringNamePtr, p_value GDExtensionConstVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)      // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(p_self)        // GDExtensionVariantPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_key) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionConstVariantPtr)(p_value)  // GDExtensionConstVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)            // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_set_named")

	C.cgo_callfn_GDExtensionInterface_variant_set_named(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_set_keyed(p_struct *GDExtensionInterface, p_self GDExtensionVariantPtr, p_key GDExtensionConstVariantPtr, p_value GDExtensionConstVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(p_self)       // GDExtensionVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key)   // GDExtensionConstVariantPtr
	arg3 := (C.GDExtensionConstVariantPtr)(p_value) // GDExtensionConstVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)           // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_set_keyed")

	C.cgo_callfn_GDExtensionInterface_variant_set_keyed(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_set_indexed(p_struct *GDExtensionInterface, p_self GDExtensionVariantPtr, p_index GDExtensionInt, p_value GDExtensionConstVariantPtr, r_valid *GDExtensionBool, r_oob *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionVariantPtr)(p_self)       // GDExtensionVariantPtr
	arg2 := (C.GDExtensionInt)(p_index)             // GDExtensionInt
	arg3 := (C.GDExtensionConstVariantPtr)(p_value) // GDExtensionConstVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)           // GDExtensionBool *
	arg5 := (*C.GDExtensionBool)(r_oob)             // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_set_indexed")

	C.cgo_callfn_GDExtensionInterface_variant_set_indexed(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDExtensionInterface_variant_get(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_key GDExtensionConstVariantPtr, r_ret GDExtensionVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key)  // GDExtensionConstVariantPtr
	arg3 := (C.GDExtensionVariantPtr)(r_ret)       // GDExtensionVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get")

	C.cgo_callfn_GDExtensionInterface_variant_get(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_get_named(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_key GDExtensionConstStringNamePtr, r_ret GDExtensionVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)      // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self)   // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_key) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionVariantPtr)(r_ret)         // GDExtensionVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)            // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_named")

	C.cgo_callfn_GDExtensionInterface_variant_get_named(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_get_keyed(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_key GDExtensionConstVariantPtr, r_ret GDExtensionVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key)  // GDExtensionConstVariantPtr
	arg3 := (C.GDExtensionVariantPtr)(r_ret)       // GDExtensionVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_keyed")

	C.cgo_callfn_GDExtensionInterface_variant_get_keyed(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_get_indexed(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_index GDExtensionInt, r_ret GDExtensionVariantPtr, r_valid *GDExtensionBool, r_oob *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionInt)(p_index)            // GDExtensionInt
	arg3 := (C.GDExtensionVariantPtr)(r_ret)       // GDExtensionVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *
	arg5 := (*C.GDExtensionBool)(r_oob)            // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_indexed")

	C.cgo_callfn_GDExtensionInterface_variant_get_indexed(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDExtensionInterface_variant_iter_init(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, r_iter GDExtensionVariantPtr, r_valid *GDExtensionBool) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionVariantPtr)(r_iter)      // GDExtensionVariantPtr
	arg3 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_iter_init")

	ret := C.cgo_callfn_GDExtensionInterface_variant_iter_init(arg0, arg1, arg2, arg3)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_iter_next(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, r_iter GDExtensionVariantPtr, r_valid *GDExtensionBool) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionVariantPtr)(r_iter)      // GDExtensionVariantPtr
	arg3 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_iter_next")

	ret := C.cgo_callfn_GDExtensionInterface_variant_iter_next(arg0, arg1, arg2, arg3)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_iter_get(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, r_iter GDExtensionVariantPtr, r_ret GDExtensionVariantPtr, r_valid *GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionVariantPtr)(r_iter)      // GDExtensionVariantPtr
	arg3 := (C.GDExtensionVariantPtr)(r_ret)       // GDExtensionVariantPtr
	arg4 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_iter_get")

	C.cgo_callfn_GDExtensionInterface_variant_iter_get(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_variant_hash(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_hash")

	ret := C.cgo_callfn_GDExtensionInterface_variant_hash(arg0, arg1)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_variant_recursive_hash(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_recursion_count GDExtensionInt) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionInt)(p_recursion_count)  // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_recursive_hash")

	ret := C.cgo_callfn_GDExtensionInterface_variant_recursive_hash(arg0, arg1, arg2)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_variant_hash_compare(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_other GDExtensionConstVariantPtr) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self)  // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_other) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_hash_compare")

	ret := C.cgo_callfn_GDExtensionInterface_variant_hash_compare(arg0, arg1, arg2)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_booleanize(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_booleanize")

	ret := C.cgo_callfn_GDExtensionInterface_variant_booleanize(arg0, arg1)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_duplicate(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, r_ret GDExtensionVariantPtr, p_deep GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionVariantPtr)(r_ret)       // GDExtensionVariantPtr
	arg3 := (C.GDExtensionBool)(p_deep)            // GDExtensionBool

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_duplicate")

	C.cgo_callfn_GDExtensionInterface_variant_duplicate(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_variant_stringify(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, r_ret GDExtensionStringPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionStringPtr)(r_ret)        // GDExtensionStringPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_stringify")

	C.cgo_callfn_GDExtensionInterface_variant_stringify(arg0, arg1, arg2)

}

func GDExtensionInterface_variant_get_type(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr) GDExtensionVariantType {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_type")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_type(arg0, arg1)

	// GDExtensionVariantType
	return (GDExtensionVariantType)(ret)
}

func GDExtensionInterface_variant_has_method(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_method GDExtensionConstStringNamePtr) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self)      // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_method) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_has_method")

	ret := C.cgo_callfn_GDExtensionInterface_variant_has_method(arg0, arg1, arg2)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_has_member(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_member GDExtensionConstStringNamePtr) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)          // GDExtensionVariantType
	arg2 := (C.GDExtensionConstStringNamePtr)(p_member) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_has_member")

	ret := C.cgo_callfn_GDExtensionInterface_variant_has_member(arg0, arg1, arg2)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_has_key(p_struct *GDExtensionInterface, p_self GDExtensionConstVariantPtr, p_key GDExtensionConstVariantPtr, r_valid *GDExtensionBool) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstVariantPtr)(p_self) // GDExtensionConstVariantPtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key)  // GDExtensionConstVariantPtr
	arg3 := (*C.GDExtensionBool)(r_valid)          // GDExtensionBool *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_has_key")

	ret := C.cgo_callfn_GDExtensionInterface_variant_has_key(arg0, arg1, arg2, arg3)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_get_type_name(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, r_name GDExtensionStringPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType
	arg2 := (C.GDExtensionStringPtr)(r_name)    // GDExtensionStringPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_type_name")

	C.cgo_callfn_GDExtensionInterface_variant_get_type_name(arg0, arg1, arg2)

}

func GDExtensionInterface_variant_can_convert(p_struct *GDExtensionInterface, p_from GDExtensionVariantType, p_to GDExtensionVariantType) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_from)  // GDExtensionVariantType
	arg2 := (C.GDExtensionVariantType)(p_to)    // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_can_convert")

	ret := C.cgo_callfn_GDExtensionInterface_variant_can_convert(arg0, arg1, arg2)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_variant_can_convert_strict(p_struct *GDExtensionInterface, p_from GDExtensionVariantType, p_to GDExtensionVariantType) GDExtensionBool {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_from)  // GDExtensionVariantType
	arg2 := (C.GDExtensionVariantType)(p_to)    // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_can_convert_strict")

	ret := C.cgo_callfn_GDExtensionInterface_variant_can_convert_strict(arg0, arg1, arg2)

	// GDExtensionBool
	return (GDExtensionBool)(ret)
}

func GDExtensionInterface_get_variant_from_type_constructor(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionVariantFromTypeConstructorFunc {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_get_variant_from_type_constructor")

	ret := C.cgo_callfn_GDExtensionInterface_get_variant_from_type_constructor(arg0, arg1)

	// GDExtensionVariantFromTypeConstructorFunc
	return (GDExtensionVariantFromTypeConstructorFunc)(ret)
}

func GDExtensionInterface_get_variant_to_type_constructor(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionTypeFromVariantConstructorFunc {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_get_variant_to_type_constructor")

	ret := C.cgo_callfn_GDExtensionInterface_get_variant_to_type_constructor(arg0, arg1)

	// GDExtensionTypeFromVariantConstructorFunc
	return (GDExtensionTypeFromVariantConstructorFunc)(ret)
}

func GDExtensionInterface_variant_get_ptr_operator_evaluator(p_struct *GDExtensionInterface, p_operator GDExtensionVariantOperator, p_type_a GDExtensionVariantType, p_type_b GDExtensionVariantType) GDExtensionPtrOperatorEvaluator {
	arg0 := (*C.GDExtensionInterface)(p_struct)        // GDExtensionInterface
	arg1 := (C.GDExtensionVariantOperator)(p_operator) // GDExtensionVariantOperator
	arg2 := (C.GDExtensionVariantType)(p_type_a)       // GDExtensionVariantType
	arg3 := (C.GDExtensionVariantType)(p_type_b)       // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_operator_evaluator")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_operator_evaluator(arg0, arg1, arg2, arg3)

	// GDExtensionPtrOperatorEvaluator
	return (GDExtensionPtrOperatorEvaluator)(ret)
}

func GDExtensionInterface_variant_get_ptr_builtin_method(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_method GDExtensionConstStringNamePtr, p_hash GDExtensionInt) GDExtensionPtrBuiltInMethod {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)          // GDExtensionVariantType
	arg2 := (C.GDExtensionConstStringNamePtr)(p_method) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionInt)(p_hash)                  // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_builtin_method")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_builtin_method(arg0, arg1, arg2, arg3)

	// GDExtensionPtrBuiltInMethod
	return (GDExtensionPtrBuiltInMethod)(ret)
}

func GDExtensionInterface_variant_get_ptr_constructor(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_constructor int32) GDExtensionPtrConstructor {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType
	arg2 := (C.int32_t)(p_constructor)          // int32_t

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_constructor")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_constructor(arg0, arg1, arg2)

	// GDExtensionPtrConstructor
	return (GDExtensionPtrConstructor)(ret)
}

func GDExtensionInterface_variant_get_ptr_destructor(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionPtrDestructor {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_destructor")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_destructor(arg0, arg1)

	// GDExtensionPtrDestructor
	return (GDExtensionPtrDestructor)(ret)
}

func GDExtensionInterface_variant_construct(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_base GDExtensionVariantPtr, p_args *GDExtensionConstVariantPtr, p_argument_count int32, r_error *GDExtensionCallError) {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)      // GDExtensionVariantType
	arg2 := (C.GDExtensionVariantPtr)(p_base)       // GDExtensionVariantPtr
	arg3 := (*C.GDExtensionConstVariantPtr)(p_args) // const GDExtensionConstVariantPtr *
	arg4 := (C.int32_t)(p_argument_count)           // int32_t
	arg5 := (*C.GDExtensionCallError)(r_error)      // GDExtensionCallError *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_construct")

	C.cgo_callfn_GDExtensionInterface_variant_construct(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDExtensionInterface_variant_get_ptr_setter(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_member GDExtensionConstStringNamePtr) GDExtensionPtrSetter {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)          // GDExtensionVariantType
	arg2 := (C.GDExtensionConstStringNamePtr)(p_member) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_setter")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_setter(arg0, arg1, arg2)

	// GDExtensionPtrSetter
	return (GDExtensionPtrSetter)(ret)
}

func GDExtensionInterface_variant_get_ptr_getter(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_member GDExtensionConstStringNamePtr) GDExtensionPtrGetter {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)          // GDExtensionVariantType
	arg2 := (C.GDExtensionConstStringNamePtr)(p_member) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_getter")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_getter(arg0, arg1, arg2)

	// GDExtensionPtrGetter
	return (GDExtensionPtrGetter)(ret)
}

func GDExtensionInterface_variant_get_ptr_indexed_setter(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionPtrIndexedSetter {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_indexed_setter")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_indexed_setter(arg0, arg1)

	// GDExtensionPtrIndexedSetter
	return (GDExtensionPtrIndexedSetter)(ret)
}

func GDExtensionInterface_variant_get_ptr_indexed_getter(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionPtrIndexedGetter {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_indexed_getter")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_indexed_getter(arg0, arg1)

	// GDExtensionPtrIndexedGetter
	return (GDExtensionPtrIndexedGetter)(ret)
}

func GDExtensionInterface_variant_get_ptr_keyed_setter(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionPtrKeyedSetter {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_keyed_setter")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_keyed_setter(arg0, arg1)

	// GDExtensionPtrKeyedSetter
	return (GDExtensionPtrKeyedSetter)(ret)
}

func GDExtensionInterface_variant_get_ptr_keyed_getter(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionPtrKeyedGetter {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_keyed_getter")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_keyed_getter(arg0, arg1)

	// GDExtensionPtrKeyedGetter
	return (GDExtensionPtrKeyedGetter)(ret)
}

func GDExtensionInterface_variant_get_ptr_keyed_checker(p_struct *GDExtensionInterface, p_type GDExtensionVariantType) GDExtensionPtrKeyedChecker {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)  // GDExtensionVariantType

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_keyed_checker")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_keyed_checker(arg0, arg1)

	// GDExtensionPtrKeyedChecker
	return (GDExtensionPtrKeyedChecker)(ret)
}

func GDExtensionInterface_variant_get_constant_value(p_struct *GDExtensionInterface, p_type GDExtensionVariantType, p_constant GDExtensionConstStringNamePtr, r_ret GDExtensionVariantPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)           // GDExtensionInterface
	arg1 := (C.GDExtensionVariantType)(p_type)            // GDExtensionVariantType
	arg2 := (C.GDExtensionConstStringNamePtr)(p_constant) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionVariantPtr)(r_ret)              // GDExtensionVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_constant_value")

	C.cgo_callfn_GDExtensionInterface_variant_get_constant_value(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_variant_get_ptr_utility_function(p_struct *GDExtensionInterface, p_function GDExtensionConstStringNamePtr, p_hash GDExtensionInt) GDExtensionPtrUtilityFunction {
	arg0 := (*C.GDExtensionInterface)(p_struct)           // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringNamePtr)(p_function) // GDExtensionConstStringNamePtr
	arg2 := (C.GDExtensionInt)(p_hash)                    // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_variant_get_ptr_utility_function")

	ret := C.cgo_callfn_GDExtensionInterface_variant_get_ptr_utility_function(arg0, arg1, arg2)

	// GDExtensionPtrUtilityFunction
	return (GDExtensionPtrUtilityFunction)(ret)
}

func GDExtensionInterface_string_new_with_latin1_chars(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents string) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := C.CString(p_contents)               // const char *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_latin1_chars")

	C.cgo_callfn_GDExtensionInterface_string_new_with_latin1_chars(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))
}

func GDExtensionInterface_string_new_with_utf8_chars(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents string) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := C.CString(p_contents)               // const char *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_utf8_chars")

	C.cgo_callfn_GDExtensionInterface_string_new_with_utf8_chars(arg0, arg1, arg2)

	C.free(unsafe.Pointer(arg2))
}

func GDExtensionInterface_string_new_with_utf16_chars(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents *Char16T) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := (*C.char16_t)(p_contents)           // const char16_t *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_utf16_chars")

	C.cgo_callfn_GDExtensionInterface_string_new_with_utf16_chars(arg0, arg1, arg2)

}

func GDExtensionInterface_string_new_with_utf32_chars(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents *Char32T) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := (*C.char32_t)(p_contents)           // const char32_t *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_utf32_chars")

	C.cgo_callfn_GDExtensionInterface_string_new_with_utf32_chars(arg0, arg1, arg2)

}

func GDExtensionInterface_string_new_with_wide_chars(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents *WcharT) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := (*C.wchar_t)(p_contents)            // const wchar_t *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_wide_chars")

	C.cgo_callfn_GDExtensionInterface_string_new_with_wide_chars(arg0, arg1, arg2)

}

func GDExtensionInterface_string_new_with_latin1_chars_and_len(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents string, p_size GDExtensionInt) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := C.CString(p_contents)               // const char *
	arg3 := (C.GDExtensionInt)(p_size)          // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_latin1_chars_and_len")

	C.cgo_callfn_GDExtensionInterface_string_new_with_latin1_chars_and_len(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDExtensionInterface_string_new_with_utf8_chars_and_len(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents string, p_size GDExtensionInt) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := C.CString(p_contents)               // const char *
	arg3 := (C.GDExtensionInt)(p_size)          // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_utf8_chars_and_len")

	C.cgo_callfn_GDExtensionInterface_string_new_with_utf8_chars_and_len(arg0, arg1, arg2, arg3)

	C.free(unsafe.Pointer(arg2))

}

func GDExtensionInterface_string_new_with_utf16_chars_and_len(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents *Char16T, p_size GDExtensionInt) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := (*C.char16_t)(p_contents)           // const char16_t *
	arg3 := (C.GDExtensionInt)(p_size)          // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_utf16_chars_and_len")

	C.cgo_callfn_GDExtensionInterface_string_new_with_utf16_chars_and_len(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_string_new_with_utf32_chars_and_len(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents *Char32T, p_size GDExtensionInt) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := (*C.char32_t)(p_contents)           // const char32_t *
	arg3 := (C.GDExtensionInt)(p_size)          // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_utf32_chars_and_len")

	C.cgo_callfn_GDExtensionInterface_string_new_with_utf32_chars_and_len(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_string_new_with_wide_chars_and_len(p_struct *GDExtensionInterface, r_dest GDExtensionStringPtr, p_contents *WcharT, p_size GDExtensionInt) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(r_dest)    // GDExtensionStringPtr
	arg2 := (*C.wchar_t)(p_contents)            // const wchar_t *
	arg3 := (C.GDExtensionInt)(p_size)          // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_new_with_wide_chars_and_len")

	C.cgo_callfn_GDExtensionInterface_string_new_with_wide_chars_and_len(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_string_to_latin1_chars(p_struct *GDExtensionInterface, p_self GDExtensionConstStringPtr, r_text *Char, p_max_write_length GDExtensionInt) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringPtr)(p_self)  // GDExtensionConstStringPtr
	arg2 := (*C.char)(r_text)                      // char *
	arg3 := (C.GDExtensionInt)(p_max_write_length) // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_to_latin1_chars")

	ret := C.cgo_callfn_GDExtensionInterface_string_to_latin1_chars(arg0, arg1, arg2, arg3)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_string_to_utf8_chars(p_struct *GDExtensionInterface, p_self GDExtensionConstStringPtr, r_text *Char, p_max_write_length GDExtensionInt) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringPtr)(p_self)  // GDExtensionConstStringPtr
	arg2 := (*C.char)(r_text)                      // char *
	arg3 := (C.GDExtensionInt)(p_max_write_length) // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_to_utf8_chars")

	ret := C.cgo_callfn_GDExtensionInterface_string_to_utf8_chars(arg0, arg1, arg2, arg3)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_string_to_utf16_chars(p_struct *GDExtensionInterface, p_self GDExtensionConstStringPtr, r_text *Char16T, p_max_write_length GDExtensionInt) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringPtr)(p_self)  // GDExtensionConstStringPtr
	arg2 := (*C.char16_t)(r_text)                  // char16_t *
	arg3 := (C.GDExtensionInt)(p_max_write_length) // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_to_utf16_chars")

	ret := C.cgo_callfn_GDExtensionInterface_string_to_utf16_chars(arg0, arg1, arg2, arg3)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_string_to_utf32_chars(p_struct *GDExtensionInterface, p_self GDExtensionConstStringPtr, r_text *Char32T, p_max_write_length GDExtensionInt) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringPtr)(p_self)  // GDExtensionConstStringPtr
	arg2 := (*C.char32_t)(r_text)                  // char32_t *
	arg3 := (C.GDExtensionInt)(p_max_write_length) // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_to_utf32_chars")

	ret := C.cgo_callfn_GDExtensionInterface_string_to_utf32_chars(arg0, arg1, arg2, arg3)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_string_to_wide_chars(p_struct *GDExtensionInterface, p_self GDExtensionConstStringPtr, r_text *WcharT, p_max_write_length GDExtensionInt) GDExtensionInt {
	arg0 := (*C.GDExtensionInterface)(p_struct)    // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringPtr)(p_self)  // GDExtensionConstStringPtr
	arg2 := (*C.wchar_t)(r_text)                   // wchar_t *
	arg3 := (C.GDExtensionInt)(p_max_write_length) // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_to_wide_chars")

	ret := C.cgo_callfn_GDExtensionInterface_string_to_wide_chars(arg0, arg1, arg2, arg3)

	// GDExtensionInt
	return (GDExtensionInt)(ret)
}

func GDExtensionInterface_string_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionStringPtr, p_index GDExtensionInt) *Char32T {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionStringPtr)(p_self)    // GDExtensionStringPtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_string_operator_index(arg0, arg1, arg2)

	// char32_t *
	return (*Char32T)(ret)
}

func GDExtensionInterface_string_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstStringPtr, p_index GDExtensionInt) *Char32T {
	arg0 := (*C.GDExtensionInterface)(p_struct)   // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringPtr)(p_self) // GDExtensionConstStringPtr
	arg2 := (C.GDExtensionInt)(p_index)           // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_string_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_string_operator_index_const(arg0, arg1, arg2)

	// const char32_t *
	return (*Char32T)(ret)
}

func GDExtensionInterface_packed_byte_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) *uint8 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_byte_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_byte_array_operator_index(arg0, arg1, arg2)

	// uint8_t *
	return (*uint8)(ret)
}

func GDExtensionInterface_packed_byte_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) *uint8 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_byte_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_byte_array_operator_index_const(arg0, arg1, arg2)

	// const uint8_t *
	return (*uint8)(ret)
}

func GDExtensionInterface_packed_color_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) GDExtensionTypePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_color_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_color_array_operator_index(arg0, arg1, arg2)

	// GDExtensionTypePtr
	return (GDExtensionTypePtr)(ret)
}

func GDExtensionInterface_packed_color_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) GDExtensionTypePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_color_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_color_array_operator_index_const(arg0, arg1, arg2)

	// GDExtensionTypePtr
	return (GDExtensionTypePtr)(ret)
}

func GDExtensionInterface_packed_float32_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) *float32 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_float32_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_float32_array_operator_index(arg0, arg1, arg2)

	// float *
	return (*float32)(ret)
}

func GDExtensionInterface_packed_float32_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) *float32 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_float32_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_float32_array_operator_index_const(arg0, arg1, arg2)

	// const float *
	return (*float32)(ret)
}

func GDExtensionInterface_packed_float64_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) *float64 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_float64_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_float64_array_operator_index(arg0, arg1, arg2)

	// double *
	return (*float64)(ret)
}

func GDExtensionInterface_packed_float64_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) *float64 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_float64_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_float64_array_operator_index_const(arg0, arg1, arg2)

	// const double *
	return (*float64)(ret)
}

func GDExtensionInterface_packed_int32_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) *int32 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_int32_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_int32_array_operator_index(arg0, arg1, arg2)

	// int32_t *
	return (*int32)(ret)
}

func GDExtensionInterface_packed_int32_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) *int32 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_int32_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_int32_array_operator_index_const(arg0, arg1, arg2)

	// const int32_t *
	return (*int32)(ret)
}

func GDExtensionInterface_packed_int64_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) *int64 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_int64_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_int64_array_operator_index(arg0, arg1, arg2)

	// int64_t *
	return (*int64)(ret)
}

func GDExtensionInterface_packed_int64_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) *int64 {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_int64_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_int64_array_operator_index_const(arg0, arg1, arg2)

	// const int64_t *
	return (*int64)(ret)
}

func GDExtensionInterface_packed_string_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) GDExtensionStringPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_string_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_string_array_operator_index(arg0, arg1, arg2)

	// GDExtensionStringPtr
	return (GDExtensionStringPtr)(ret)
}

func GDExtensionInterface_packed_string_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) GDExtensionStringPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_string_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_string_array_operator_index_const(arg0, arg1, arg2)

	// GDExtensionStringPtr
	return (GDExtensionStringPtr)(ret)
}

func GDExtensionInterface_packed_vector2_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) GDExtensionTypePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_vector2_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_vector2_array_operator_index(arg0, arg1, arg2)

	// GDExtensionTypePtr
	return (GDExtensionTypePtr)(ret)
}

func GDExtensionInterface_packed_vector2_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) GDExtensionTypePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_vector2_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_vector2_array_operator_index_const(arg0, arg1, arg2)

	// GDExtensionTypePtr
	return (GDExtensionTypePtr)(ret)
}

func GDExtensionInterface_packed_vector3_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) GDExtensionTypePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_vector3_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_packed_vector3_array_operator_index(arg0, arg1, arg2)

	// GDExtensionTypePtr
	return (GDExtensionTypePtr)(ret)
}

func GDExtensionInterface_packed_vector3_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) GDExtensionTypePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_packed_vector3_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_packed_vector3_array_operator_index_const(arg0, arg1, arg2)

	// GDExtensionTypePtr
	return (GDExtensionTypePtr)(ret)
}

func GDExtensionInterface_array_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_index GDExtensionInt) GDExtensionVariantPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)      // GDExtensionTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_array_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_array_operator_index(arg0, arg1, arg2)

	// GDExtensionVariantPtr
	return (GDExtensionVariantPtr)(ret)
}

func GDExtensionInterface_array_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_index GDExtensionInt) GDExtensionVariantPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self) // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionInt)(p_index)         // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_array_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_array_operator_index_const(arg0, arg1, arg2)

	// GDExtensionVariantPtr
	return (GDExtensionVariantPtr)(ret)
}

func GDExtensionInterface_dictionary_operator_index(p_struct *GDExtensionInterface, p_self GDExtensionTypePtr, p_key GDExtensionConstVariantPtr) GDExtensionVariantPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)   // GDExtensionInterface
	arg1 := (C.GDExtensionTypePtr)(p_self)        // GDExtensionTypePtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_dictionary_operator_index")

	ret := C.cgo_callfn_GDExtensionInterface_dictionary_operator_index(arg0, arg1, arg2)

	// GDExtensionVariantPtr
	return (GDExtensionVariantPtr)(ret)
}

func GDExtensionInterface_dictionary_operator_index_const(p_struct *GDExtensionInterface, p_self GDExtensionConstTypePtr, p_key GDExtensionConstVariantPtr) GDExtensionVariantPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)   // GDExtensionInterface
	arg1 := (C.GDExtensionConstTypePtr)(p_self)   // GDExtensionConstTypePtr
	arg2 := (C.GDExtensionConstVariantPtr)(p_key) // GDExtensionConstVariantPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_dictionary_operator_index_const")

	ret := C.cgo_callfn_GDExtensionInterface_dictionary_operator_index_const(arg0, arg1, arg2)

	// GDExtensionVariantPtr
	return (GDExtensionVariantPtr)(ret)
}

func GDExtensionInterface_object_method_bind_call(p_struct *GDExtensionInterface, p_method_bind GDExtensionMethodBindPtr, p_instance GDExtensionObjectPtr, p_args *GDExtensionConstVariantPtr, p_arg_count GDExtensionInt, r_ret GDExtensionVariantPtr, r_error *GDExtensionCallError) {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionMethodBindPtr)(p_method_bind) // GDExtensionMethodBindPtr
	arg2 := (C.GDExtensionObjectPtr)(p_instance)        // GDExtensionObjectPtr
	arg3 := (*C.GDExtensionConstVariantPtr)(p_args)     // const GDExtensionConstVariantPtr *
	arg4 := (C.GDExtensionInt)(p_arg_count)             // GDExtensionInt
	arg5 := (C.GDExtensionVariantPtr)(r_ret)            // GDExtensionVariantPtr
	arg6 := (*C.GDExtensionCallError)(r_error)          // GDExtensionCallError *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_method_bind_call")

	C.cgo_callfn_GDExtensionInterface_object_method_bind_call(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDExtensionInterface_object_method_bind_ptrcall(p_struct *GDExtensionInterface, p_method_bind GDExtensionMethodBindPtr, p_instance GDExtensionObjectPtr, p_args *GDExtensionConstTypePtr, r_ret GDExtensionTypePtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)         // GDExtensionInterface
	arg1 := (C.GDExtensionMethodBindPtr)(p_method_bind) // GDExtensionMethodBindPtr
	arg2 := (C.GDExtensionObjectPtr)(p_instance)        // GDExtensionObjectPtr
	arg3 := (*C.GDExtensionConstTypePtr)(p_args)        // const GDExtensionConstTypePtr *
	arg4 := (C.GDExtensionTypePtr)(r_ret)               // GDExtensionTypePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_method_bind_ptrcall")

	C.cgo_callfn_GDExtensionInterface_object_method_bind_ptrcall(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_object_destroy(p_struct *GDExtensionInterface, p_o GDExtensionObjectPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionObjectPtr)(p_o)       // GDExtensionObjectPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_destroy")

	C.cgo_callfn_GDExtensionInterface_object_destroy(arg0, arg1)

}

func GDExtensionInterface_global_get_singleton(p_struct *GDExtensionInterface, p_name GDExtensionConstStringNamePtr) GDExtensionObjectPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)       // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringNamePtr)(p_name) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_global_get_singleton")

	ret := C.cgo_callfn_GDExtensionInterface_global_get_singleton(arg0, arg1)

	// GDExtensionObjectPtr
	return (GDExtensionObjectPtr)(ret)
}

func GDExtensionInterface_object_get_instance_binding(p_struct *GDExtensionInterface, p_o GDExtensionObjectPtr, p_token unsafe.Pointer, p_callbacks *GDExtensionInstanceBindingCallbacks) unsafe.Pointer {
	arg0 := (*C.GDExtensionInterface)(p_struct)                   // GDExtensionInterface
	arg1 := (C.GDExtensionObjectPtr)(p_o)                         // GDExtensionObjectPtr
	arg2 := unsafe.Pointer(p_token)                               // void *
	arg3 := (*C.GDExtensionInstanceBindingCallbacks)(p_callbacks) // const GDExtensionInstanceBindingCallbacks *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_get_instance_binding")

	ret := C.cgo_callfn_GDExtensionInterface_object_get_instance_binding(arg0, arg1, arg2, arg3)

	// void *
	return unsafe.Pointer(ret)
}

func GDExtensionInterface_object_set_instance_binding(p_struct *GDExtensionInterface, p_o GDExtensionObjectPtr, p_token unsafe.Pointer, p_binding unsafe.Pointer, p_callbacks *GDExtensionInstanceBindingCallbacks) {
	arg0 := (*C.GDExtensionInterface)(p_struct)                   // GDExtensionInterface
	arg1 := (C.GDExtensionObjectPtr)(p_o)                         // GDExtensionObjectPtr
	arg2 := unsafe.Pointer(p_token)                               // void *
	arg3 := unsafe.Pointer(p_binding)                             // void *
	arg4 := (*C.GDExtensionInstanceBindingCallbacks)(p_callbacks) // const GDExtensionInstanceBindingCallbacks *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_set_instance_binding")

	C.cgo_callfn_GDExtensionInterface_object_set_instance_binding(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_object_set_instance(p_struct *GDExtensionInterface, p_o GDExtensionObjectPtr, p_classname GDExtensionConstStringNamePtr, p_instance GDExtensionClassInstancePtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)            // GDExtensionInterface
	arg1 := (C.GDExtensionObjectPtr)(p_o)                  // GDExtensionObjectPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_classname) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionClassInstancePtr)(p_instance)    // GDExtensionClassInstancePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_set_instance")

	C.cgo_callfn_GDExtensionInterface_object_set_instance(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_object_cast_to(p_struct *GDExtensionInterface, p_object GDExtensionConstObjectPtr, p_class_tag unsafe.Pointer) GDExtensionObjectPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionConstObjectPtr)(p_object) // GDExtensionConstObjectPtr
	arg2 := unsafe.Pointer(p_class_tag)             // void *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_cast_to")

	ret := C.cgo_callfn_GDExtensionInterface_object_cast_to(arg0, arg1, arg2)

	// GDExtensionObjectPtr
	return (GDExtensionObjectPtr)(ret)
}

func GDExtensionInterface_object_get_instance_from_id(p_struct *GDExtensionInterface, p_instance_id GDObjectInstanceID) GDExtensionObjectPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)   // GDExtensionInterface
	arg1 := (C.GDObjectInstanceID)(p_instance_id) // GDObjectInstanceID

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_get_instance_from_id")

	ret := C.cgo_callfn_GDExtensionInterface_object_get_instance_from_id(arg0, arg1)

	// GDExtensionObjectPtr
	return (GDExtensionObjectPtr)(ret)
}

func GDExtensionInterface_object_get_instance_id(p_struct *GDExtensionInterface, p_object GDExtensionConstObjectPtr) GDObjectInstanceID {
	arg0 := (*C.GDExtensionInterface)(p_struct)     // GDExtensionInterface
	arg1 := (C.GDExtensionConstObjectPtr)(p_object) // GDExtensionConstObjectPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_object_get_instance_id")

	ret := C.cgo_callfn_GDExtensionInterface_object_get_instance_id(arg0, arg1)

	// GDObjectInstanceID
	return (GDObjectInstanceID)(ret)
}

func GDExtensionInterface_ref_get_object(p_struct *GDExtensionInterface, p_ref GDExtensionConstRefPtr) GDExtensionObjectPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionConstRefPtr)(p_ref)   // GDExtensionConstRefPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_ref_get_object")

	ret := C.cgo_callfn_GDExtensionInterface_ref_get_object(arg0, arg1)

	// GDExtensionObjectPtr
	return (GDExtensionObjectPtr)(ret)
}

func GDExtensionInterface_ref_set_object(p_struct *GDExtensionInterface, p_ref GDExtensionRefPtr, p_object GDExtensionObjectPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct) // GDExtensionInterface
	arg1 := (C.GDExtensionRefPtr)(p_ref)        // GDExtensionRefPtr
	arg2 := (C.GDExtensionObjectPtr)(p_object)  // GDExtensionObjectPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_ref_set_object")

	C.cgo_callfn_GDExtensionInterface_ref_set_object(arg0, arg1, arg2)

}

func GDExtensionInterface_script_instance_create(p_struct *GDExtensionInterface, p_info *GDExtensionScriptInstanceInfo, p_instance_data GDExtensionScriptInstanceDataPtr) GDExtensionScriptInstancePtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)                   // GDExtensionInterface
	arg1 := (*C.GDExtensionScriptInstanceInfo)(p_info)            // const GDExtensionScriptInstanceInfo *
	arg2 := (C.GDExtensionScriptInstanceDataPtr)(p_instance_data) // GDExtensionScriptInstanceDataPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_script_instance_create")

	ret := C.cgo_callfn_GDExtensionInterface_script_instance_create(arg0, arg1, arg2)

	// GDExtensionScriptInstancePtr
	return (GDExtensionScriptInstancePtr)(ret)
}

func GDExtensionInterface_classdb_construct_object(p_struct *GDExtensionInterface, p_classname GDExtensionConstStringNamePtr) GDExtensionObjectPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)            // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringNamePtr)(p_classname) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_construct_object")

	ret := C.cgo_callfn_GDExtensionInterface_classdb_construct_object(arg0, arg1)

	// GDExtensionObjectPtr
	return (GDExtensionObjectPtr)(ret)
}

func GDExtensionInterface_classdb_get_method_bind(p_struct *GDExtensionInterface, p_classname GDExtensionConstStringNamePtr, p_methodname GDExtensionConstStringNamePtr, p_hash GDExtensionInt) GDExtensionMethodBindPtr {
	arg0 := (*C.GDExtensionInterface)(p_struct)             // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringNamePtr)(p_classname)  // GDExtensionConstStringNamePtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_methodname) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionInt)(p_hash)                      // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_get_method_bind")

	ret := C.cgo_callfn_GDExtensionInterface_classdb_get_method_bind(arg0, arg1, arg2, arg3)

	// GDExtensionMethodBindPtr
	return (GDExtensionMethodBindPtr)(ret)
}

func GDExtensionInterface_classdb_get_class_tag(p_struct *GDExtensionInterface, p_classname GDExtensionConstStringNamePtr) unsafe.Pointer {
	arg0 := (*C.GDExtensionInterface)(p_struct)            // GDExtensionInterface
	arg1 := (C.GDExtensionConstStringNamePtr)(p_classname) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_get_class_tag")

	ret := C.cgo_callfn_GDExtensionInterface_classdb_get_class_tag(arg0, arg1)

	// void *
	return unsafe.Pointer(ret)
}

func GDExtensionInterface_classdb_register_extension_class(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_parent_class_name GDExtensionConstStringNamePtr, p_extension_funcs *GDExtensionClassCreationInfo) {
	arg0 := (*C.GDExtensionInterface)(p_struct)                    // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)              // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name)        // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionConstStringNamePtr)(p_parent_class_name) // GDExtensionConstStringNamePtr
	arg4 := (*C.GDExtensionClassCreationInfo)(p_extension_funcs)   // const GDExtensionClassCreationInfo *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_classdb_register_extension_class_method(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_method_info *GDExtensionClassMethodInfo) {
	arg0 := (*C.GDExtensionInterface)(p_struct)             // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)       // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name) // GDExtensionConstStringNamePtr
	arg3 := (*C.GDExtensionClassMethodInfo)(p_method_info)  // const GDExtensionClassMethodInfo *

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_method")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_method(arg0, arg1, arg2, arg3)

}

func GDExtensionInterface_classdb_register_extension_class_integer_constant(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_enum_name GDExtensionConstStringNamePtr, p_constant_name GDExtensionConstStringNamePtr, p_constant_value GDExtensionInt, p_is_bitfield GDExtensionBool) {
	arg0 := (*C.GDExtensionInterface)(p_struct)                // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)          // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name)    // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionConstStringNamePtr)(p_enum_name)     // GDExtensionConstStringNamePtr
	arg4 := (C.GDExtensionConstStringNamePtr)(p_constant_name) // GDExtensionConstStringNamePtr
	arg5 := (C.GDExtensionInt)(p_constant_value)               // GDExtensionInt
	arg6 := (C.GDExtensionBool)(p_is_bitfield)                 // GDExtensionBool

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_integer_constant")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_integer_constant(arg0, arg1, arg2, arg3, arg4, arg5, arg6)

}

func GDExtensionInterface_classdb_register_extension_class_property(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_info *GDExtensionPropertyInfo, p_setter GDExtensionConstStringNamePtr, p_getter GDExtensionConstStringNamePtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)             // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)       // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name) // GDExtensionConstStringNamePtr
	arg3 := (*C.GDExtensionPropertyInfo)(p_info)            // const GDExtensionPropertyInfo *
	arg4 := (C.GDExtensionConstStringNamePtr)(p_setter)     // GDExtensionConstStringNamePtr
	arg5 := (C.GDExtensionConstStringNamePtr)(p_getter)     // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_property")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_property(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDExtensionInterface_classdb_register_extension_class_property_group(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_group_name GDExtensionConstStringPtr, p_prefix GDExtensionConstStringPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)             // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)       // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionConstStringPtr)(p_group_name)     // GDExtensionConstStringPtr
	arg4 := (C.GDExtensionConstStringPtr)(p_prefix)         // GDExtensionConstStringPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_property_group")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_property_group(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_classdb_register_extension_class_property_subgroup(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_subgroup_name GDExtensionConstStringPtr, p_prefix GDExtensionConstStringPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)             // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)       // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name) // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionConstStringPtr)(p_subgroup_name)  // GDExtensionConstStringPtr
	arg4 := (C.GDExtensionConstStringPtr)(p_prefix)         // GDExtensionConstStringPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_property_subgroup")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_property_subgroup(arg0, arg1, arg2, arg3, arg4)

}

func GDExtensionInterface_classdb_register_extension_class_signal(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr, p_signal_name GDExtensionConstStringNamePtr, p_argument_info *GDExtensionPropertyInfo, p_argument_count GDExtensionInt) {
	arg0 := (*C.GDExtensionInterface)(p_struct)              // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)        // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name)  // GDExtensionConstStringNamePtr
	arg3 := (C.GDExtensionConstStringNamePtr)(p_signal_name) // GDExtensionConstStringNamePtr
	arg4 := (*C.GDExtensionPropertyInfo)(p_argument_info)    // const GDExtensionPropertyInfo *
	arg5 := (C.GDExtensionInt)(p_argument_count)             // GDExtensionInt

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_signal")

	C.cgo_callfn_GDExtensionInterface_classdb_register_extension_class_signal(arg0, arg1, arg2, arg3, arg4, arg5)

}

func GDExtensionInterface_classdb_unregister_extension_class(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, p_class_name GDExtensionConstStringNamePtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)             // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library)       // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionConstStringNamePtr)(p_class_name) // GDExtensionConstStringNamePtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_classdb_unregister_extension_class")

	C.cgo_callfn_GDExtensionInterface_classdb_unregister_extension_class(arg0, arg1, arg2)

}

func GDExtensionInterface_get_library_path(p_struct *GDExtensionInterface, p_library GDExtensionClassLibraryPtr, r_path GDExtensionStringPtr) {
	arg0 := (*C.GDExtensionInterface)(p_struct)       // GDExtensionInterface
	arg1 := (C.GDExtensionClassLibraryPtr)(p_library) // GDExtensionClassLibraryPtr
	arg2 := (C.GDExtensionStringPtr)(r_path)          // GDExtensionStringPtr

	log.Debug("called C.cgo_callfn_GDExtensionInterface_get_library_path")

	C.cgo_callfn_GDExtensionInterface_get_library_path(arg0, arg1, arg2)

}

/* struct (8) GDExtensionInitialization */

func GDExtensionInitialization_initialize(p_struct *GDExtensionInitialization, userdata unsafe.Pointer, p_level GDExtensionInitializationLevel) {
	arg0 := (*C.GDExtensionInitialization)(p_struct)    // GDExtensionInitialization
	arg1 := unsafe.Pointer(userdata)                    // void *
	arg2 := (C.GDExtensionInitializationLevel)(p_level) // GDExtensionInitializationLevel

	log.Debug("called C.cgo_callfn_GDExtensionInitialization_initialize")

	C.cgo_callfn_GDExtensionInitialization_initialize(arg0, arg1, arg2)

}

func GDExtensionInitialization_deinitialize(p_struct *GDExtensionInitialization, userdata unsafe.Pointer, p_level GDExtensionInitializationLevel) {
	arg0 := (*C.GDExtensionInitialization)(p_struct)    // GDExtensionInitialization
	arg1 := unsafe.Pointer(userdata)                    // void *
	arg2 := (C.GDExtensionInitializationLevel)(p_level) // GDExtensionInitializationLevel

	log.Debug("called C.cgo_callfn_GDExtensionInitialization_deinitialize")

	C.cgo_callfn_GDExtensionInitialization_deinitialize(arg0, arg1, arg2)

}
