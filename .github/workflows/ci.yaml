name: godot-go CI

on:
  pull_request:
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - ".github/workflows/ci.yaml"

  push:
    paths:
      - "**/*.go"
      - "**/*.c"
      - "**/*.h"
      - ".github/workflows/ci.yaml"

jobs:
  run_test:
    name: "run tests"
    strategy:
      fail-fast: true
      matrix:
        go_version:
          - 1.15.x
        targets:
          - linux/amd64
          - darwin/amd64

    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build with xgo
        uses: crazy-max/ghaction-xgo@v1
        with:
          xgo_version: latest
          go_version: ${{ matrix.go_version }}
          dest: test/libs
          prefix: libgodotgo-test
          pkg: test/main.go
          targets: ${{ matrix.targets }}
          v: true
          x: false
          race: false
          ldflags: '-compressdwarf=false'
          buildmode: c-shared
      - name: List Artifacts Directory
        run: ls -alh test/libs
      - name: Install Godot 3.2.2 server
        run: |
          wget https://downloads.tuxfamily.org/godotengine/3.2.2/Godot_v3.2.2-stable_linux_server.64.zip
          sudo unzip Godot_v3.2.2-stable_linux_server.64.zip -d /usr/local/bin
          sudo ln -s Godot_v3.2.2-stable_linux_server.64 /usr/local/bin/godot3-server
      - name: Build Test
        if: ${{ contains(matrix.targets, 'linux/amd64') }}
        run: go run mage.go -v buildTest
      - name: Test
        if: ${{ contains(matrix.targets, 'linux/amd64') }}
        run: go run mage.go -v test
        env:
          GODOT_BIN: "/usr/local/bin/godot3-server"
          LOG_LEVEL: "debug"
          LANG: "en_US.utf8"
          CI: 1
